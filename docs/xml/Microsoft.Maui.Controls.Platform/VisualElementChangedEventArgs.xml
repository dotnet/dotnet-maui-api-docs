<Type Name="VisualElementChangedEventArgs" FullName="Microsoft.Maui.Controls.Platform.VisualElementChangedEventArgs">
  <TypeSignature Language="C#" Value="public class VisualElementChangedEventArgs : Microsoft.Maui.Controls.Platform.ElementChangedEventArgs&lt;Microsoft.Maui.Controls.VisualElement&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit VisualElementChangedEventArgs extends Microsoft.Maui.Controls.Platform.ElementChangedEventArgs`1&lt;class Microsoft.Maui.Controls.VisualElement&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Maui.Controls.Platform.VisualElementChangedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class VisualElementChangedEventArgs&#xA;Inherits ElementChangedEventArgs(Of VisualElement)" />
  <TypeSignature Language="C++ CLI" Value="public ref class VisualElementChangedEventArgs : Microsoft::Maui::Controls::Platform::ElementChangedEventArgs&lt;Microsoft::Maui::Controls::VisualElement ^&gt;" />
  <TypeSignature Language="F#" Value="type VisualElementChangedEventArgs = class&#xA;    inherit ElementChangedEventArgs&lt;VisualElement&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Maui.Controls.Platform.ElementChangedEventArgs&lt;Microsoft.Maui.Controls.VisualElement&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TElement">Microsoft.Maui.Controls.VisualElement</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisualElementChangedEventArgs (Microsoft.Maui.Controls.VisualElement? oldElement, Microsoft.Maui.Controls.VisualElement? newElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Maui.Controls.VisualElement oldElement, class Microsoft.Maui.Controls.VisualElement newElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Platform.VisualElementChangedEventArgs.#ctor(Microsoft.Maui.Controls.VisualElement,Microsoft.Maui.Controls.VisualElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (oldElement As VisualElement, newElement As VisualElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VisualElementChangedEventArgs(Microsoft::Maui::Controls::VisualElement ^ oldElement, Microsoft::Maui::Controls::VisualElement ^ newElement);" />
      <MemberSignature Language="F#" Value="new Microsoft.Maui.Controls.Platform.VisualElementChangedEventArgs : Microsoft.Maui.Controls.VisualElement * Microsoft.Maui.Controls.VisualElement -&gt; Microsoft.Maui.Controls.Platform.VisualElementChangedEventArgs" Usage="new Microsoft.Maui.Controls.Platform.VisualElementChangedEventArgs (oldElement, newElement)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="oldElement" Type="Microsoft.Maui.Controls.VisualElement" />
        <Parameter Name="newElement" Type="Microsoft.Maui.Controls.VisualElement" />
      </Parameters>
      <Docs>
        <param name="oldElement">To be added.</param>
        <param name="newElement">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
