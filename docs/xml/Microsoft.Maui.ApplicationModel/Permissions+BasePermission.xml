<Type Name="Permissions+BasePermission" FullName="Microsoft.Maui.ApplicationModel.Permissions+BasePermission">
  <TypeSignature Language="C#" Value="public abstract class Permissions.BasePermission" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi abstract beforefieldinit Permissions/BasePermission extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Maui.ApplicationModel.Permissions.BasePermission" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Permissions.BasePermission" />
  <TypeSignature Language="C++ CLI" Value="public: ref class Permissions::BasePermission abstract" />
  <TypeSignature Language="F#" Value="type Permissions.BasePermission = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Maui.Essentials</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Represents the abstract base class for all permissions. 
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BasePermission ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.ApplicationModel.Permissions.BasePermission.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BasePermission();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Essentials</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Maui.ApplicationModel.Permissions.BasePermission" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckStatusAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task&lt;Microsoft.Maui.ApplicationModel.PermissionStatus&gt; CheckStatusAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;valuetype Microsoft.Maui.ApplicationModel.PermissionStatus&gt; CheckStatusAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.ApplicationModel.Permissions.BasePermission.CheckStatusAsync" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CheckStatusAsync () As Task(Of PermissionStatus)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Threading::Tasks::Task&lt;Microsoft::Maui::ApplicationModel::PermissionStatus&gt; ^ CheckStatusAsync();" />
      <MemberSignature Language="F#" Value="abstract member CheckStatusAsync : unit -&gt; System.Threading.Tasks.Task&lt;Microsoft.Maui.ApplicationModel.PermissionStatus&gt;" Usage="basePermission.CheckStatusAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Essentials</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Maui.ApplicationModel.PermissionStatus&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Retrieves the current status of this permission.
            </summary>
        <returns>A <see cref="T:Microsoft.Maui.ApplicationModel.PermissionStatus" /> value indicating the current status of this permission.</returns>
        <remarks>
            Will throw <see cref="T:Microsoft.Maui.ApplicationModel.PermissionException" /> if a required entry was not found in the application manifest.
            Not all permissions require a manifest entry.
            </remarks>
        <exception cref="T:Microsoft.Maui.ApplicationModel.PermissionException">Thrown if a required entry was not found in the application manifest.</exception>
      </Docs>
    </Member>
    <Member MemberName="EnsureDeclared">
      <MemberSignature Language="C#" Value="public abstract void EnsureDeclared ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnsureDeclared() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.ApplicationModel.Permissions.BasePermission.EnsureDeclared" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub EnsureDeclared ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void EnsureDeclared();" />
      <MemberSignature Language="F#" Value="abstract member EnsureDeclared : unit -&gt; unit" Usage="basePermission.EnsureDeclared " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Essentials</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Ensures that a required entry matching this permission is found in the application manifest file.
            </summary>
        <remarks>
            Will throw <see cref="T:Microsoft.Maui.ApplicationModel.PermissionException" /> if a required entry was not found in the application manifest.
            Not all permissions require a manifest entry.
            </remarks>
        <exception cref="T:Microsoft.Maui.ApplicationModel.PermissionException">Thrown if a required entry was not found in the application manifest.</exception>
      </Docs>
    </Member>
    <Member MemberName="RequestAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task&lt;Microsoft.Maui.ApplicationModel.PermissionStatus&gt; RequestAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;valuetype Microsoft.Maui.ApplicationModel.PermissionStatus&gt; RequestAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.ApplicationModel.Permissions.BasePermission.RequestAsync" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function RequestAsync () As Task(Of PermissionStatus)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Threading::Tasks::Task&lt;Microsoft::Maui::ApplicationModel::PermissionStatus&gt; ^ RequestAsync();" />
      <MemberSignature Language="F#" Value="abstract member RequestAsync : unit -&gt; System.Threading.Tasks.Task&lt;Microsoft.Maui.ApplicationModel.PermissionStatus&gt;" Usage="basePermission.RequestAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Essentials</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Maui.ApplicationModel.PermissionStatus&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Requests this permission from the user for this application.
            </summary>
        <returns>A <see cref="T:Microsoft.Maui.ApplicationModel.PermissionStatus" /> value indicating the result of this permission request.</returns>
        <remarks>
            Will throw <see cref="T:Microsoft.Maui.ApplicationModel.PermissionException" /> if a required entry was not found in the application manifest.
            Not all permissions require a manifest entry.
            </remarks>
        <exception cref="T:Microsoft.Maui.ApplicationModel.PermissionException">Thrown if a required entry was not found in the application manifest.</exception>
      </Docs>
    </Member>
    <Member MemberName="ShouldShowRationale">
      <MemberSignature Language="C#" Value="public abstract bool ShouldShowRationale ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldShowRationale() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.ApplicationModel.Permissions.BasePermission.ShouldShowRationale" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ShouldShowRationale () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool ShouldShowRationale();" />
      <MemberSignature Language="F#" Value="abstract member ShouldShowRationale : unit -&gt; bool" Usage="basePermission.ShouldShowRationale " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Essentials</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Determines if an educational UI should be displayed explaining to the user how this permission will be used in the application.
            </summary>
        <returns>
          <see langword="true" /> if the user has denied or disabled this permission in the past, else <see langword="false" />.</returns>
        <remarks>Only used on Android, other platforms will always return <see langword="false" />.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
