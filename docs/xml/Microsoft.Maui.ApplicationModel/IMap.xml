<Type Name="IMap" FullName="Microsoft.Maui.ApplicationModel.IMap">
  <TypeSignature Language="C#" Value="public interface IMap" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMap" FrameworkAlternate="net-maui-7.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Maui.ApplicationModel.IMap" />
  <TypeSignature Language="VB.NET" Value="Public Interface IMap" />
  <TypeSignature Language="C++ CLI" Value="public interface class IMap" />
  <TypeSignature Language="F#" Value="type IMap = interface" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IMap" FrameworkAlternate="net-maui-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Maui.Essentials</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            The Map API enables an application to open the installed map application to a specific location or placemark.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="OpenAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task OpenAsync (Microsoft.Maui.Devices.Sensors.Placemark placemark, Microsoft.Maui.ApplicationModel.MapLaunchOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task OpenAsync(class Microsoft.Maui.Devices.Sensors.Placemark placemark, class Microsoft.Maui.ApplicationModel.MapLaunchOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.ApplicationModel.IMap.OpenAsync(Microsoft.Maui.Devices.Sensors.Placemark,Microsoft.Maui.ApplicationModel.MapLaunchOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenAsync (placemark As Placemark, options As MapLaunchOptions) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ OpenAsync(Microsoft::Maui::Devices::Sensors::Placemark ^ placemark, Microsoft::Maui::ApplicationModel::MapLaunchOptions ^ options);" />
      <MemberSignature Language="F#" Value="abstract member OpenAsync : Microsoft.Maui.Devices.Sensors.Placemark * Microsoft.Maui.ApplicationModel.MapLaunchOptions -&gt; System.Threading.Tasks.Task" Usage="iMap.OpenAsync (placemark, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Essentials</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="placemark" Type="Microsoft.Maui.Devices.Sensors.Placemark" />
        <Parameter Name="options" Type="Microsoft.Maui.ApplicationModel.MapLaunchOptions" />
      </Parameters>
      <Docs>
        <param name="placemark">Placemark to open in the map application.</param>
        <param name="options">Launch options to use.</param>
        <summary>
            Open the installed application to a specific location with launch options.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object with the current status of the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task OpenAsync (double latitude, double longitude, Microsoft.Maui.ApplicationModel.MapLaunchOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task OpenAsync(float64 latitude, float64 longitude, class Microsoft.Maui.ApplicationModel.MapLaunchOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.ApplicationModel.IMap.OpenAsync(System.Double,System.Double,Microsoft.Maui.ApplicationModel.MapLaunchOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenAsync (latitude As Double, longitude As Double, options As MapLaunchOptions) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ OpenAsync(double latitude, double longitude, Microsoft::Maui::ApplicationModel::MapLaunchOptions ^ options);" />
      <MemberSignature Language="F#" Value="abstract member OpenAsync : double * double * Microsoft.Maui.ApplicationModel.MapLaunchOptions -&gt; System.Threading.Tasks.Task" Usage="iMap.OpenAsync (latitude, longitude, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Essentials</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="latitude" Type="System.Double" />
        <Parameter Name="longitude" Type="System.Double" />
        <Parameter Name="options" Type="Microsoft.Maui.ApplicationModel.MapLaunchOptions" />
      </Parameters>
      <Docs>
        <param name="latitude">Target latitude.</param>
        <param name="longitude">Target longitude.</param>
        <param name="options">Launch options to use.</param>
        <summary>
            Open the installed application to a specific location with launch options.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> object with the current status of the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryOpenAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;bool&gt; TryOpenAsync (Microsoft.Maui.Devices.Sensors.Placemark placemark, Microsoft.Maui.ApplicationModel.MapLaunchOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; TryOpenAsync(class Microsoft.Maui.Devices.Sensors.Placemark placemark, class Microsoft.Maui.ApplicationModel.MapLaunchOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.ApplicationModel.IMap.TryOpenAsync(Microsoft.Maui.Devices.Sensors.Placemark,Microsoft.Maui.ApplicationModel.MapLaunchOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryOpenAsync (placemark As Placemark, options As MapLaunchOptions) As Task(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;bool&gt; ^ TryOpenAsync(Microsoft::Maui::Devices::Sensors::Placemark ^ placemark, Microsoft::Maui::ApplicationModel::MapLaunchOptions ^ options);" />
      <MemberSignature Language="F#" Value="abstract member TryOpenAsync : Microsoft.Maui.Devices.Sensors.Placemark * Microsoft.Maui.ApplicationModel.MapLaunchOptions -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="iMap.TryOpenAsync (placemark, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Essentials</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="placemark" Type="Microsoft.Maui.Devices.Sensors.Placemark" />
        <Parameter Name="options" Type="Microsoft.Maui.ApplicationModel.MapLaunchOptions" />
      </Parameters>
      <Docs>
        <param name="placemark">Placemark to open in the map application.</param>
        <param name="options">Launch options to use.</param>
        <summary>
            First checks if the installed map application can be opened,
            then opens the installed application to a specific placemark with launch options.
            </summary>
        <returns>
          <see langword="true" /> if the map application is opened, otherwise <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryOpenAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;bool&gt; TryOpenAsync (double latitude, double longitude, Microsoft.Maui.ApplicationModel.MapLaunchOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; TryOpenAsync(float64 latitude, float64 longitude, class Microsoft.Maui.ApplicationModel.MapLaunchOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.ApplicationModel.IMap.TryOpenAsync(System.Double,System.Double,Microsoft.Maui.ApplicationModel.MapLaunchOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryOpenAsync (latitude As Double, longitude As Double, options As MapLaunchOptions) As Task(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;bool&gt; ^ TryOpenAsync(double latitude, double longitude, Microsoft::Maui::ApplicationModel::MapLaunchOptions ^ options);" />
      <MemberSignature Language="F#" Value="abstract member TryOpenAsync : double * double * Microsoft.Maui.ApplicationModel.MapLaunchOptions -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="iMap.TryOpenAsync (latitude, longitude, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Essentials</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="latitude" Type="System.Double" />
        <Parameter Name="longitude" Type="System.Double" />
        <Parameter Name="options" Type="Microsoft.Maui.ApplicationModel.MapLaunchOptions" />
      </Parameters>
      <Docs>
        <param name="latitude">Target latitude.</param>
        <param name="longitude">Target longitude.</param>
        <param name="options">Launch options to use.</param>
        <summary>
            First checks if the installed map application can be opened,
            then opens the installed application to a specific location with launch options.
            </summary>
        <returns>
          <see langword="true" /> if the map application is opened, otherwise <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
