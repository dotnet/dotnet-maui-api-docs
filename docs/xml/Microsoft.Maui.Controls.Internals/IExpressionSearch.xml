<Type Name="IExpressionSearch" FullName="Microsoft.Maui.Controls.Internals.IExpressionSearch">
  <TypeSignature Language="C#" Value="public interface IExpressionSearch" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IExpressionSearch" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Maui.Controls.Internals.IExpressionSearch" />
  <TypeSignature Language="VB.NET" Value="Public Interface IExpressionSearch" />
  <TypeSignature Language="C++ CLI" Value="public interface class IExpressionSearch" />
  <TypeSignature Language="F#" Value="type IExpressionSearch = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="FindObjects&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;T&gt; FindObjects&lt;T&gt; (System.Linq.Expressions.Expression expression) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.List`1&lt;!!T&gt; FindObjects&lt;class T&gt;(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Internals.IExpressionSearch.FindObjects``1(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindObjects(Of T As Class) (expression As Expression) As List(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class System::Collections::Generic::List&lt;T&gt; ^ FindObjects(System::Linq::Expressions::Expression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member FindObjects : System.Linq.Expressions.Expression -&gt; System.Collections.Generic.List&lt;'T (requires 'T : null)&gt; (requires 'T : null)" Usage="iExpressionSearch.FindObjects expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="expression">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
