<Type Name="RelativeLayout+IRelativeList&lt;T&gt;" FullName="Microsoft.Maui.Controls.Compatibility.RelativeLayout+IRelativeList&lt;T&gt;">
  <TypeSignature Language="C#" Value="public interface RelativeLayout.IRelativeList&lt;T&gt; : System.Collections.Generic.ICollection&lt;T&gt;, System.Collections.Generic.IEnumerable&lt;T&gt;, System.Collections.Generic.IList&lt;T&gt; where T : View" />
  <TypeSignature Language="ILAsm" Value=".class nested public interface auto ansi abstract RelativeLayout/IRelativeList`1&lt;(class Microsoft.Maui.Controls.View) T&gt; implements class System.Collections.Generic.ICollection`1&lt;!T&gt;, class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.Generic.IList`1&lt;!T&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Maui.Controls.Compatibility.RelativeLayout.IRelativeList`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface RelativeLayout.IRelativeList(Of T)&#xA;Implements ICollection(Of T), IEnumerable(Of T), IList(Of T)" />
  <TypeSignature Language="C++ CLI" Value="public: generic &lt;typename T&gt;&#xA; where T : Viewinterface class RelativeLayout::IRelativeList : System::Collections::Generic::ICollection&lt;T&gt;, System::Collections::Generic::IEnumerable&lt;T&gt;, System::Collections::Generic::IList&lt;T&gt;" />
  <TypeSignature Language="F#" Value="type RelativeLayout.IRelativeList&lt;'T (requires 'T :&gt; View)&gt; = interface&#xA;    interface IList&lt;'T (requires 'T :&gt; View)&gt;&#xA;    interface ICollection&lt;'T (requires 'T :&gt; View)&gt;&#xA;    interface seq&lt;'T (requires 'T :&gt; View)&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <BaseTypeName>Microsoft.Maui.Controls.View</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IList&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (T view, System.Linq.Expressions.Expression&lt;Func&lt;Microsoft.Maui.Graphics.Rect&gt;&gt; bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(!T view, class System.Linq.Expressions.Expression`1&lt;class System.Func`1&lt;valuetype Microsoft.Maui.Graphics.Rect&gt;&gt; bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Compatibility.RelativeLayout.IRelativeList`1.Add(`0,System.Linq.Expressions.Expression{System.Func{Microsoft.Maui.Graphics.Rect}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (view As T, bounds As Expression(Of Func(Of Rect)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(T view, System::Linq::Expressions::Expression&lt;Func&lt;Microsoft::Maui::Graphics::Rect&gt; ^&gt; ^ bounds);" />
      <MemberSignature Language="F#" Value="abstract member Add : 'T * System.Linq.Expressions.Expression&lt;Func&lt;Microsoft.Maui.Graphics.Rect&gt;&gt; -&gt; unit" Usage="iRelativeList.Add (view, bounds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="T" />
        <Parameter Name="bounds" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;Microsoft.Maui.Graphics.Rect&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="view">To be added.</param>
        <param name="bounds">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (T view, Microsoft.Maui.Controls.Compatibility.Constraint xConstraint = default, Microsoft.Maui.Controls.Compatibility.Constraint yConstraint = default, Microsoft.Maui.Controls.Compatibility.Constraint widthConstraint = default, Microsoft.Maui.Controls.Compatibility.Constraint heightConstraint = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(!T view, class Microsoft.Maui.Controls.Compatibility.Constraint xConstraint, class Microsoft.Maui.Controls.Compatibility.Constraint yConstraint, class Microsoft.Maui.Controls.Compatibility.Constraint widthConstraint, class Microsoft.Maui.Controls.Compatibility.Constraint heightConstraint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Compatibility.RelativeLayout.IRelativeList`1.Add(`0,Microsoft.Maui.Controls.Compatibility.Constraint,Microsoft.Maui.Controls.Compatibility.Constraint,Microsoft.Maui.Controls.Compatibility.Constraint,Microsoft.Maui.Controls.Compatibility.Constraint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (view As T, Optional xConstraint As Constraint = Nothing, Optional yConstraint As Constraint = Nothing, Optional widthConstraint As Constraint = Nothing, Optional heightConstraint As Constraint = Nothing)" />
      <MemberSignature Language="F#" Value="abstract member Add : 'T * Microsoft.Maui.Controls.Compatibility.Constraint * Microsoft.Maui.Controls.Compatibility.Constraint * Microsoft.Maui.Controls.Compatibility.Constraint * Microsoft.Maui.Controls.Compatibility.Constraint -&gt; unit" Usage="iRelativeList.Add (view, xConstraint, yConstraint, widthConstraint, heightConstraint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="T" />
        <Parameter Name="xConstraint" Type="Microsoft.Maui.Controls.Compatibility.Constraint" />
        <Parameter Name="yConstraint" Type="Microsoft.Maui.Controls.Compatibility.Constraint" />
        <Parameter Name="widthConstraint" Type="Microsoft.Maui.Controls.Compatibility.Constraint" />
        <Parameter Name="heightConstraint" Type="Microsoft.Maui.Controls.Compatibility.Constraint" />
      </Parameters>
      <Docs>
        <param name="view">To be added.</param>
        <param name="xConstraint">To be added.</param>
        <param name="yConstraint">To be added.</param>
        <param name="widthConstraint">To be added.</param>
        <param name="heightConstraint">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (T view, System.Linq.Expressions.Expression&lt;Func&lt;double&gt;&gt; x = default, System.Linq.Expressions.Expression&lt;Func&lt;double&gt;&gt; y = default, System.Linq.Expressions.Expression&lt;Func&lt;double&gt;&gt; width = default, System.Linq.Expressions.Expression&lt;Func&lt;double&gt;&gt; height = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(!T view, class System.Linq.Expressions.Expression`1&lt;class System.Func`1&lt;float64&gt;&gt; x, class System.Linq.Expressions.Expression`1&lt;class System.Func`1&lt;float64&gt;&gt; y, class System.Linq.Expressions.Expression`1&lt;class System.Func`1&lt;float64&gt;&gt; width, class System.Linq.Expressions.Expression`1&lt;class System.Func`1&lt;float64&gt;&gt; height) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Compatibility.RelativeLayout.IRelativeList`1.Add(`0,System.Linq.Expressions.Expression{System.Func{System.Double}},System.Linq.Expressions.Expression{System.Func{System.Double}},System.Linq.Expressions.Expression{System.Func{System.Double}},System.Linq.Expressions.Expression{System.Func{System.Double}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (view As T, Optional x As Expression(Of Func(Of Double)) = Nothing, Optional y As Expression(Of Func(Of Double)) = Nothing, Optional width As Expression(Of Func(Of Double)) = Nothing, Optional height As Expression(Of Func(Of Double)) = Nothing)" />
      <MemberSignature Language="F#" Value="abstract member Add : 'T * System.Linq.Expressions.Expression&lt;Func&lt;double&gt;&gt; * System.Linq.Expressions.Expression&lt;Func&lt;double&gt;&gt; * System.Linq.Expressions.Expression&lt;Func&lt;double&gt;&gt; * System.Linq.Expressions.Expression&lt;Func&lt;double&gt;&gt; -&gt; unit" Usage="iRelativeList.Add (view, x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="T" />
        <Parameter Name="x" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;System.Double&gt;&gt;" />
        <Parameter Name="y" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;System.Double&gt;&gt;" />
        <Parameter Name="width" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;System.Double&gt;&gt;" />
        <Parameter Name="height" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;System.Double&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="view">To be added.</param>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <param name="width">To be added.</param>
        <param name="height">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
