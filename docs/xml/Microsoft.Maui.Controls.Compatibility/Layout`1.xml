<Type Name="Layout&lt;T&gt;" FullName="Microsoft.Maui.Controls.Compatibility.Layout&lt;T&gt;">
  <TypeSignature Language="C#" Value="public abstract class Layout&lt;T&gt; : Microsoft.Maui.Controls.Compatibility.Layout, Microsoft.Maui.Controls.IBindableLayout, Microsoft.Maui.Controls.IViewContainer&lt;T&gt;, Microsoft.Maui.ILayout, Microsoft.Maui.Layouts.ILayoutManager, System.Collections.Generic.ICollection&lt;Microsoft.Maui.IView&gt;, System.Collections.Generic.IEnumerable&lt;Microsoft.Maui.IView&gt;, System.Collections.Generic.IList&lt;Microsoft.Maui.IView&gt; where T : View" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Layout`1&lt;(class Microsoft.Maui.Controls.View) T&gt; extends Microsoft.Maui.Controls.Compatibility.Layout implements class Microsoft.Maui.Controls.IBindableLayout, class Microsoft.Maui.Controls.IViewContainer`1&lt;!T&gt;, class Microsoft.Maui.IContainer, class Microsoft.Maui.IElement, class Microsoft.Maui.ILayout, class Microsoft.Maui.IPadding, class Microsoft.Maui.ISafeAreaView, class Microsoft.Maui.ITransform, class Microsoft.Maui.IView, class Microsoft.Maui.Layouts.ILayoutManager, class System.Collections.Generic.ICollection`1&lt;class Microsoft.Maui.IView&gt;, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Maui.IView&gt;, class System.Collections.Generic.IList`1&lt;class Microsoft.Maui.IView&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Maui.Controls.Compatibility.Layout`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Layout(Of T)&#xA;Inherits Layout&#xA;Implements IBindableLayout, ICollection(Of IView), IEnumerable(Of IView), ILayout, ILayoutManager, IList(Of IView), IViewContainer(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA; where T : Viewpublic ref class Layout abstract : Microsoft::Maui::Controls::Compatibility::Layout, Microsoft::Maui::Controls::IBindableLayout, Microsoft::Maui::Controls::IViewContainer&lt;T&gt;, Microsoft::Maui::ILayout, Microsoft::Maui::Layouts::ILayoutManager, System::Collections::Generic::ICollection&lt;Microsoft::Maui::IView ^&gt;, System::Collections::Generic::IEnumerable&lt;Microsoft::Maui::IView ^&gt;, System::Collections::Generic::IList&lt;Microsoft::Maui::IView ^&gt;" />
  <TypeSignature Language="F#" Value="type Layout&lt;'T (requires 'T :&gt; View)&gt; = class&#xA;    inherit Layout&#xA;    interface ILayout&#xA;    interface IView&#xA;    interface IElement&#xA;    interface ITransform&#xA;    interface IContainer&#xA;    interface IList&lt;IView&gt;&#xA;    interface ICollection&lt;IView&gt;&#xA;    interface seq&lt;IView&gt;&#xA;    interface IEnumerable&#xA;    interface ISafeAreaView&#xA;    interface IPadding&#xA;    interface ILayoutManager&#xA;    interface IBindableLayout&#xA;    interface IViewContainer&lt;'T (requires 'T :&gt; View)&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <BaseTypeName>Microsoft.Maui.Controls.View</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.Maui.Controls.Compatibility.Layout</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Maui.Controls.IBindableLayout</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Maui.Controls.IViewContainer&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Maui.IContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Maui.IElement</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Maui.ILayout</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Maui.IPadding</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Maui.ISafeAreaView</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Maui.ITransform</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Maui.IView</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Maui.Layouts.ILayoutManager</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;Microsoft.Maui.IView&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;Microsoft.Maui.IView&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IList&lt;Microsoft.Maui.IView&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Microsoft.Maui.Controls.ContentProperty("Children")]</AttributeName>
      <AttributeName Language="F#">[&lt;Microsoft.Maui.Controls.ContentProperty("Children")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Layout ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Compatibility.Layout`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Layout();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Children">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;T&gt; Children { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;!T&gt; Children" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.Compatibility.Layout`1.Children" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Children As IList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;T&gt; ^ Children { System::Collections::Generic::IList&lt;T&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Children : System.Collections.Generic.IList&lt;'T (requires 'T :&gt; Microsoft.Maui.Controls.View)&gt;" Usage="Microsoft.Maui.Controls.Compatibility.Layout&lt;'T (requires 'T :&gt; Microsoft.Maui.Controls.View)&gt;.Children" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Maui.Controls.IViewContainer`1.Children</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Microsoft.Maui.IView this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Maui.IView Item(int32)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.Compatibility.Layout`1.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As IView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Maui::IView ^ default[int] { Microsoft::Maui::IView ^ get(int index); void set(int index, Microsoft::Maui::IView ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : Microsoft.Maui.IView with get, set" Usage="Microsoft.Maui.Controls.Compatibility.Layout&lt;'T (requires 'T :&gt; Microsoft.Maui.Controls.View)&gt;.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IList`1.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.IView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LayoutHandler">
      <MemberSignature Language="C#" Value="public Microsoft.Maui.ILayoutHandler LayoutHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Maui.ILayoutHandler LayoutHandler" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.Compatibility.Layout`1.LayoutHandler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LayoutHandler As ILayoutHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Maui::ILayoutHandler ^ LayoutHandler { Microsoft::Maui::ILayoutHandler ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LayoutHandler : Microsoft.Maui.ILayoutHandler" Usage="Microsoft.Maui.Controls.Compatibility.Layout&lt;'T (requires 'T :&gt; Microsoft.Maui.Controls.View)&gt;.LayoutHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.ILayoutHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Maui.Controls.IBindableLayout.Children">
      <MemberSignature Language="C#" Value="System.Collections.IList Microsoft.Maui.Controls.IBindableLayout.Children { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList Microsoft.Maui.Controls.IBindableLayout.Children" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.Compatibility.Layout`1.Microsoft#Maui#Controls#IBindableLayout#Children" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Children As IList Implements IBindableLayout.Children" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::IList ^ Microsoft::Maui::Controls::IBindableLayout::Children { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Microsoft.Maui.Controls.IBindableLayout.Children : System.Collections.IList" Usage="Microsoft.Maui.Controls.IBindableLayout.Children" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Maui.Controls.IBindableLayout.Children</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Maui.ILayout.ClipsToBounds">
      <MemberSignature Language="C#" Value="bool Microsoft.Maui.ILayout.ClipsToBounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Microsoft.Maui.ILayout.ClipsToBounds" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.Compatibility.Layout`1.Microsoft#Maui#ILayout#ClipsToBounds" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ClipsToBounds As Boolean Implements ILayout.ClipsToBounds" />
      <MemberSignature Language="C++ CLI" Value="property bool Microsoft::Maui::ILayout::ClipsToBounds { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Microsoft.Maui.ILayout.ClipsToBounds : bool" Usage="Microsoft.Maui.ILayout.ClipsToBounds" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Maui.ILayout.ClipsToBounds</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Maui.ISafeAreaView.IgnoreSafeArea">
      <MemberSignature Language="C#" Value="bool Microsoft.Maui.ISafeAreaView.IgnoreSafeArea { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Microsoft.Maui.ISafeAreaView.IgnoreSafeArea" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.Compatibility.Layout`1.Microsoft#Maui#ISafeAreaView#IgnoreSafeArea" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IgnoreSafeArea As Boolean Implements ISafeAreaView.IgnoreSafeArea" />
      <MemberSignature Language="C++ CLI" Value="property bool Microsoft::Maui::ISafeAreaView::IgnoreSafeArea { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Microsoft.Maui.ISafeAreaView.IgnoreSafeArea : bool" Usage="Microsoft.Maui.ISafeAreaView.IgnoreSafeArea" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Maui.ISafeAreaView.IgnoreSafeArea</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Maui.Layouts.ILayoutManager.ArrangeChildren">
      <MemberSignature Language="C#" Value="Microsoft.Maui.Graphics.Size ILayoutManager.ArrangeChildren (Microsoft.Maui.Graphics.Rect bounds);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype Microsoft.Maui.Graphics.Size Microsoft.Maui.Layouts.ILayoutManager.ArrangeChildren(valuetype Microsoft.Maui.Graphics.Rect bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Compatibility.Layout`1.Microsoft#Maui#Layouts#ILayoutManager#ArrangeChildren(Microsoft.Maui.Graphics.Rect)" />
      <MemberSignature Language="VB.NET" Value="Function ArrangeChildren (bounds As Rect) As Size Implements ILayoutManager.ArrangeChildren" />
      <MemberSignature Language="C++ CLI" Value=" virtual Microsoft::Maui::Graphics::Size Microsoft.Maui.Layouts.ILayoutManager.ArrangeChildren(Microsoft::Maui::Graphics::Rect bounds) = Microsoft::Maui::Layouts::ILayoutManager::ArrangeChildren;" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.Maui.Layouts.ILayoutManager.ArrangeChildren : Microsoft.Maui.Graphics.Rect -&gt; Microsoft.Maui.Graphics.Size&#xA;override this.Microsoft.Maui.Layouts.ILayoutManager.ArrangeChildren : Microsoft.Maui.Graphics.Rect -&gt; Microsoft.Maui.Graphics.Size" Usage="layout.Microsoft.Maui.Layouts.ILayoutManager.ArrangeChildren bounds" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Maui.Layouts.ILayoutManager.ArrangeChildren(Microsoft.Maui.Graphics.Rect)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Graphics.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bounds" Type="Microsoft.Maui.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="bounds">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Maui.Layouts.ILayoutManager.Measure">
      <MemberSignature Language="C#" Value="Microsoft.Maui.Graphics.Size ILayoutManager.Measure (double widthConstraint, double heightConstraint);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype Microsoft.Maui.Graphics.Size Microsoft.Maui.Layouts.ILayoutManager.Measure(float64 widthConstraint, float64 heightConstraint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Compatibility.Layout`1.Microsoft#Maui#Layouts#ILayoutManager#Measure(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Function Measure (widthConstraint As Double, heightConstraint As Double) As Size Implements ILayoutManager.Measure" />
      <MemberSignature Language="C++ CLI" Value=" virtual Microsoft::Maui::Graphics::Size Microsoft.Maui.Layouts.ILayoutManager.Measure(double widthConstraint, double heightConstraint) = Microsoft::Maui::Layouts::ILayoutManager::Measure;" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.Maui.Layouts.ILayoutManager.Measure : double * double -&gt; Microsoft.Maui.Graphics.Size&#xA;override this.Microsoft.Maui.Layouts.ILayoutManager.Measure : double * double -&gt; Microsoft.Maui.Graphics.Size" Usage="layout.Microsoft.Maui.Layouts.ILayoutManager.Measure (widthConstraint, heightConstraint)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Maui.Layouts.ILayoutManager.Measure(System.Double,System.Double)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Graphics.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="widthConstraint" Type="System.Double" />
        <Parameter Name="heightConstraint" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="widthConstraint">To be added.</param>
        <param name="heightConstraint">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAdded">
      <MemberSignature Language="C#" Value="protected virtual void OnAdded (T view);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAdded(!T view) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Compatibility.Layout`1.OnAdded(`0)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAdded (view As T)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAdded(T view);" />
      <MemberSignature Language="F#" Value="abstract member OnAdded : 'T -&gt; unit&#xA;override this.OnAdded : 'T -&gt; unit" Usage="layout.OnAdded view" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="T" />
      </Parameters>
      <Docs>
        <param name="view">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnChildAdded">
      <MemberSignature Language="C#" Value="protected override void OnChildAdded (Microsoft.Maui.Controls.Element child);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnChildAdded(class Microsoft.Maui.Controls.Element child) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Compatibility.Layout`1.OnChildAdded(Microsoft.Maui.Controls.Element)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnChildAdded (child As Element)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnChildAdded(Microsoft::Maui::Controls::Element ^ child);" />
      <MemberSignature Language="F#" Value="override this.OnChildAdded : Microsoft.Maui.Controls.Element -&gt; unit" Usage="layout.OnChildAdded child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Microsoft.Maui.Controls.Element" />
      </Parameters>
      <Docs>
        <param name="child">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnChildRemoved">
      <MemberSignature Language="C#" Value="protected override void OnChildRemoved (Microsoft.Maui.Controls.Element child, int oldLogicalIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnChildRemoved(class Microsoft.Maui.Controls.Element child, int32 oldLogicalIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Compatibility.Layout`1.OnChildRemoved(Microsoft.Maui.Controls.Element,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnChildRemoved (child As Element, oldLogicalIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnChildRemoved(Microsoft::Maui::Controls::Element ^ child, int oldLogicalIndex);" />
      <MemberSignature Language="F#" Value="override this.OnChildRemoved : Microsoft.Maui.Controls.Element * int -&gt; unit" Usage="layout.OnChildRemoved (child, oldLogicalIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Microsoft.Maui.Controls.Element" />
        <Parameter Name="oldLogicalIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="child">To be added.</param>
        <param name="oldLogicalIndex">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRemoved">
      <MemberSignature Language="C#" Value="protected virtual void OnRemoved (T view);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRemoved(!T view) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Compatibility.Layout`1.OnRemoved(`0)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRemoved (view As T)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRemoved(T view);" />
      <MemberSignature Language="F#" Value="abstract member OnRemoved : 'T -&gt; unit&#xA;override this.OnRemoved : 'T -&gt; unit" Usage="layout.OnRemoved view" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="T" />
      </Parameters>
      <Docs>
        <param name="view">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;Microsoft.Maui.IView&gt;.Add">
      <MemberSignature Language="C#" Value="void ICollection&lt;IView&gt;.Add (Microsoft.Maui.IView child);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;Microsoft.Maui.IView&gt;.Add(class Microsoft.Maui.IView child) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Compatibility.Layout`1.System#Collections#Generic#ICollection&lt;Microsoft#Maui#IView&gt;#Add(Microsoft.Maui.IView)" />
      <MemberSignature Language="VB.NET" Value="Sub Add (child As IView) Implements ICollection(Of IView).Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;Microsoft.Maui.IView&gt;.Add(Microsoft::Maui::IView ^ child) = System::Collections::Generic::ICollection&lt;Microsoft::Maui::IView ^&gt;::Add;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.ICollection&lt;Microsoft.Maui.IView&gt;.Add : Microsoft.Maui.IView -&gt; unit&#xA;override this.System.Collections.Generic.ICollection&lt;Microsoft.Maui.IView&gt;.Add : Microsoft.Maui.IView -&gt; unit" Usage="layout.System.Collections.Generic.ICollection&lt;Microsoft.Maui.IView&gt;.Add child" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Microsoft.Maui.IView" />
      </Parameters>
      <Docs>
        <param name="child">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;Microsoft.Maui.IView&gt;.Clear">
      <MemberSignature Language="C#" Value="void ICollection&lt;IView&gt;.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;Microsoft.Maui.IView&gt;.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Compatibility.Layout`1.System#Collections#Generic#ICollection&lt;Microsoft#Maui#IView&gt;#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements ICollection(Of IView).Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;Microsoft.Maui.IView&gt;.Clear() = System::Collections::Generic::ICollection&lt;Microsoft::Maui::IView ^&gt;::Clear;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.ICollection&lt;Microsoft.Maui.IView&gt;.Clear : unit -&gt; unit&#xA;override this.System.Collections.Generic.ICollection&lt;Microsoft.Maui.IView&gt;.Clear : unit -&gt; unit" Usage="layout.System.Collections.Generic.ICollection&lt;Microsoft.Maui.IView&gt;.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;Microsoft.Maui.IView&gt;.Contains">
      <MemberSignature Language="C#" Value="bool ICollection&lt;IView&gt;.Contains (Microsoft.Maui.IView child);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.ICollection&lt;Microsoft.Maui.IView&gt;.Contains(class Microsoft.Maui.IView child) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Compatibility.Layout`1.System#Collections#Generic#ICollection&lt;Microsoft#Maui#IView&gt;#Contains(Microsoft.Maui.IView)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (child As IView) As Boolean Implements ICollection(Of IView).Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Generic.ICollection&lt;Microsoft.Maui.IView&gt;.Contains(Microsoft::Maui::IView ^ child) = System::Collections::Generic::ICollection&lt;Microsoft::Maui::IView ^&gt;::Contains;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.ICollection&lt;Microsoft.Maui.IView&gt;.Contains : Microsoft.Maui.IView -&gt; bool&#xA;override this.System.Collections.Generic.ICollection&lt;Microsoft.Maui.IView&gt;.Contains : Microsoft.Maui.IView -&gt; bool" Usage="layout.System.Collections.Generic.ICollection&lt;Microsoft.Maui.IView&gt;.Contains child" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Microsoft.Maui.IView" />
      </Parameters>
      <Docs>
        <param name="child">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;Microsoft.Maui.IView&gt;.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection&lt;IView&gt;.CopyTo (Microsoft.Maui.IView[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;Microsoft.Maui.IView&gt;.CopyTo(class Microsoft.Maui.IView[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Compatibility.Layout`1.System#Collections#Generic#ICollection&lt;Microsoft#Maui#IView&gt;#CopyTo(Microsoft.Maui.IView[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (array As IView(), arrayIndex As Integer) Implements ICollection(Of IView).CopyTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;Microsoft.Maui.IView&gt;.CopyTo(cli::array &lt;Microsoft::Maui::IView ^&gt; ^ array, int arrayIndex) = System::Collections::Generic::ICollection&lt;Microsoft::Maui::IView ^&gt;::CopyTo;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.ICollection&lt;Microsoft.Maui.IView&gt;.CopyTo : Microsoft.Maui.IView[] * int -&gt; unit&#xA;override this.System.Collections.Generic.ICollection&lt;Microsoft.Maui.IView&gt;.CopyTo : Microsoft.Maui.IView[] * int -&gt; unit" Usage="layout.System.Collections.Generic.ICollection&lt;Microsoft.Maui.IView&gt;.CopyTo (array, arrayIndex)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="Microsoft.Maui.IView[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">To be added.</param>
        <param name="arrayIndex">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;Microsoft.Maui.IView&gt;.Count">
      <MemberSignature Language="C#" Value="int System.Collections.Generic.ICollection&lt;Microsoft.Maui.IView&gt;.Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Collections.Generic.ICollection&lt;Microsoft.Maui.IView&gt;.Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.Compatibility.Layout`1.System#Collections#Generic#ICollection&lt;Microsoft#Maui#IView&gt;#Count" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Count As Integer Implements ICollection(Of IView).Count" />
      <MemberSignature Language="C++ CLI" Value="property int System::Collections::Generic::ICollection&lt;Microsoft::Maui::IView&gt;::Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.Generic.ICollection&lt;Microsoft.Maui.IView&gt;.Count : int" Usage="System.Collections.Generic.ICollection&lt;Microsoft.Maui.IView&gt;.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;Microsoft.Maui.IView&gt;.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.Generic.ICollection&lt;Microsoft.Maui.IView&gt;.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.Generic.ICollection&lt;Microsoft.Maui.IView&gt;.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.Compatibility.Layout`1.System#Collections#Generic#ICollection&lt;Microsoft#Maui#IView&gt;#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements ICollection(Of IView).IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::Generic::ICollection&lt;Microsoft::Maui::IView&gt;::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.Generic.ICollection&lt;Microsoft.Maui.IView&gt;.IsReadOnly : bool" Usage="System.Collections.Generic.ICollection&lt;Microsoft.Maui.IView&gt;.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;Microsoft.Maui.IView&gt;.Remove">
      <MemberSignature Language="C#" Value="bool ICollection&lt;IView&gt;.Remove (Microsoft.Maui.IView child);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.ICollection&lt;Microsoft.Maui.IView&gt;.Remove(class Microsoft.Maui.IView child) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Compatibility.Layout`1.System#Collections#Generic#ICollection&lt;Microsoft#Maui#IView&gt;#Remove(Microsoft.Maui.IView)" />
      <MemberSignature Language="VB.NET" Value="Function Remove (child As IView) As Boolean Implements ICollection(Of IView).Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Generic.ICollection&lt;Microsoft.Maui.IView&gt;.Remove(Microsoft::Maui::IView ^ child) = System::Collections::Generic::ICollection&lt;Microsoft::Maui::IView ^&gt;::Remove;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.ICollection&lt;Microsoft.Maui.IView&gt;.Remove : Microsoft.Maui.IView -&gt; bool&#xA;override this.System.Collections.Generic.ICollection&lt;Microsoft.Maui.IView&gt;.Remove : Microsoft.Maui.IView -&gt; bool" Usage="layout.System.Collections.Generic.ICollection&lt;Microsoft.Maui.IView&gt;.Remove child" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Microsoft.Maui.IView" />
      </Parameters>
      <Docs>
        <param name="child">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;Microsoft.Maui.IView&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;Microsoft.Maui.IView&gt; IEnumerable&lt;IView&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class Microsoft.Maui.IView&gt; System.Collections.Generic.IEnumerable&lt;Microsoft.Maui.IView&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Compatibility.Layout`1.System#Collections#Generic#IEnumerable&lt;Microsoft#Maui#IView&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of IView) Implements IEnumerable(Of IView).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;Microsoft::Maui::IView ^&gt; ^ System.Collections.Generic.IEnumerable&lt;Microsoft.Maui.IView&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;Microsoft::Maui::IView ^&gt;::GetEnumerator;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.IEnumerable&lt;Microsoft.Maui.IView&gt;.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;Microsoft.Maui.IView&gt;&#xA;override this.System.Collections.Generic.IEnumerable&lt;Microsoft.Maui.IView&gt;.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;Microsoft.Maui.IView&gt;" Usage="layout.System.Collections.Generic.IEnumerable&lt;Microsoft.Maui.IView&gt;.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;Microsoft.Maui.IView&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IList&lt;Microsoft.Maui.IView&gt;.IndexOf">
      <MemberSignature Language="C#" Value="int IList&lt;IView&gt;.IndexOf (Microsoft.Maui.IView child);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.Generic.IList&lt;Microsoft.Maui.IView&gt;.IndexOf(class Microsoft.Maui.IView child) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Compatibility.Layout`1.System#Collections#Generic#IList&lt;Microsoft#Maui#IView&gt;#IndexOf(Microsoft.Maui.IView)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (child As IView) As Integer Implements IList(Of IView).IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.Generic.IList&lt;Microsoft.Maui.IView&gt;.IndexOf(Microsoft::Maui::IView ^ child) = System::Collections::Generic::IList&lt;Microsoft::Maui::IView ^&gt;::IndexOf;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.IList&lt;Microsoft.Maui.IView&gt;.IndexOf : Microsoft.Maui.IView -&gt; int&#xA;override this.System.Collections.Generic.IList&lt;Microsoft.Maui.IView&gt;.IndexOf : Microsoft.Maui.IView -&gt; int" Usage="layout.System.Collections.Generic.IList&lt;Microsoft.Maui.IView&gt;.IndexOf child" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.IndexOf(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Microsoft.Maui.IView" />
      </Parameters>
      <Docs>
        <param name="child">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IList&lt;Microsoft.Maui.IView&gt;.Insert">
      <MemberSignature Language="C#" Value="void IList&lt;IView&gt;.Insert (int index, Microsoft.Maui.IView child);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.IList&lt;Microsoft.Maui.IView&gt;.Insert(int32 index, class Microsoft.Maui.IView child) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Compatibility.Layout`1.System#Collections#Generic#IList&lt;Microsoft#Maui#IView&gt;#Insert(System.Int32,Microsoft.Maui.IView)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, child As IView) Implements IList(Of IView).Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.IList&lt;Microsoft.Maui.IView&gt;.Insert(int index, Microsoft::Maui::IView ^ child) = System::Collections::Generic::IList&lt;Microsoft::Maui::IView ^&gt;::Insert;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.IList&lt;Microsoft.Maui.IView&gt;.Insert : int * Microsoft.Maui.IView -&gt; unit&#xA;override this.System.Collections.Generic.IList&lt;Microsoft.Maui.IView&gt;.Insert : int * Microsoft.Maui.IView -&gt; unit" Usage="layout.System.Collections.Generic.IList&lt;Microsoft.Maui.IView&gt;.Insert (index, child)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="child" Type="Microsoft.Maui.IView" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="child">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IList&lt;Microsoft.Maui.IView&gt;.RemoveAt">
      <MemberSignature Language="C#" Value="void IList&lt;IView&gt;.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.IList&lt;Microsoft.Maui.IView&gt;.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Compatibility.Layout`1.System#Collections#Generic#IList&lt;Microsoft#Maui#IView&gt;#RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveAt (index As Integer) Implements IList(Of IView).RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.IList&lt;Microsoft.Maui.IView&gt;.RemoveAt(int index) = System::Collections::Generic::IList&lt;Microsoft::Maui::IView ^&gt;::RemoveAt;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.IList&lt;Microsoft.Maui.IView&gt;.RemoveAt : int -&gt; unit&#xA;override this.System.Collections.Generic.IList&lt;Microsoft.Maui.IView&gt;.RemoveAt : int -&gt; unit" Usage="layout.System.Collections.Generic.IList&lt;Microsoft.Maui.IView&gt;.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Compatibility.Layout`1.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="layout.System.Collections.IEnumerable.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
