<Type Name="BlazorWebView" FullName="Microsoft.AspNetCore.Components.WebView.Maui.BlazorWebView">
  <TypeSignature Language="C#" Value="public class BlazorWebView : Microsoft.Maui.Controls.View, Microsoft.AspNetCore.Components.WebView.Maui.IBlazorWebView" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BlazorWebView extends Microsoft.Maui.Controls.View implements class Microsoft.AspNetCore.Components.WebView.Maui.IBlazorWebView, class Microsoft.Maui.IElement, class Microsoft.Maui.ITransform, class Microsoft.Maui.IView" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Components.WebView.Maui.BlazorWebView" />
  <TypeSignature Language="VB.NET" Value="Public Class BlazorWebView&#xA;Inherits View&#xA;Implements IBlazorWebView" />
  <TypeSignature Language="C++ CLI" Value="public ref class BlazorWebView : Microsoft::Maui::Controls::View, Microsoft::AspNetCore::Components::WebView::Maui::IBlazorWebView" />
  <TypeSignature Language="F#" Value="type BlazorWebView = class&#xA;    inherit View&#xA;    interface IBlazorWebView&#xA;    interface IView&#xA;    interface IElement&#xA;    interface ITransform" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Components.WebView.Maui</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Maui.Controls.View</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Components.WebView.Maui.IBlazorWebView</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Maui.IElement</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Maui.ITransform</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Maui.IView</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            A <see cref="T:Microsoft.Maui.Controls.View" /> that can render Blazor content.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BlazorWebView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.WebView.Maui.BlazorWebView.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BlazorWebView();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.WebView.Maui</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Components.WebView.Maui.BlazorWebView" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlazorWebViewInitialized">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Microsoft.AspNetCore.Components.WebView.BlazorWebViewInitializedEventArgs&gt;? BlazorWebViewInitialized;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.AspNetCore.Components.WebView.BlazorWebViewInitializedEventArgs&gt; BlazorWebViewInitialized" />
      <MemberSignature Language="DocId" Value="E:Microsoft.AspNetCore.Components.WebView.Maui.BlazorWebView.BlazorWebViewInitialized" />
      <MemberSignature Language="VB.NET" Value="Public Event BlazorWebViewInitialized As EventHandler(Of BlazorWebViewInitializedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;Microsoft::AspNetCore::Components::WebView::BlazorWebViewInitializedEventArgs ^&gt; ^ BlazorWebViewInitialized;" />
      <MemberSignature Language="F#" Value="member this.BlazorWebViewInitialized : EventHandler&lt;Microsoft.AspNetCore.Components.WebView.BlazorWebViewInitializedEventArgs&gt; " Usage="member this.BlazorWebViewInitialized : System.EventHandler&lt;Microsoft.AspNetCore.Components.WebView.BlazorWebViewInitializedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.WebView.Maui</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.AspNetCore.Components.WebView.BlazorWebViewInitializedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Raised after the web view is initialized but before any component has been rendered. The event arguments provide the instance of the platform-specific web view control.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlazorWebViewInitializing">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Microsoft.AspNetCore.Components.WebView.BlazorWebViewInitializingEventArgs&gt;? BlazorWebViewInitializing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.AspNetCore.Components.WebView.BlazorWebViewInitializingEventArgs&gt; BlazorWebViewInitializing" />
      <MemberSignature Language="DocId" Value="E:Microsoft.AspNetCore.Components.WebView.Maui.BlazorWebView.BlazorWebViewInitializing" />
      <MemberSignature Language="VB.NET" Value="Public Event BlazorWebViewInitializing As EventHandler(Of BlazorWebViewInitializingEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;Microsoft::AspNetCore::Components::WebView::BlazorWebViewInitializingEventArgs ^&gt; ^ BlazorWebViewInitializing;" />
      <MemberSignature Language="F#" Value="member this.BlazorWebViewInitializing : EventHandler&lt;Microsoft.AspNetCore.Components.WebView.BlazorWebViewInitializingEventArgs&gt; " Usage="member this.BlazorWebViewInitializing : System.EventHandler&lt;Microsoft.AspNetCore.Components.WebView.BlazorWebViewInitializingEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.WebView.Maui</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.AspNetCore.Components.WebView.BlazorWebViewInitializingEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Raised before the web view is initialized. On some platforms this enables customizing the web view configuration.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFileProvider">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Extensions.FileProviders.IFileProvider CreateFileProvider (string contentRootDir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Extensions.FileProviders.IFileProvider CreateFileProvider(string contentRootDir) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.WebView.Maui.BlazorWebView.CreateFileProvider(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateFileProvider (contentRootDir As String) As IFileProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::Extensions::FileProviders::IFileProvider ^ CreateFileProvider(System::String ^ contentRootDir);" />
      <MemberSignature Language="F#" Value="abstract member CreateFileProvider : string -&gt; Microsoft.Extensions.FileProviders.IFileProvider&#xA;override this.CreateFileProvider : string -&gt; Microsoft.Extensions.FileProviders.IFileProvider" Usage="blazorWebView.CreateFileProvider contentRootDir" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Components.WebView.Maui.IBlazorWebView.CreateFileProvider(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.WebView.Maui</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.FileProviders.IFileProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentRootDir" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contentRootDir">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="HostPage">
      <MemberSignature Language="C#" Value="public string? HostPage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HostPage" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.WebView.Maui.BlazorWebView.HostPage" />
      <MemberSignature Language="VB.NET" Value="Public Property HostPage As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HostPage { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HostPage : string with get, set" Usage="Microsoft.AspNetCore.Components.WebView.Maui.BlazorWebView.HostPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.WebView.Maui</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the path to the HTML file to render.
            <para>This is an app relative path to the file such as <c>wwwroot\index.html</c></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.AspNetCore.Components.WebView.Maui.IBlazorWebView.BlazorWebViewInitialized">
      <MemberSignature Language="C#" Value="void IBlazorWebView.BlazorWebViewInitialized (Microsoft.AspNetCore.Components.WebView.BlazorWebViewInitializedEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Microsoft.AspNetCore.Components.WebView.Maui.IBlazorWebView.BlazorWebViewInitialized(class Microsoft.AspNetCore.Components.WebView.BlazorWebViewInitializedEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.WebView.Maui.BlazorWebView.Microsoft#AspNetCore#Components#WebView#Maui#IBlazorWebView#BlazorWebViewInitialized(Microsoft.AspNetCore.Components.WebView.BlazorWebViewInitializedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Sub BlazorWebViewInitialized (args As BlazorWebViewInitializedEventArgs) Implements IBlazorWebView.BlazorWebViewInitialized" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Microsoft.AspNetCore.Components.WebView.Maui.IBlazorWebView.BlazorWebViewInitialized(Microsoft::AspNetCore::Components::WebView::BlazorWebViewInitializedEventArgs ^ args) = Microsoft::AspNetCore::Components::WebView::Maui::IBlazorWebView::BlazorWebViewInitialized;" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.AspNetCore.Components.WebView.Maui.IBlazorWebView.BlazorWebViewInitialized : Microsoft.AspNetCore.Components.WebView.BlazorWebViewInitializedEventArgs -&gt; unit&#xA;override this.Microsoft.AspNetCore.Components.WebView.Maui.IBlazorWebView.BlazorWebViewInitialized : Microsoft.AspNetCore.Components.WebView.BlazorWebViewInitializedEventArgs -&gt; unit" Usage="blazorWebView.Microsoft.AspNetCore.Components.WebView.Maui.IBlazorWebView.BlazorWebViewInitialized args" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Components.WebView.Maui.IBlazorWebView.BlazorWebViewInitialized(Microsoft.AspNetCore.Components.WebView.BlazorWebViewInitializedEventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.WebView.Maui</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="Microsoft.AspNetCore.Components.WebView.BlazorWebViewInitializedEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.AspNetCore.Components.WebView.Maui.IBlazorWebView.BlazorWebViewInitializing">
      <MemberSignature Language="C#" Value="void IBlazorWebView.BlazorWebViewInitializing (Microsoft.AspNetCore.Components.WebView.BlazorWebViewInitializingEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Microsoft.AspNetCore.Components.WebView.Maui.IBlazorWebView.BlazorWebViewInitializing(class Microsoft.AspNetCore.Components.WebView.BlazorWebViewInitializingEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.WebView.Maui.BlazorWebView.Microsoft#AspNetCore#Components#WebView#Maui#IBlazorWebView#BlazorWebViewInitializing(Microsoft.AspNetCore.Components.WebView.BlazorWebViewInitializingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Sub BlazorWebViewInitializing (args As BlazorWebViewInitializingEventArgs) Implements IBlazorWebView.BlazorWebViewInitializing" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Microsoft.AspNetCore.Components.WebView.Maui.IBlazorWebView.BlazorWebViewInitializing(Microsoft::AspNetCore::Components::WebView::BlazorWebViewInitializingEventArgs ^ args) = Microsoft::AspNetCore::Components::WebView::Maui::IBlazorWebView::BlazorWebViewInitializing;" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.AspNetCore.Components.WebView.Maui.IBlazorWebView.BlazorWebViewInitializing : Microsoft.AspNetCore.Components.WebView.BlazorWebViewInitializingEventArgs -&gt; unit&#xA;override this.Microsoft.AspNetCore.Components.WebView.Maui.IBlazorWebView.BlazorWebViewInitializing : Microsoft.AspNetCore.Components.WebView.BlazorWebViewInitializingEventArgs -&gt; unit" Usage="blazorWebView.Microsoft.AspNetCore.Components.WebView.Maui.IBlazorWebView.BlazorWebViewInitializing args" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Components.WebView.Maui.IBlazorWebView.BlazorWebViewInitializing(Microsoft.AspNetCore.Components.WebView.BlazorWebViewInitializingEventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.WebView.Maui</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="Microsoft.AspNetCore.Components.WebView.BlazorWebViewInitializingEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.AspNetCore.Components.WebView.Maui.IBlazorWebView.JSComponents">
      <MemberSignature Language="C#" Value="Microsoft.AspNetCore.Components.Web.JSComponentConfigurationStore Microsoft.AspNetCore.Components.WebView.Maui.IBlazorWebView.JSComponents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Components.Web.JSComponentConfigurationStore Microsoft.AspNetCore.Components.WebView.Maui.IBlazorWebView.JSComponents" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.WebView.Maui.BlazorWebView.Microsoft#AspNetCore#Components#WebView#Maui#IBlazorWebView#JSComponents" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property JSComponents As JSComponentConfigurationStore Implements IBlazorWebView.JSComponents" />
      <MemberSignature Language="C++ CLI" Value="property Microsoft::AspNetCore::Components::Web::JSComponentConfigurationStore ^ Microsoft::AspNetCore::Components::WebView::Maui::IBlazorWebView::JSComponents { Microsoft::AspNetCore::Components::Web::JSComponentConfigurationStore ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Microsoft.AspNetCore.Components.WebView.Maui.IBlazorWebView.JSComponents : Microsoft.AspNetCore.Components.Web.JSComponentConfigurationStore" Usage="Microsoft.AspNetCore.Components.WebView.Maui.IBlazorWebView.JSComponents" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.AspNetCore.Components.WebView.Maui.IBlazorWebView.JSComponents</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.WebView.Maui</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Components.Web.JSComponentConfigurationStore</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.AspNetCore.Components.WebView.Maui.IBlazorWebView.UrlLoading">
      <MemberSignature Language="C#" Value="void IBlazorWebView.UrlLoading (Microsoft.AspNetCore.Components.WebView.UrlLoadingEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Microsoft.AspNetCore.Components.WebView.Maui.IBlazorWebView.UrlLoading(class Microsoft.AspNetCore.Components.WebView.UrlLoadingEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.WebView.Maui.BlazorWebView.Microsoft#AspNetCore#Components#WebView#Maui#IBlazorWebView#UrlLoading(Microsoft.AspNetCore.Components.WebView.UrlLoadingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Sub UrlLoading (args As UrlLoadingEventArgs) Implements IBlazorWebView.UrlLoading" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Microsoft.AspNetCore.Components.WebView.Maui.IBlazorWebView.UrlLoading(Microsoft::AspNetCore::Components::WebView::UrlLoadingEventArgs ^ args) = Microsoft::AspNetCore::Components::WebView::Maui::IBlazorWebView::UrlLoading;" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.AspNetCore.Components.WebView.Maui.IBlazorWebView.UrlLoading : Microsoft.AspNetCore.Components.WebView.UrlLoadingEventArgs -&gt; unit&#xA;override this.Microsoft.AspNetCore.Components.WebView.Maui.IBlazorWebView.UrlLoading : Microsoft.AspNetCore.Components.WebView.UrlLoadingEventArgs -&gt; unit" Usage="blazorWebView.Microsoft.AspNetCore.Components.WebView.Maui.IBlazorWebView.UrlLoading args" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Components.WebView.Maui.IBlazorWebView.UrlLoading(Microsoft.AspNetCore.Components.WebView.UrlLoadingEventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.WebView.Maui</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="Microsoft.AspNetCore.Components.WebView.UrlLoadingEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="RootComponents">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Components.WebView.Maui.RootComponentsCollection RootComponents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Components.WebView.Maui.RootComponentsCollection RootComponents" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.WebView.Maui.BlazorWebView.RootComponents" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootComponents As RootComponentsCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Components::WebView::Maui::RootComponentsCollection ^ RootComponents { Microsoft::AspNetCore::Components::WebView::Maui::RootComponentsCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RootComponents : Microsoft.AspNetCore.Components.WebView.Maui.RootComponentsCollection" Usage="Microsoft.AspNetCore.Components.WebView.Maui.BlazorWebView.RootComponents" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.AspNetCore.Components.WebView.Maui.IBlazorWebView.RootComponents</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.WebView.Maui</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Components.WebView.Maui.RootComponentsCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc cref="P:Microsoft.AspNetCore.Components.WebView.Maui.IBlazorWebView.RootComponents" />
      </Docs>
    </Member>
    <Member MemberName="StartPath">
      <MemberSignature Language="C#" Value="public string StartPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StartPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.WebView.Maui.BlazorWebView.StartPath" />
      <MemberSignature Language="VB.NET" Value="Public Property StartPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StartPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StartPath : string with get, set" Usage="Microsoft.AspNetCore.Components.WebView.Maui.BlazorWebView.StartPath" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.AspNetCore.Components.WebView.Maui.IBlazorWebView.StartPath</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.WebView.Maui</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the path for initial navigation within the Blazor navigation context when the Blazor component is finished loading.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartPathProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty StartPathProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty StartPathProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.AspNetCore.Components.WebView.Maui.BlazorWebView.StartPathProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StartPathProperty As BindableProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Maui::Controls::BindableProperty ^ StartPathProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable StartPathProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.AspNetCore.Components.WebView.Maui.BlazorWebView.StartPathProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.WebView.Maui</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Bindable property for <see cref="P:Microsoft.AspNetCore.Components.WebView.Maui.BlazorWebView.StartPath" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryDispatchAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;bool&gt; TryDispatchAsync (Action&lt;IServiceProvider&gt; workItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; TryDispatchAsync(class System.Action`1&lt;class System.IServiceProvider&gt; workItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.WebView.Maui.BlazorWebView.TryDispatchAsync(System.Action{System.IServiceProvider})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TryDispatchAsync (workItem As Action(Of IServiceProvider)) As Task(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;bool&gt; ^ TryDispatchAsync(Action&lt;IServiceProvider ^&gt; ^ workItem);" />
      <MemberSignature Language="F#" Value="abstract member TryDispatchAsync : Action&lt;IServiceProvider&gt; -&gt; System.Threading.Tasks.Task&lt;bool&gt;&#xA;override this.TryDispatchAsync : Action&lt;IServiceProvider&gt; -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="blazorWebView.TryDispatchAsync workItem" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.WebView.Maui</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workItem" Type="System.Action&lt;System.IServiceProvider&gt;" />
      </Parameters>
      <Docs>
        <param name="workItem">The action to call.</param>
        <summary>
            Calls the specified <paramref name="workItem" /> asynchronously and passes in the scoped services available to Razor components.
            </summary>
        <returns>Returns a <see cref="T:System.Threading.Tasks.Task" /> representing <c>true</c> if the <paramref name="workItem" /> was called, or <c>false</c> if it was not called because Blazor is not currently running.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="workItem" /> is <c>null</c>.</exception>
      </Docs>
    </Member>
    <Member MemberName="UrlLoading">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Microsoft.AspNetCore.Components.WebView.UrlLoadingEventArgs&gt;? UrlLoading;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.AspNetCore.Components.WebView.UrlLoadingEventArgs&gt; UrlLoading" />
      <MemberSignature Language="DocId" Value="E:Microsoft.AspNetCore.Components.WebView.Maui.BlazorWebView.UrlLoading" />
      <MemberSignature Language="VB.NET" Value="Public Event UrlLoading As EventHandler(Of UrlLoadingEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;Microsoft::AspNetCore::Components::WebView::UrlLoadingEventArgs ^&gt; ^ UrlLoading;" />
      <MemberSignature Language="F#" Value="member this.UrlLoading : EventHandler&lt;Microsoft.AspNetCore.Components.WebView.UrlLoadingEventArgs&gt; " Usage="member this.UrlLoading : System.EventHandler&lt;Microsoft.AspNetCore.Components.WebView.UrlLoadingEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.WebView.Maui</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.AspNetCore.Components.WebView.UrlLoadingEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Allows customizing how links are opened.
            By default, opens internal links in the webview and external links in an external app.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
