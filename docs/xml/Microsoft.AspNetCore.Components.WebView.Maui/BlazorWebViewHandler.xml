<Type Name="BlazorWebViewHandler" FullName="Microsoft.AspNetCore.Components.WebView.Maui.BlazorWebViewHandler">
  <TypeSignature Language="C#" Value="public class BlazorWebViewHandler : Microsoft.Maui.Handlers.ViewHandler&lt;Microsoft.AspNetCore.Components.WebView.Maui.IBlazorWebView,object&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BlazorWebViewHandler extends Microsoft.Maui.Handlers.ViewHandler`2&lt;class Microsoft.AspNetCore.Components.WebView.Maui.IBlazorWebView, object&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Components.WebView.Maui.BlazorWebViewHandler" />
  <TypeSignature Language="VB.NET" Value="Public Class BlazorWebViewHandler&#xA;Inherits ViewHandler(Of IBlazorWebView, Object)" />
  <TypeSignature Language="C++ CLI" Value="public ref class BlazorWebViewHandler : Microsoft::Maui::Handlers::ViewHandler&lt;Microsoft::AspNetCore::Components::WebView::Maui::IBlazorWebView ^, System::Object ^&gt;" />
  <TypeSignature Language="F#" Value="type BlazorWebViewHandler = class&#xA;    inherit ViewHandler&lt;IBlazorWebView, obj&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Components.WebView.Maui</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Maui.Handlers.ViewHandler&lt;Microsoft.AspNetCore.Components.WebView.Maui.IBlazorWebView,System.Object&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">Microsoft.AspNetCore.Components.WebView.Maui.IBlazorWebView</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="!1">System.Object</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1, 1 })]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1, 1 })&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            A <see cref="T:Microsoft.Maui.Handlers.ViewHandler" /> for <see cref="T:Microsoft.AspNetCore.Components.WebView.Maui.BlazorWebView" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BlazorWebViewHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.WebView.Maui.BlazorWebViewHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BlazorWebViewHandler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.WebView.Maui</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Components.WebView.Maui.BlazorWebViewHandler" /> with default mappings.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BlazorWebViewHandler (Microsoft.Maui.PropertyMapper? mapper);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Maui.PropertyMapper mapper) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.WebView.Maui.BlazorWebViewHandler.#ctor(Microsoft.Maui.PropertyMapper)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mapper As PropertyMapper)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BlazorWebViewHandler(Microsoft::Maui::PropertyMapper ^ mapper);" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Components.WebView.Maui.BlazorWebViewHandler : Microsoft.Maui.PropertyMapper -&gt; Microsoft.AspNetCore.Components.WebView.Maui.BlazorWebViewHandler" Usage="new Microsoft.AspNetCore.Components.WebView.Maui.BlazorWebViewHandler mapper" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.WebView.Maui</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mapper" Type="Microsoft.Maui.PropertyMapper" />
      </Parameters>
      <Docs>
        <param name="mapper">The property mappings.</param>
        <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Components.WebView.Maui.BlazorWebViewHandler" /> using the specified mappings.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlazorWebViewMapper">
      <MemberSignature Language="C#" Value="public static Microsoft.Maui.PropertyMapper&lt;Microsoft.AspNetCore.Components.WebView.Maui.IBlazorWebView,Microsoft.AspNetCore.Components.WebView.Maui.BlazorWebViewHandler&gt; BlazorWebViewMapper;" />
      <MemberSignature Language="ILAsm" Value=".field public static class Microsoft.Maui.PropertyMapper`2&lt;class Microsoft.AspNetCore.Components.WebView.Maui.IBlazorWebView, class Microsoft.AspNetCore.Components.WebView.Maui.BlazorWebViewHandler&gt; BlazorWebViewMapper" />
      <MemberSignature Language="DocId" Value="F:Microsoft.AspNetCore.Components.WebView.Maui.BlazorWebViewHandler.BlazorWebViewMapper" />
      <MemberSignature Language="VB.NET" Value="Public Shared BlazorWebViewMapper As PropertyMapper(Of IBlazorWebView, BlazorWebViewHandler) " />
      <MemberSignature Language="C++ CLI" Value="public: static Microsoft::Maui::PropertyMapper&lt;Microsoft::AspNetCore::Components::WebView::Maui::IBlazorWebView ^, Microsoft::AspNetCore::Components::WebView::Maui::BlazorWebViewHandler ^&gt; ^ BlazorWebViewMapper;" />
      <MemberSignature Language="F#" Value=" staticval mutable BlazorWebViewMapper : Microsoft.Maui.PropertyMapper&lt;Microsoft.AspNetCore.Components.WebView.Maui.IBlazorWebView, Microsoft.AspNetCore.Components.WebView.Maui.BlazorWebViewHandler&gt;" Usage="Microsoft.AspNetCore.Components.WebView.Maui.BlazorWebViewHandler.BlazorWebViewMapper" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.WebView.Maui</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.PropertyMapper&lt;Microsoft.AspNetCore.Components.WebView.Maui.IBlazorWebView,Microsoft.AspNetCore.Components.WebView.Maui.BlazorWebViewHandler&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            This field is part of MAUI infrastructure and is not intended for use by application code.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFileProvider">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Extensions.FileProviders.IFileProvider CreateFileProvider (string contentRootDir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Extensions.FileProviders.IFileProvider CreateFileProvider(string contentRootDir) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.WebView.Maui.BlazorWebViewHandler.CreateFileProvider(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateFileProvider (contentRootDir As String) As IFileProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::Extensions::FileProviders::IFileProvider ^ CreateFileProvider(System::String ^ contentRootDir);" />
      <MemberSignature Language="F#" Value="abstract member CreateFileProvider : string -&gt; Microsoft.Extensions.FileProviders.IFileProvider&#xA;override this.CreateFileProvider : string -&gt; Microsoft.Extensions.FileProviders.IFileProvider" Usage="blazorWebViewHandler.CreateFileProvider contentRootDir" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.WebView.Maui</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.FileProviders.IFileProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentRootDir" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contentRootDir">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc cref="M:Microsoft.AspNetCore.Components.WebView.Maui.IBlazorWebView.CreateFileProvider(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CreatePlatformView">
      <MemberSignature Language="C#" Value="protected override object CreatePlatformView ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object CreatePlatformView() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.WebView.Maui.BlazorWebViewHandler.CreatePlatformView" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreatePlatformView () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ CreatePlatformView();" />
      <MemberSignature Language="F#" Value="override this.CreatePlatformView : unit -&gt; obj" Usage="blazorWebViewHandler.CreatePlatformView " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.WebView.Maui</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc cref="M:Microsoft.Maui.Handlers.ViewHandler`2.CreatePlatformView" />
      </Docs>
    </Member>
    <Member MemberName="MapHostPage">
      <MemberSignature Language="C#" Value="public static void MapHostPage (Microsoft.AspNetCore.Components.WebView.Maui.BlazorWebViewHandler handler, Microsoft.AspNetCore.Components.WebView.Maui.IBlazorWebView webView);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MapHostPage(class Microsoft.AspNetCore.Components.WebView.Maui.BlazorWebViewHandler handler, class Microsoft.AspNetCore.Components.WebView.Maui.IBlazorWebView webView) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.WebView.Maui.BlazorWebViewHandler.MapHostPage(Microsoft.AspNetCore.Components.WebView.Maui.BlazorWebViewHandler,Microsoft.AspNetCore.Components.WebView.Maui.IBlazorWebView)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub MapHostPage (handler As BlazorWebViewHandler, webView As IBlazorWebView)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MapHostPage(Microsoft::AspNetCore::Components::WebView::Maui::BlazorWebViewHandler ^ handler, Microsoft::AspNetCore::Components::WebView::Maui::IBlazorWebView ^ webView);" />
      <MemberSignature Language="F#" Value="static member MapHostPage : Microsoft.AspNetCore.Components.WebView.Maui.BlazorWebViewHandler * Microsoft.AspNetCore.Components.WebView.Maui.IBlazorWebView -&gt; unit" Usage="Microsoft.AspNetCore.Components.WebView.Maui.BlazorWebViewHandler.MapHostPage (handler, webView)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.WebView.Maui</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="Microsoft.AspNetCore.Components.WebView.Maui.BlazorWebViewHandler" />
        <Parameter Name="webView" Type="Microsoft.AspNetCore.Components.WebView.Maui.IBlazorWebView" />
      </Parameters>
      <Docs>
        <param name="handler">The <see cref="T:Microsoft.AspNetCore.Components.WebView.Maui.BlazorWebViewHandler" />.</param>
        <param name="webView">The <see cref="T:Microsoft.AspNetCore.Components.WebView.Maui.IBlazorWebView" />.</param>
        <summary>
            Maps the <see cref="P:Microsoft.AspNetCore.Components.WebView.Maui.IBlazorWebView.HostPage" /> property to the specified handler.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MapRootComponents">
      <MemberSignature Language="C#" Value="public static void MapRootComponents (Microsoft.AspNetCore.Components.WebView.Maui.BlazorWebViewHandler handler, Microsoft.AspNetCore.Components.WebView.Maui.IBlazorWebView webView);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MapRootComponents(class Microsoft.AspNetCore.Components.WebView.Maui.BlazorWebViewHandler handler, class Microsoft.AspNetCore.Components.WebView.Maui.IBlazorWebView webView) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.WebView.Maui.BlazorWebViewHandler.MapRootComponents(Microsoft.AspNetCore.Components.WebView.Maui.BlazorWebViewHandler,Microsoft.AspNetCore.Components.WebView.Maui.IBlazorWebView)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub MapRootComponents (handler As BlazorWebViewHandler, webView As IBlazorWebView)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MapRootComponents(Microsoft::AspNetCore::Components::WebView::Maui::BlazorWebViewHandler ^ handler, Microsoft::AspNetCore::Components::WebView::Maui::IBlazorWebView ^ webView);" />
      <MemberSignature Language="F#" Value="static member MapRootComponents : Microsoft.AspNetCore.Components.WebView.Maui.BlazorWebViewHandler * Microsoft.AspNetCore.Components.WebView.Maui.IBlazorWebView -&gt; unit" Usage="Microsoft.AspNetCore.Components.WebView.Maui.BlazorWebViewHandler.MapRootComponents (handler, webView)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.WebView.Maui</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="Microsoft.AspNetCore.Components.WebView.Maui.BlazorWebViewHandler" />
        <Parameter Name="webView" Type="Microsoft.AspNetCore.Components.WebView.Maui.IBlazorWebView" />
      </Parameters>
      <Docs>
        <param name="handler">The <see cref="T:Microsoft.AspNetCore.Components.WebView.Maui.BlazorWebViewHandler" />.</param>
        <param name="webView">The <see cref="T:Microsoft.AspNetCore.Components.WebView.Maui.IBlazorWebView" />.</param>
        <summary>
            Maps the <see cref="P:Microsoft.AspNetCore.Components.WebView.Maui.IBlazorWebView.RootComponents" /> property to the specified handler.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryDispatchAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;bool&gt; TryDispatchAsync (Action&lt;IServiceProvider&gt; workItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; TryDispatchAsync(class System.Action`1&lt;class System.IServiceProvider&gt; workItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.WebView.Maui.BlazorWebViewHandler.TryDispatchAsync(System.Action{System.IServiceProvider})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TryDispatchAsync (workItem As Action(Of IServiceProvider)) As Task(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;bool&gt; ^ TryDispatchAsync(Action&lt;IServiceProvider ^&gt; ^ workItem);" />
      <MemberSignature Language="F#" Value="abstract member TryDispatchAsync : Action&lt;IServiceProvider&gt; -&gt; System.Threading.Tasks.Task&lt;bool&gt;&#xA;override this.TryDispatchAsync : Action&lt;IServiceProvider&gt; -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="blazorWebViewHandler.TryDispatchAsync workItem" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components.WebView.Maui</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workItem" Type="System.Action&lt;System.IServiceProvider&gt;" />
      </Parameters>
      <Docs>
        <param name="workItem">The action to call.</param>
        <summary>
            Calls the specified <paramref name="workItem" /> asynchronously and passes in the scoped services available to Razor components.
            </summary>
        <returns>Returns a <see cref="T:System.Threading.Tasks.Task" /> representing <c>true</c> if the <paramref name="workItem" /> was called, or <c>false</c> if it was not called because Blazor is not currently running.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="workItem" /> is <c>null</c>.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
