<Type Name="VisualElement" FullName="Microsoft.Maui.Controls.VisualElement">
  <TypeSignature Language="C#" Value="public class VisualElement : Microsoft.Maui.Controls.NavigableElement, Microsoft.Maui.Controls.IAnimatable, Microsoft.Maui.Controls.IVisualElementController, Microsoft.Maui.IView" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit VisualElement extends Microsoft.Maui.Controls.NavigableElement implements class Microsoft.Maui.Controls.IAnimatable, class Microsoft.Maui.Controls.IElementController, class Microsoft.Maui.Controls.IVisualElementController, class Microsoft.Maui.IElement, class Microsoft.Maui.ITransform, class Microsoft.Maui.IView" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Maui.Controls.VisualElement" />
  <TypeSignature Language="VB.NET" Value="Public Class VisualElement&#xA;Inherits NavigableElement&#xA;Implements IAnimatable, IView, IVisualElementController" />
  <TypeSignature Language="C++ CLI" Value="public ref class VisualElement : Microsoft::Maui::Controls::NavigableElement, Microsoft::Maui::Controls::IAnimatable, Microsoft::Maui::Controls::IVisualElementController, Microsoft::Maui::IView" />
  <TypeSignature Language="F#" Value="type VisualElement = class&#xA;    inherit NavigableElement&#xA;    interface IView&#xA;    interface IElement&#xA;    interface ITransform&#xA;    interface IAnimatable&#xA;    interface IVisualElementController&#xA;    interface IElementController" FrameworkAlternate="net-maui-7.0" />
  <TypeSignature Language="F#" Value="type VisualElement = class&#xA;    inherit NavigableElement&#xA;    interface IAnimatable&#xA;    interface IVisualElementController&#xA;    interface IElementController&#xA;    interface IView&#xA;    interface IElement&#xA;    interface ITransform" FrameworkAlternate="net-maui-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Maui.Controls.NavigableElement</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Maui.Controls.IAnimatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Maui.Controls.IElementController</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Maui.Controls.IVisualElementController</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Maui.IElement</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Maui.ITransform</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Maui.IView</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            An <see cref="T:Microsoft.Maui.Controls.Element" /> that occupies an area on the screen, has a visual appearance, and can obtain touch input.
            </summary>
    <remarks>
            The base class for most Microsoft.Maui.Controls on-screen elements. Provides most properties, events, and methods for presenting an item on screen.
            </remarks>
    <remarks>
      <para>The base class for most Microsoft.Maui.Controls on-screen elements. Provides most properties, events, and methods for presenting an item on screen.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal VisualElement ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.VisualElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; VisualElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Maui.Controls.VisualElement" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnchorX">
      <MemberSignature Language="C#" Value="public double AnchorX { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 AnchorX" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.AnchorX" />
      <MemberSignature Language="VB.NET" Value="Public Property AnchorX As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double AnchorX { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.AnchorX : double with get, set" Usage="Microsoft.Maui.Controls.VisualElement.AnchorX" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the X component of the center point for any transform operation, relative to the bounds of the element. This is a bindable property.
            </summary>
        <value>The value that declares the X component of the transform. The default value is 0.5.</value>
        <remarks>The default value is 0.5.</remarks>
        <altmember cref="P:Microsoft.Maui.Controls.VisualElement.AnchorY" />
      </Docs>
    </Member>
    <Member MemberName="AnchorXProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty AnchorXProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty AnchorXProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.AnchorXProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AnchorXProperty As BindableProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Maui::Controls::BindableProperty ^ AnchorXProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AnchorXProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.VisualElement.AnchorXProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bindable property for <see cref="P:Microsoft.Maui.Controls.VisualElement.AnchorX" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnchorY">
      <MemberSignature Language="C#" Value="public double AnchorY { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 AnchorY" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.AnchorY" />
      <MemberSignature Language="VB.NET" Value="Public Property AnchorY As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double AnchorY { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.AnchorY : double with get, set" Usage="Microsoft.Maui.Controls.VisualElement.AnchorY" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the Y component of the center point for any transform operation, relative to the bounds of the element. This is a bindable property.
            </summary>
        <value>The value that declares the Y component of the transform. The default value is 0.5.</value>
        <remarks>The default value is 0.5.</remarks>
        <altmember cref="P:Microsoft.Maui.Controls.VisualElement.AnchorX" />
      </Docs>
    </Member>
    <Member MemberName="AnchorYProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty AnchorYProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty AnchorYProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.AnchorYProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AnchorYProperty As BindableProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Maui::Controls::BindableProperty ^ AnchorYProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AnchorYProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.VisualElement.AnchorYProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bindable property for <see cref="P:Microsoft.Maui.Controls.VisualElement.AnchorY" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Arrange">
      <MemberSignature Language="C#" Value="public void Arrange (Microsoft.Maui.Graphics.Rect bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Arrange(valuetype Microsoft.Maui.Graphics.Rect bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.VisualElement.Arrange(Microsoft.Maui.Graphics.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Arrange (bounds As Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Arrange(Microsoft::Maui::Graphics::Rect bounds);" />
      <MemberSignature Language="F#" Value="member this.Arrange : Microsoft.Maui.Graphics.Rect -&gt; unit" Usage="visualElement.Arrange bounds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bounds" Type="Microsoft.Maui.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="bounds">The final size that the parent computes for the child in layout, provided as a <see cref="T:Microsoft.Maui.Graphics.Rect" /> value.</param>
        <summary>
            Positions child objects and determines a size for an element.
            </summary>
        <remarks>Parent objects that implement custom layout for their child elements should call this method from their layout override implementations to form a recursive layout update.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ArrangeOverride">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.Maui.Graphics.Size ArrangeOverride (Microsoft.Maui.Graphics.Rect bounds);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype Microsoft.Maui.Graphics.Size ArrangeOverride(valuetype Microsoft.Maui.Graphics.Rect bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.VisualElement.ArrangeOverride(Microsoft.Maui.Graphics.Rect)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ArrangeOverride (bounds As Rect) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Microsoft::Maui::Graphics::Size ArrangeOverride(Microsoft::Maui::Graphics::Rect bounds);" />
      <MemberSignature Language="F#" Value="abstract member ArrangeOverride : Microsoft.Maui.Graphics.Rect -&gt; Microsoft.Maui.Graphics.Size&#xA;override this.ArrangeOverride : Microsoft.Maui.Graphics.Rect -&gt; Microsoft.Maui.Graphics.Size" Usage="visualElement.ArrangeOverride bounds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Graphics.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bounds" Type="Microsoft.Maui.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="bounds">The new bounds of the element.</param>
        <summary>
            Allows subclasses to override <see cref="M:Microsoft.Maui.Controls.VisualElement.Arrange(Microsoft.Maui.Graphics.Rect)" /> even though
            the interface has to be explicitly implemented to avoid conflict with the old <see cref="M:Microsoft.Maui.Controls.VisualElement.Arrange(Microsoft.Maui.Graphics.Rect)" /> method.
            </summary>
        <returns>The resulting size of this element's frame by the platform.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Background">
      <MemberSignature Language="C#" Value="public Microsoft.Maui.Controls.Brush Background { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Maui.Controls.Brush Background" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.Background" />
      <MemberSignature Language="VB.NET" Value="Public Property Background As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Maui::Controls::Brush ^ Background { Microsoft::Maui::Controls::Brush ^ get(); void set(Microsoft::Maui::Controls::Brush ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Background : Microsoft.Maui.Controls.Brush with get, set" Usage="Microsoft.Maui.Controls.VisualElement.Background" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(Microsoft.Maui.Controls.BrushTypeConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(Microsoft.Maui.Controls.BrushTypeConverter))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the <see cref="T:Microsoft.Maui.Controls.Brush" /> which will be used to fill the background of an element. This is a bindable property.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundColor">
      <MemberSignature Language="C#" Value="public Microsoft.Maui.Graphics.Color BackgroundColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Maui.Graphics.Color BackgroundColor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.BackgroundColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BackgroundColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Maui::Graphics::Color ^ BackgroundColor { Microsoft::Maui::Graphics::Color ^ get(); void set(Microsoft::Maui::Graphics::Color ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundColor : Microsoft.Maui.Graphics.Color with get, set" Usage="Microsoft.Maui.Controls.VisualElement.BackgroundColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Graphics.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the <see cref="T:Microsoft.Maui.Graphics.Color" /> which will fill the background of an element. This is a bindable property.
            </summary>
        <value>The color that is used to fill the background of a VisualElement.</value>
        <remarks>For background gradients and such, use <see cref="P:Microsoft.Maui.Controls.VisualElement.Background" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundColorProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty BackgroundColorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty BackgroundColorProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.BackgroundColorProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BackgroundColorProperty As BindableProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Maui::Controls::BindableProperty ^ BackgroundColorProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable BackgroundColorProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.VisualElement.BackgroundColorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bindable property for <see cref="P:Microsoft.Maui.Controls.VisualElement.BackgroundColor" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty BackgroundProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty BackgroundProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.BackgroundProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BackgroundProperty As BindableProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Maui::Controls::BindableProperty ^ BackgroundProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable BackgroundProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.VisualElement.BackgroundProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bindable property for <see cref="P:Microsoft.Maui.Controls.VisualElement.Background" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BatchBegin">
      <MemberSignature Language="C#" Value="public void BatchBegin ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BatchBegin() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.VisualElement.BatchBegin" />
      <MemberSignature Language="VB.NET" Value="Public Sub BatchBegin ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BatchBegin();" />
      <MemberSignature Language="F#" Value="abstract member BatchBegin : unit -&gt; unit&#xA;override this.BatchBegin : unit -&gt; unit" Usage="visualElement.BatchBegin " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Maui.Controls.IAnimatable.BatchBegin</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Signals the start of a batch of changes to the elements properties. This can benefit performance if a bigger number of property values are changed.
            </summary>
        <remarks>
          <para>Application authors will generally not need to batch updates manually as the animation framework will do this for them.</para>
          <para>When the operation is done, <see cref="M:Microsoft.Maui.Controls.VisualElement.BatchCommit" /> should be called.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BatchCommit">
      <MemberSignature Language="C#" Value="public void BatchCommit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BatchCommit() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.VisualElement.BatchCommit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BatchCommit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BatchCommit();" />
      <MemberSignature Language="F#" Value="abstract member BatchCommit : unit -&gt; unit&#xA;override this.BatchCommit : unit -&gt; unit" Usage="visualElement.BatchCommit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Maui.Controls.IAnimatable.BatchCommit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Signals the end of a batch of commands to the element and that those commands should now be committed.
            </summary>
        <remarks>This method only ensures that updates sent during the batch have been committed. It does not ensure that they were not committed before calling this.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BatchCommitted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Microsoft.Maui.Controls.Internals.EventArg&lt;Microsoft.Maui.Controls.VisualElement&gt;&gt; BatchCommitted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.Maui.Controls.Internals.EventArg`1&lt;class Microsoft.Maui.Controls.VisualElement&gt;&gt; BatchCommitted" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Maui.Controls.VisualElement.BatchCommitted" />
      <MemberSignature Language="VB.NET" Value="Public Event BatchCommitted As EventHandler(Of EventArg(Of VisualElement)) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler&lt;Microsoft::Maui::Controls::Internals::EventArg&lt;Microsoft::Maui::Controls::VisualElement ^&gt; ^&gt; ^ BatchCommitted;" />
      <MemberSignature Language="F#" Value="member this.BatchCommitted : EventHandler&lt;Microsoft.Maui.Controls.Internals.EventArg&lt;Microsoft.Maui.Controls.VisualElement&gt;&gt; " Usage="member this.BatchCommitted : System.EventHandler&lt;Microsoft.Maui.Controls.Internals.EventArg&lt;Microsoft.Maui.Controls.VisualElement&gt;&gt; " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:Microsoft.Maui.Controls.IVisualElementController.BatchCommitted</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.Maui.Controls.Internals.EventArg&lt;Microsoft.Maui.Controls.VisualElement&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Occurs when a batch of property changes have been committed by calling <see cref="M:Microsoft.Maui.Controls.VisualElement.BatchCommit" />.
            </summary>
        <remarks>For internal use only. This API can be changed or removed without notice at any time.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Batched">
      <MemberSignature Language="C#" Value="public bool Batched { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Batched" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.Batched" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Batched As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Batched { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Batched : bool" Usage="Microsoft.Maui.Controls.VisualElement.Batched" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Maui.Controls.IVisualElementController.Batched</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a value that indicates there are batched changes done for this element.
            </summary>
        <value>To be added.</value>
        <remarks>For internal use only. This API can be changed or removed without notice at any time.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Behaviors">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Maui.Controls.Behavior&gt; Behaviors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Maui.Controls.Behavior&gt; Behaviors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.Behaviors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Behaviors As IList(Of Behavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;Microsoft::Maui::Controls::Behavior ^&gt; ^ Behaviors { System::Collections::Generic::IList&lt;Microsoft::Maui::Controls::Behavior ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Behaviors : System.Collections.Generic.IList&lt;Microsoft.Maui.Controls.Behavior&gt;" Usage="Microsoft.Maui.Controls.VisualElement.Behaviors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Maui.Controls.Behavior&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the list of <see cref="T:Microsoft.Maui.Controls.Behavior" /> objects associated to this element. This is a read-only bindable property.
            </summary>
        <value />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BehaviorsProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty BehaviorsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty BehaviorsProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.BehaviorsProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BehaviorsProperty As BindableProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Maui::Controls::BindableProperty ^ BehaviorsProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable BehaviorsProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.VisualElement.BehaviorsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bindable property for <see cref="P:Microsoft.Maui.Controls.VisualElement.Behaviors" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public Microsoft.Maui.Graphics.Rect Bounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Maui.Graphics.Rect Bounds" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.Bounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bounds As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Maui::Graphics::Rect Bounds { Microsoft::Maui::Graphics::Rect get(); };" />
      <MemberSignature Language="F#" Value="member this.Bounds : Microsoft.Maui.Graphics.Rect" Usage="Microsoft.Maui.Controls.VisualElement.Bounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Graphics.Rect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the bounds of the element in device-independent units.
            </summary>
        <value>The bounds of an element, in device-independent units.</value>
        <remarks>
          <see cref="P:Microsoft.Maui.Controls.VisualElement.Bounds" /> is assigned during layout.</remarks>
        <altmember cref="P:Microsoft.Maui.Controls.VisualElement.WidthRequest" />
        <altmember cref="P:Microsoft.Maui.Controls.VisualElement.HeightRequest" />
      </Docs>
    </Member>
    <Member MemberName="ChangeVisualState">
      <MemberSignature Language="C#" Value="protected internal virtual void ChangeVisualState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void ChangeVisualState() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.VisualElement.ChangeVisualState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub ChangeVisualState ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void ChangeVisualState();" />
      <MemberSignature Language="F#" Value="abstract member ChangeVisualState : unit -&gt; unit&#xA;override this.ChangeVisualState : unit -&gt; unit" Usage="visualElement.ChangeVisualState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Changes the current visual state based on this elements current property values.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildrenReordered">
      <MemberSignature Language="C#" Value="public event EventHandler ChildrenReordered;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ChildrenReordered" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Maui.Controls.VisualElement.ChildrenReordered" />
      <MemberSignature Language="VB.NET" Value="Public Event ChildrenReordered As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ChildrenReordered;" />
      <MemberSignature Language="F#" Value="member this.ChildrenReordered : EventHandler " Usage="member this.ChildrenReordered : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Occurs when the order of this element's children changes.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clip">
      <MemberSignature Language="C#" Value="public Microsoft.Maui.Controls.Shapes.Geometry Clip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Maui.Controls.Shapes.Geometry Clip" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.Clip" />
      <MemberSignature Language="VB.NET" Value="Public Property Clip As Geometry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Maui::Controls::Shapes::Geometry ^ Clip { Microsoft::Maui::Controls::Shapes::Geometry ^ get(); void set(Microsoft::Maui::Controls::Shapes::Geometry ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Clip : Microsoft.Maui.Controls.Shapes.Geometry with get, set" Usage="Microsoft.Maui.Controls.VisualElement.Clip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(Microsoft.Maui.Controls.Shapes.PathGeometryConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(Microsoft.Maui.Controls.Shapes.PathGeometryConverter))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.Shapes.Geometry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Specifies the clipping region for an element. This is a bindable property.
            </summary>
        <value>To be added.</value>
        <remarks>When an element is rendered, only the portion of the element that falls inside the clipping <see cref="T:Microsoft.Maui.Controls.Shapes.Geometry" /> is displayed, while any content that extends outside the clipping region is clipped (that is, not displayed).</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClipProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty ClipProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty ClipProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.ClipProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClipProperty As BindableProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Maui::Controls::BindableProperty ^ ClipProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ClipProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.VisualElement.ClipProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bindable property for <see cref="P:Microsoft.Maui.Controls.VisualElement.Clip" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlsVisualElementMapper">
      <MemberSignature Language="C#" Value="public static Microsoft.Maui.IPropertyMapper&lt;Microsoft.Maui.IView,Microsoft.Maui.IViewHandler&gt; ControlsVisualElementMapper;" />
      <MemberSignature Language="ILAsm" Value=".field public static class Microsoft.Maui.IPropertyMapper`2&lt;class Microsoft.Maui.IView, class Microsoft.Maui.IViewHandler&gt; ControlsVisualElementMapper" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.ControlsVisualElementMapper" />
      <MemberSignature Language="VB.NET" Value="Public Shared ControlsVisualElementMapper As IPropertyMapper(Of IView, IViewHandler) " />
      <MemberSignature Language="C++ CLI" Value="public: static Microsoft::Maui::IPropertyMapper&lt;Microsoft::Maui::IView ^, Microsoft::Maui::IViewHandler ^&gt; ^ ControlsVisualElementMapper;" />
      <MemberSignature Language="F#" Value=" staticval mutable ControlsVisualElementMapper : Microsoft.Maui.IPropertyMapper&lt;Microsoft.Maui.IView, Microsoft.Maui.IViewHandler&gt;" Usage="Microsoft.Maui.Controls.VisualElement.ControlsVisualElementMapper" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-maui-8.0">
          <AttributeName Language="C#">[System.Obsolete("Use ViewHandler.ViewMapper instead.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use ViewHandler.ViewMapper instead.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.IPropertyMapper&lt;Microsoft.Maui.IView,Microsoft.Maui.IViewHandler&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesiredSize">
      <MemberSignature Language="C#" Value="public Microsoft.Maui.Graphics.Size DesiredSize { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Maui.Graphics.Size DesiredSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.DesiredSize" />
      <MemberSignature Language="VB.NET" Value="Public Property DesiredSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:  property Microsoft::Maui::Graphics::Size DesiredSize {  public:&#xA;Microsoft::Maui::Graphics::Size get(); protected:&#xA; void set(Microsoft::Maui::Graphics::Size value); };" />
      <MemberSignature Language="F#" Value="member this.DesiredSize : Microsoft.Maui.Graphics.Size with get, set" Usage="Microsoft.Maui.Controls.VisualElement.DesiredSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Graphics.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the size that this element computed during the measure pass of the layout process.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableLayout">
      <MemberSignature Language="C#" Value="public bool DisableLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisableLayout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.DisableLayout" />
      <MemberSignature Language="VB.NET" Value="Public Property DisableLayout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisableLayout { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DisableLayout : bool with get, set" Usage="Microsoft.Maui.Controls.VisualElement.DisableLayout" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Maui.Controls.IVisualElementController.DisableLayout</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a value that indicates that layout for this element is disabled.
            </summary>
        <value>To be added.</value>
        <remarks>For internal use only. This API can be changed or removed without notice at any time.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~VisualElement ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.VisualElement.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!VisualElement ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="visualElement.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlowDirection">
      <MemberSignature Language="C#" Value="public Microsoft.Maui.FlowDirection FlowDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Maui.FlowDirection FlowDirection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.FlowDirection" />
      <MemberSignature Language="VB.NET" Value="Public Property FlowDirection As FlowDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Maui::FlowDirection FlowDirection { Microsoft::Maui::FlowDirection get(); void set(Microsoft::Maui::FlowDirection value); };" />
      <MemberSignature Language="F#" Value="member this.FlowDirection : Microsoft.Maui.FlowDirection with get, set" Usage="Microsoft.Maui.Controls.VisualElement.FlowDirection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(Microsoft.Maui.Controls.FlowDirectionConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(Microsoft.Maui.Controls.FlowDirectionConverter))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.FlowDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the layout flow direction. This is a bindable property.
            </summary>
        <value>The layout flow direction.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlowDirectionProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty FlowDirectionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty FlowDirectionProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.FlowDirectionProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FlowDirectionProperty As BindableProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Maui::Controls::BindableProperty ^ FlowDirectionProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FlowDirectionProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.VisualElement.FlowDirectionProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bindable property for <see cref="P:Microsoft.Maui.Controls.VisualElement.FlowDirection" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public bool Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.VisualElement.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Function Focus () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Focus();" />
      <MemberSignature Language="F#" Value="abstract member Focus : unit -&gt; bool&#xA;override this.Focus : unit -&gt; bool" Usage="visualElement.Focus " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Maui.IView.Focus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Attempts to set focus to this element.
            </summary>
        <returns>
          <see langword="true" /> if the keyboard focus was set to this element; <see langword="false" /> if the call to this method did not force a focus change.
            </returns>
        <remarks>Element must be able to receive focus for this to work. Calling <see cref="M:Microsoft.Maui.Controls.VisualElement.Focus" /> on offscreen or unrealized elements has undefined behavior.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusChangeRequested">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Microsoft.Maui.Controls.VisualElement.FocusRequestArgs&gt; FocusChangeRequested;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.Maui.Controls.VisualElement/FocusRequestArgs&gt; FocusChangeRequested" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Maui.Controls.VisualElement.FocusChangeRequested" />
      <MemberSignature Language="VB.NET" Value="Public Event FocusChangeRequested As EventHandler(Of VisualElement.FocusRequestArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler&lt;Microsoft::Maui::Controls::VisualElement::FocusRequestArgs ^&gt; ^ FocusChangeRequested;" />
      <MemberSignature Language="F#" Value="member this.FocusChangeRequested : EventHandler&lt;Microsoft.Maui.Controls.VisualElement.FocusRequestArgs&gt; " Usage="member this.FocusChangeRequested : System.EventHandler&lt;Microsoft.Maui.Controls.VisualElement.FocusRequestArgs&gt; " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:Microsoft.Maui.Controls.IVisualElementController.FocusChangeRequested</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-maui-8.0">
          <AttributeName Language="C#">[System.Obsolete("This is now handled through VisualElement.MapFocus, this event handler will be removed in the future.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This is now handled through VisualElement.MapFocus, this event handler will be removed in the future.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.Maui.Controls.VisualElement+FocusRequestArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Focused">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Microsoft.Maui.Controls.FocusEventArgs&gt; Focused;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.Maui.Controls.FocusEventArgs&gt; Focused" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Maui.Controls.VisualElement.Focused" />
      <MemberSignature Language="VB.NET" Value="Public Event Focused As EventHandler(Of FocusEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;Microsoft::Maui::Controls::FocusEventArgs ^&gt; ^ Focused;" />
      <MemberSignature Language="F#" Value="member this.Focused : EventHandler&lt;Microsoft.Maui.Controls.FocusEventArgs&gt; " Usage="member this.Focused : System.EventHandler&lt;Microsoft.Maui.Controls.FocusEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.Maui.Controls.FocusEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Occurs when this element is focused.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Frame">
      <MemberSignature Language="C#" Value="public Microsoft.Maui.Graphics.Rect Frame { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Maui.Graphics.Rect Frame" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.Frame" />
      <MemberSignature Language="VB.NET" Value="Public Property Frame As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Maui::Graphics::Rect Frame { Microsoft::Maui::Graphics::Rect get(); void set(Microsoft::Maui::Graphics::Rect value); };" />
      <MemberSignature Language="F#" Value="member this.Frame : Microsoft.Maui.Graphics.Rect with get, set" Usage="Microsoft.Maui.Controls.VisualElement.Frame" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Maui.IView.Frame</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Graphics.Rect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the frame this element resides in on screen.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Handler">
      <MemberSignature Language="C#" Value="public Microsoft.Maui.IViewHandler? Handler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Maui.IViewHandler Handler" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.Handler" />
      <MemberSignature Language="VB.NET" Value="Public Property Handler As IViewHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Maui::IViewHandler ^ Handler { Microsoft::Maui::IViewHandler ^ get(); void set(Microsoft::Maui::IViewHandler ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Handler : Microsoft.Maui.IViewHandler with get, set" Usage="Microsoft.Maui.Controls.VisualElement.Handler" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Maui.IView.Handler</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.IViewHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the <see cref="T:Microsoft.Maui.IViewHandler" /> associated to this element.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public double Height { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Height" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.Height" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Height As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Height { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Height : double" Usage="Microsoft.Maui.Controls.VisualElement.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the current rendered height of this element. This is a read-only bindable property.
            </summary>
        <value>The renderered height of this element.</value>
        <remarks>The height of an element is set during layout.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HeightProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty HeightProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty HeightProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.HeightProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HeightProperty As BindableProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Maui::Controls::BindableProperty ^ HeightProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable HeightProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.VisualElement.HeightProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bindable property for <see cref="P:Microsoft.Maui.Controls.VisualElement.Height" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HeightRequest">
      <MemberSignature Language="C#" Value="public double HeightRequest { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 HeightRequest" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.HeightRequest" />
      <MemberSignature Language="VB.NET" Value="Public Property HeightRequest As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double HeightRequest { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.HeightRequest : double with get, set" Usage="Microsoft.Maui.Controls.VisualElement.HeightRequest" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the desired height override of this element. This is a bindable property.
            </summary>
        <value>The height this element desires to be.</value>
        <remarks>
          <para>The default value is -1, which means the value is unset; the effective minimum height will be zero.</para>
          <para>
            <see cref="P:Microsoft.Maui.Controls.VisualElement.HeightRequest" /> does not immediately change the <see cref="P:Microsoft.Maui.Controls.VisualElement.Bounds" /> of an element; setting the <see cref="P:Microsoft.Maui.Controls.VisualElement.HeightRequest" /> will change the resulting height of the element during the next layout pass.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeightRequestProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty HeightRequestProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty HeightRequestProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.HeightRequestProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HeightRequestProperty As BindableProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Maui::Controls::BindableProperty ^ HeightRequestProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable HeightRequestProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.VisualElement.HeightRequestProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bindable property for <see cref="P:Microsoft.Maui.Controls.VisualElement.HeightRequest" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputTransparent">
      <MemberSignature Language="C#" Value="public bool InputTransparent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InputTransparent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.InputTransparent" />
      <MemberSignature Language="VB.NET" Value="Public Property InputTransparent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InputTransparent { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.InputTransparent : bool with get, set" Usage="Microsoft.Maui.Controls.VisualElement.InputTransparent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether this element responds to hit testing during user interaction. This is a bindable property.
            </summary>
        <value>
          <see langword="false" /> if the element and its children should receive input; <see langword="true" /> if neither the element nor its children should receive input and should, instead, pass inputs to the elements that are visually behind the current visual element. Default is <see langword="false" />.</value>
        <remarks>
          <para>The default value is <see langword="false" />.</para>
          <para>Setting <see cref="P:Microsoft.Maui.Controls.VisualElement.InputTransparent" /> to <see langword="true" /> makes the element invisible to touch and pointer input. The input is passed to the first non-input-transparent element that is visually behind the input transparent element. </para>
        </remarks>
        <altmember cref="P:Microsoft.Maui.Controls.VisualElement.IsEnabled" />
      </Docs>
    </Member>
    <Member MemberName="InputTransparentProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty InputTransparentProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty InputTransparentProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.InputTransparentProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InputTransparentProperty As BindableProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Maui::Controls::BindableProperty ^ InputTransparentProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable InputTransparentProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.VisualElement.InputTransparentProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bindable property for <see cref="P:Microsoft.Maui.Controls.VisualElement.InputTransparent" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidateMeasure">
      <MemberSignature Language="C#" Value="protected virtual void InvalidateMeasure ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InvalidateMeasure() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.VisualElement.InvalidateMeasure" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InvalidateMeasure ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InvalidateMeasure();" />
      <MemberSignature Language="F#" Value="abstract member InvalidateMeasure : unit -&gt; unit&#xA;override this.InvalidateMeasure : unit -&gt; unit" Usage="visualElement.InvalidateMeasure " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Marks the current measure of an element as invalidated.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidateMeasureNonVirtual">
      <MemberSignature Language="C#" Value="public void InvalidateMeasureNonVirtual (Microsoft.Maui.Controls.Internals.InvalidationTrigger trigger);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InvalidateMeasureNonVirtual(valuetype Microsoft.Maui.Controls.Internals.InvalidationTrigger trigger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.VisualElement.InvalidateMeasureNonVirtual(Microsoft.Maui.Controls.Internals.InvalidationTrigger)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InvalidateMeasureNonVirtual (trigger As InvalidationTrigger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InvalidateMeasureNonVirtual(Microsoft::Maui::Controls::Internals::InvalidationTrigger trigger);" />
      <MemberSignature Language="F#" Value="member this.InvalidateMeasureNonVirtual : Microsoft.Maui.Controls.Internals.InvalidationTrigger -&gt; unit" Usage="visualElement.InvalidateMeasureNonVirtual trigger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trigger" Type="Microsoft.Maui.Controls.Internals.InvalidationTrigger" />
      </Parameters>
      <Docs>
        <param name="trigger">For internal use by the Microsoft.Maui.Controls platform.</param>
        <summary>
            Invalidates the measure of an element.
            </summary>
        <remarks>For internal use only. This API can be changed or removed without notice at any time.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidateMeasureOverride">
      <MemberSignature Language="C#" Value="protected virtual void InvalidateMeasureOverride ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InvalidateMeasureOverride() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.VisualElement.InvalidateMeasureOverride" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InvalidateMeasureOverride ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InvalidateMeasureOverride();" />
      <MemberSignature Language="F#" Value="abstract member InvalidateMeasureOverride : unit -&gt; unit&#xA;override this.InvalidateMeasureOverride : unit -&gt; unit" Usage="visualElement.InvalidateMeasureOverride " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Provides a way to allow subclasses (e.g., Layout) to override <see cref="M:Microsoft.Maui.Controls.VisualElement.InvalidateMeasure" /> even though
            the interface has to be explicitly implemented to avoid conflict with the <see cref="M:Microsoft.Maui.Controls.VisualElement.InvalidateMeasure" /> method.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsEnabled : bool with get, set" Usage="Microsoft.Maui.Controls.VisualElement.IsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether this element is enabled in the user interface. This is a bindable property.
            </summary>
        <value>
          <see langword="true" /> if the element is enabled; otherwise, <see langword="false" />. The default value is <see langword="true" /></value>
        <remarks>
          <para>The default value is <see langword="true" />.</para>
          <para>Elements that are not enabled will not receive focus or respond to input events.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledCore">
      <MemberSignature Language="C#" Value="protected virtual bool IsEnabledCore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabledCore" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.IsEnabledCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property IsEnabledCore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool IsEnabledCore { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEnabledCore : bool" Usage="Microsoft.Maui.Controls.VisualElement.IsEnabledCore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            This value represents the cumulative IsEnabled value.
            All types that override this property need to also invoke
            the RefreshIsEnabledProperty() method if the value will change.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty IsEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty IsEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.IsEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsEnabledProperty As BindableProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Maui::Controls::BindableProperty ^ IsEnabledProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsEnabledProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.VisualElement.IsEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bindable property for <see cref="P:Microsoft.Maui.Controls.VisualElement.IsEnabled" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFocused">
      <MemberSignature Language="C#" Value="public bool IsFocused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFocused" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.IsFocused" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFocused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFocused { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFocused : bool" Usage="Microsoft.Maui.Controls.VisualElement.IsFocused" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a value indicating whether this element is focused currently. This is a bindable property.
            </summary>
        <value>
          <see langword="true" /> if the element is focused; otherwise, <see langword="false" />.</value>
        <remarks>Applications may have multiple focuses depending on the implementation of the underlying platform. Menus and modals in particular may leave multiple items with focus.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFocusedProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty IsFocusedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty IsFocusedProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.IsFocusedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsFocusedProperty As BindableProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Maui::Controls::BindableProperty ^ IsFocusedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsFocusedProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.VisualElement.IsFocusedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bindable property for <see cref="P:Microsoft.Maui.Controls.VisualElement.IsFocused" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFocusedPropertyKey">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindablePropertyKey IsFocusedPropertyKey;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindablePropertyKey IsFocusedPropertyKey" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.IsFocusedPropertyKey" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsFocusedPropertyKey As BindablePropertyKey " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Maui::Controls::BindablePropertyKey ^ IsFocusedPropertyKey;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsFocusedPropertyKey : Microsoft.Maui.Controls.BindablePropertyKey" Usage="Microsoft.Maui.Controls.VisualElement.IsFocusedPropertyKey" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindablePropertyKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bindable property for <see cref="P:Microsoft.Maui.Controls.VisualElement.IsFocused" />.</summary>
        <remarks>For internal use only. This API can be changed or removed without notice at any time.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInPlatformLayout">
      <MemberSignature Language="C#" Value="public bool IsInPlatformLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInPlatformLayout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.IsInPlatformLayout" />
      <MemberSignature Language="VB.NET" Value="Public Property IsInPlatformLayout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInPlatformLayout { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsInPlatformLayout : bool with get, set" Usage="Microsoft.Maui.Controls.VisualElement.IsInPlatformLayout" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Maui.Controls.IVisualElementController.IsInPlatformLayout</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value that indicates that this element is currently going through the platform layout cycle.
            </summary>
        <value>To be added.</value>
        <remarks>For internal use only. This API can be changed or removed without notice at any time.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLoaded">
      <MemberSignature Language="C#" Value="public bool IsLoaded { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLoaded" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.IsLoaded" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLoaded As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLoaded { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsLoaded : bool" Usage="Microsoft.Maui.Controls.VisualElement.IsLoaded" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Indicates if an element is connected to the main object tree.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPlatformEnabled">
      <MemberSignature Language="C#" Value="public bool IsPlatformEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPlatformEnabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.IsPlatformEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsPlatformEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPlatformEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsPlatformEnabled : bool with get, set" Usage="Microsoft.Maui.Controls.VisualElement.IsPlatformEnabled" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Maui.Controls.IVisualElementController.IsPlatformEnabled</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value that indicates whether this elements's platform equivalent element is enabled.
            </summary>
        <value>To be added.</value>
        <remarks>For internal use only. This API can be changed or removed without notice at any time.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPlatformStateConsistent">
      <MemberSignature Language="C#" Value="public bool IsPlatformStateConsistent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPlatformStateConsistent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.IsPlatformStateConsistent" />
      <MemberSignature Language="VB.NET" Value="Public Property IsPlatformStateConsistent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPlatformStateConsistent { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsPlatformStateConsistent : bool with get, set" Usage="Microsoft.Maui.Controls.VisualElement.IsPlatformStateConsistent" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Maui.Controls.IVisualElementController.IsPlatformStateConsistent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value that indicates that this element is currently consistent with the platform equivalent element state.
            </summary>
        <value>To be added.</value>
        <remarks>For internal use only. This API can be changed or removed without notice at any time.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVisible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.IsVisible" />
      <MemberSignature Language="VB.NET" Value="Public Property IsVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsVisible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsVisible : bool with get, set" Usage="Microsoft.Maui.Controls.VisualElement.IsVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(Microsoft.Maui.Controls.VisualElement+VisibilityConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(Microsoft.Maui.Controls.VisualElement+VisibilityConverter))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value that determines whether this element will be visible on screen and take up space in layouts. This is a bindable property.
            </summary>
        <value>
          <see langword="true" /> if the element should be rendered; otherwise, <see langword="false" />. Default value is <see langword="true" />.</value>
        <remarks>When an element has <see cref="P:Microsoft.Maui.Controls.VisualElement.IsVisible" /> set to <see langword="false" /> it will no longer take up space in layouts or be eligible to receive any kind of input event.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisibleProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty IsVisibleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty IsVisibleProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.IsVisibleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsVisibleProperty As BindableProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Maui::Controls::BindableProperty ^ IsVisibleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsVisibleProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.VisualElement.IsVisibleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bindable property for <see cref="P:Microsoft.Maui.Controls.VisualElement.IsVisible" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Layout">
      <MemberSignature Language="C#" Value="public void Layout (Microsoft.Maui.Graphics.Rect bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Layout(valuetype Microsoft.Maui.Graphics.Rect bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.VisualElement.Layout(Microsoft.Maui.Graphics.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Layout (bounds As Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Layout(Microsoft::Maui::Graphics::Rect bounds);" />
      <MemberSignature Language="F#" Value="member this.Layout : Microsoft.Maui.Graphics.Rect -&gt; unit" Usage="visualElement.Layout bounds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bounds" Type="Microsoft.Maui.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="bounds">The new bounds of the element.</param>
        <summary>
            Updates the bounds of the element during the layout cycle.
            </summary>
        <remarks>Calling this method will trigger a layout cycle for the sub-tree of this element.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Loaded">
      <MemberSignature Language="C#" Value="public event EventHandler? Loaded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Loaded" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Maui.Controls.VisualElement.Loaded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Loaded As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Loaded;" />
      <MemberSignature Language="F#" Value="member this.Loaded : EventHandler " Usage="member this.Loaded : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Occurs when an element has been constructed and added to the object tree.
            </summary>
        <remarks>This event may occur before the element has been measured so should not be relied on for size information.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MapBackgroundColor">
      <MemberSignature Language="C#" Value="public static void MapBackgroundColor (Microsoft.Maui.IViewHandler handler, Microsoft.Maui.IView view);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MapBackgroundColor(class Microsoft.Maui.IViewHandler handler, class Microsoft.Maui.IView view) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.VisualElement.MapBackgroundColor(Microsoft.Maui.IViewHandler,Microsoft.Maui.IView)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub MapBackgroundColor (handler As IViewHandler, view As IView)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MapBackgroundColor(Microsoft::Maui::IViewHandler ^ handler, Microsoft::Maui::IView ^ view);" />
      <MemberSignature Language="F#" Value="static member MapBackgroundColor : Microsoft.Maui.IViewHandler * Microsoft.Maui.IView -&gt; unit" Usage="Microsoft.Maui.Controls.VisualElement.MapBackgroundColor (handler, view)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="Microsoft.Maui.IViewHandler" />
        <Parameter Name="view" Type="Microsoft.Maui.IView" />
      </Parameters>
      <Docs>
        <param name="handler">To be added.</param>
        <param name="view">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MapBackgroundImageSource">
      <MemberSignature Language="C#" Value="public static void MapBackgroundImageSource (Microsoft.Maui.IViewHandler handler, Microsoft.Maui.IView view);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MapBackgroundImageSource(class Microsoft.Maui.IViewHandler handler, class Microsoft.Maui.IView view) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.VisualElement.MapBackgroundImageSource(Microsoft.Maui.IViewHandler,Microsoft.Maui.IView)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub MapBackgroundImageSource (handler As IViewHandler, view As IView)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MapBackgroundImageSource(Microsoft::Maui::IViewHandler ^ handler, Microsoft::Maui::IView ^ view);" />
      <MemberSignature Language="F#" Value="static member MapBackgroundImageSource : Microsoft.Maui.IViewHandler * Microsoft.Maui.IView -&gt; unit" Usage="Microsoft.Maui.Controls.VisualElement.MapBackgroundImageSource (handler, view)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="Microsoft.Maui.IViewHandler" />
        <Parameter Name="view" Type="Microsoft.Maui.IView" />
      </Parameters>
      <Docs>
        <param name="handler">To be added.</param>
        <param name="view">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumHeightRequest">
      <MemberSignature Language="C#" Value="public double MaximumHeightRequest { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MaximumHeightRequest" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.MaximumHeightRequest" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumHeightRequest As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double MaximumHeightRequest { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumHeightRequest : double with get, set" Usage="Microsoft.Maui.Controls.VisualElement.MaximumHeightRequest" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the maximum height the element will request during layout. This is a bindable property.
            </summary>
        <value>To be added.</value>
        <remarks>
          <para>The default value is <see cref="F:System.Double.PositiveInfinity" />.</para>
          <para>
            <see cref="P:Microsoft.Maui.Controls.VisualElement.MaximumHeightRequest" /> is used to ensure that the element has no more than the specified height during layout.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumHeightRequestProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty MaximumHeightRequestProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty MaximumHeightRequestProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.MaximumHeightRequestProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaximumHeightRequestProperty As BindableProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Maui::Controls::BindableProperty ^ MaximumHeightRequestProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable MaximumHeightRequestProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.VisualElement.MaximumHeightRequestProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bindable property for <see cref="P:Microsoft.Maui.Controls.VisualElement.MaximumHeightRequest" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumWidthRequest">
      <MemberSignature Language="C#" Value="public double MaximumWidthRequest { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MaximumWidthRequest" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.MaximumWidthRequest" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumWidthRequest As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double MaximumWidthRequest { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumWidthRequest : double with get, set" Usage="Microsoft.Maui.Controls.VisualElement.MaximumWidthRequest" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the maximum width the element will request during layout. This is a bindable property.
            </summary>
        <value>To be added.</value>
        <remarks>
          <para>The default value is <see cref="F:System.Double.PositiveInfinity" />.</para>
          <para>
            <see cref="P:Microsoft.Maui.Controls.VisualElement.MaximumWidthRequest" /> is used to ensure the element has no more than the specified width during layout.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumWidthRequestProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty MaximumWidthRequestProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty MaximumWidthRequestProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.MaximumWidthRequestProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaximumWidthRequestProperty As BindableProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Maui::Controls::BindableProperty ^ MaximumWidthRequestProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable MaximumWidthRequestProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.VisualElement.MaximumWidthRequestProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bindable property for <see cref="P:Microsoft.Maui.Controls.VisualElement.MaximumWidthRequest" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Measure">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Maui.SizeRequest Measure (double widthConstraint, double heightConstraint, Microsoft.Maui.Controls.MeasureFlags flags = Microsoft.Maui.Controls.MeasureFlags.None);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.Maui.SizeRequest Measure(float64 widthConstraint, float64 heightConstraint, valuetype Microsoft.Maui.Controls.MeasureFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.VisualElement.Measure(System.Double,System.Double,Microsoft.Maui.Controls.MeasureFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Measure (widthConstraint As Double, heightConstraint As Double, Optional flags As MeasureFlags = Microsoft.Maui.Controls.MeasureFlags.None) As SizeRequest" />
      <MemberSignature Language="F#" Value="abstract member Measure : double * double * Microsoft.Maui.Controls.MeasureFlags -&gt; Microsoft.Maui.SizeRequest&#xA;override this.Measure : double * double * Microsoft.Maui.Controls.MeasureFlags -&gt; Microsoft.Maui.SizeRequest" Usage="visualElement.Measure (widthConstraint, heightConstraint, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.SizeRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="widthConstraint" Type="System.Double" />
        <Parameter Name="heightConstraint" Type="System.Double" />
        <Parameter Name="flags" Type="Microsoft.Maui.Controls.MeasureFlags" />
      </Parameters>
      <Docs>
        <param name="widthConstraint">The suggested maximum width constraint for the element to render.</param>
        <param name="heightConstraint">The suggested maximum height constraint for the element to render.</param>
        <param name="flags">A value that controls whether margins are included in the returned size.</param>
        <summary>
            Returns the minimum size that an element needs in order to be displayed on the device.
            </summary>
        <returns>The minimum size that an element needs in order to be displayed on the device.</returns>
        <remarks>If the minimum size that the element needs in order to be displayed on the device is larger than can be accommodated by <paramref name="widthConstraint" /> and <paramref name="heightConstraint" />, the return value may represent a rectangle that is larger in either one or both of those parameters.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureInvalidated">
      <MemberSignature Language="C#" Value="public event EventHandler MeasureInvalidated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MeasureInvalidated" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Maui.Controls.VisualElement.MeasureInvalidated" />
      <MemberSignature Language="VB.NET" Value="Public Event MeasureInvalidated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MeasureInvalidated;" />
      <MemberSignature Language="F#" Value="member this.MeasureInvalidated : EventHandler " Usage="member this.MeasureInvalidated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Occurs when the current measure of an element has been invalidated.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureOverride">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.Maui.Graphics.Size MeasureOverride (double widthConstraint, double heightConstraint);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype Microsoft.Maui.Graphics.Size MeasureOverride(float64 widthConstraint, float64 heightConstraint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.VisualElement.MeasureOverride(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function MeasureOverride (widthConstraint As Double, heightConstraint As Double) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Microsoft::Maui::Graphics::Size MeasureOverride(double widthConstraint, double heightConstraint);" />
      <MemberSignature Language="F#" Value="abstract member MeasureOverride : double * double -&gt; Microsoft.Maui.Graphics.Size&#xA;override this.MeasureOverride : double * double -&gt; Microsoft.Maui.Graphics.Size" Usage="visualElement.MeasureOverride (widthConstraint, heightConstraint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Graphics.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="widthConstraint" Type="System.Double" />
        <Parameter Name="heightConstraint" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="widthConstraint">The width constraint to request.</param>
        <param name="heightConstraint">The height constraint to request.</param>
        <summary>
            Provides a way to allow subclasses to override <see cref="M:Microsoft.Maui.Controls.VisualElement.Measure(System.Double,System.Double,Microsoft.Maui.Controls.MeasureFlags)" /> even though
            the interface has to be explicitly implemented to avoid conflict with the old Measure method.
            </summary>
        <returns>The requested size that an element wants in order to be displayed on the device.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Maui.Controls.IVisualElementController.EffectiveFlowDirection">
      <MemberSignature Language="C#" Value="Microsoft.Maui.Controls.EffectiveFlowDirection Microsoft.Maui.Controls.IVisualElementController.EffectiveFlowDirection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Maui.Controls.EffectiveFlowDirection Microsoft.Maui.Controls.IVisualElementController.EffectiveFlowDirection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.Microsoft#Maui#Controls#IVisualElementController#EffectiveFlowDirection" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property EffectiveFlowDirection As EffectiveFlowDirection Implements IVisualElementController.EffectiveFlowDirection" />
      <MemberSignature Language="C++ CLI" Value="property Microsoft::Maui::Controls::EffectiveFlowDirection Microsoft::Maui::Controls::IVisualElementController::EffectiveFlowDirection { Microsoft::Maui::Controls::EffectiveFlowDirection get(); };" />
      <MemberSignature Language="F#" Value="member this.Microsoft.Maui.Controls.IVisualElementController.EffectiveFlowDirection : Microsoft.Maui.Controls.EffectiveFlowDirection" Usage="Microsoft.Maui.Controls.IVisualElementController.EffectiveFlowDirection" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Maui.Controls.IVisualElementController.EffectiveFlowDirection</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.EffectiveFlowDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Maui.Controls.IVisualElementController.InvalidateMeasure">
      <MemberSignature Language="C#" Value="void IVisualElementController.InvalidateMeasure (Microsoft.Maui.Controls.Internals.InvalidationTrigger trigger);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Microsoft.Maui.Controls.IVisualElementController.InvalidateMeasure(valuetype Microsoft.Maui.Controls.Internals.InvalidationTrigger trigger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.VisualElement.Microsoft#Maui#Controls#IVisualElementController#InvalidateMeasure(Microsoft.Maui.Controls.Internals.InvalidationTrigger)" />
      <MemberSignature Language="VB.NET" Value="Sub InvalidateMeasure (trigger As InvalidationTrigger) Implements IVisualElementController.InvalidateMeasure" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Microsoft.Maui.Controls.IVisualElementController.InvalidateMeasure(Microsoft::Maui::Controls::Internals::InvalidationTrigger trigger) = Microsoft::Maui::Controls::IVisualElementController::InvalidateMeasure;" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.Maui.Controls.IVisualElementController.InvalidateMeasure : Microsoft.Maui.Controls.Internals.InvalidationTrigger -&gt; unit&#xA;override this.Microsoft.Maui.Controls.IVisualElementController.InvalidateMeasure : Microsoft.Maui.Controls.Internals.InvalidationTrigger -&gt; unit" Usage="visualElement.Microsoft.Maui.Controls.IVisualElementController.InvalidateMeasure trigger" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Maui.Controls.IVisualElementController.InvalidateMeasure(Microsoft.Maui.Controls.Internals.InvalidationTrigger)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trigger" Type="Microsoft.Maui.Controls.Internals.InvalidationTrigger" />
      </Parameters>
      <Docs>
        <param name="trigger">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Maui.IElement.Handler">
      <MemberSignature Language="C#" Value="Microsoft.Maui.IElementHandler? Microsoft.Maui.IElement.Handler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Maui.IElementHandler Microsoft.Maui.IElement.Handler" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.Microsoft#Maui#IElement#Handler" />
      <MemberSignature Language="VB.NET" Value=" Property Handler As IElementHandler Implements IElement.Handler" />
      <MemberSignature Language="C++ CLI" Value="property Microsoft::Maui::IElementHandler ^ Microsoft::Maui::IElement::Handler { Microsoft::Maui::IElementHandler ^ get(); void set(Microsoft::Maui::IElementHandler ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Microsoft.Maui.IElement.Handler : Microsoft.Maui.IElementHandler with get, set" Usage="Microsoft.Maui.IElement.Handler" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Maui.IElement.Handler</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.IElementHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Maui.IView.Arrange">
      <MemberSignature Language="C#" Value="Microsoft.Maui.Graphics.Size IView.Arrange (Microsoft.Maui.Graphics.Rect bounds);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype Microsoft.Maui.Graphics.Size Microsoft.Maui.IView.Arrange(valuetype Microsoft.Maui.Graphics.Rect bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.VisualElement.Microsoft#Maui#IView#Arrange(Microsoft.Maui.Graphics.Rect)" />
      <MemberSignature Language="VB.NET" Value="Function Arrange (bounds As Rect) As Size Implements IView.Arrange" />
      <MemberSignature Language="C++ CLI" Value=" virtual Microsoft::Maui::Graphics::Size Microsoft.Maui.IView.Arrange(Microsoft::Maui::Graphics::Rect bounds) = Microsoft::Maui::IView::Arrange;" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.Maui.IView.Arrange : Microsoft.Maui.Graphics.Rect -&gt; Microsoft.Maui.Graphics.Size&#xA;override this.Microsoft.Maui.IView.Arrange : Microsoft.Maui.Graphics.Rect -&gt; Microsoft.Maui.Graphics.Size" Usage="visualElement.Microsoft.Maui.IView.Arrange bounds" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Maui.IView.Arrange(Microsoft.Maui.Graphics.Rect)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Graphics.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bounds" Type="Microsoft.Maui.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="bounds">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Maui.IView.Background">
      <MemberSignature Language="C#" Value="Microsoft.Maui.Graphics.Paint? Microsoft.Maui.IView.Background { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Maui.Graphics.Paint Microsoft.Maui.IView.Background" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.Microsoft#Maui#IView#Background" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Background As Paint Implements IView.Background" />
      <MemberSignature Language="C++ CLI" Value="property Microsoft::Maui::Graphics::Paint ^ Microsoft::Maui::IView::Background { Microsoft::Maui::Graphics::Paint ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Microsoft.Maui.IView.Background : Microsoft.Maui.Graphics.Paint" Usage="Microsoft.Maui.IView.Background" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Maui.IView.Background</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Graphics.Paint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Maui.IView.Clip">
      <MemberSignature Language="C#" Value="Microsoft.Maui.Graphics.IShape Microsoft.Maui.IView.Clip { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Maui.Graphics.IShape Microsoft.Maui.IView.Clip" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.Microsoft#Maui#IView#Clip" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Clip As IShape Implements IView.Clip" />
      <MemberSignature Language="C++ CLI" Value="property Microsoft::Maui::Graphics::IShape ^ Microsoft::Maui::IView::Clip { Microsoft::Maui::Graphics::IShape ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Microsoft.Maui.IView.Clip : Microsoft.Maui.Graphics.IShape" Usage="Microsoft.Maui.IView.Clip" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Maui.IView.Clip</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Graphics.IShape</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Maui.IView.FlowDirection">
      <MemberSignature Language="C#" Value="Microsoft.Maui.FlowDirection Microsoft.Maui.IView.FlowDirection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Maui.FlowDirection Microsoft.Maui.IView.FlowDirection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.Microsoft#Maui#IView#FlowDirection" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property FlowDirection As FlowDirection Implements IView.FlowDirection" />
      <MemberSignature Language="C++ CLI" Value="property Microsoft::Maui::FlowDirection Microsoft::Maui::IView::FlowDirection { Microsoft::Maui::FlowDirection get(); };" />
      <MemberSignature Language="F#" Value="member this.Microsoft.Maui.IView.FlowDirection : Microsoft.Maui.FlowDirection" Usage="Microsoft.Maui.IView.FlowDirection" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Maui.IView.FlowDirection</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.FlowDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Maui.IView.Height">
      <MemberSignature Language="C#" Value="double Microsoft.Maui.IView.Height { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Microsoft.Maui.IView.Height" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.Microsoft#Maui#IView#Height" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Height As Double Implements IView.Height" />
      <MemberSignature Language="C++ CLI" Value="property double Microsoft::Maui::IView::Height { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Microsoft.Maui.IView.Height : double" Usage="Microsoft.Maui.IView.Height" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Maui.IView.Height</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Maui.IView.HorizontalLayoutAlignment">
      <MemberSignature Language="C#" Value="Microsoft.Maui.Primitives.LayoutAlignment Microsoft.Maui.IView.HorizontalLayoutAlignment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Maui.Primitives.LayoutAlignment Microsoft.Maui.IView.HorizontalLayoutAlignment" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.Microsoft#Maui#IView#HorizontalLayoutAlignment" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property HorizontalLayoutAlignment As LayoutAlignment Implements IView.HorizontalLayoutAlignment" />
      <MemberSignature Language="C++ CLI" Value="property Microsoft::Maui::Primitives::LayoutAlignment Microsoft::Maui::IView::HorizontalLayoutAlignment { Microsoft::Maui::Primitives::LayoutAlignment get(); };" />
      <MemberSignature Language="F#" Value="member this.Microsoft.Maui.IView.HorizontalLayoutAlignment : Microsoft.Maui.Primitives.LayoutAlignment" Usage="Microsoft.Maui.IView.HorizontalLayoutAlignment" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Maui.IView.HorizontalLayoutAlignment</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Primitives.LayoutAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Maui.IView.InvalidateArrange">
      <MemberSignature Language="C#" Value="void IView.InvalidateArrange ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Microsoft.Maui.IView.InvalidateArrange() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.VisualElement.Microsoft#Maui#IView#InvalidateArrange" />
      <MemberSignature Language="VB.NET" Value="Sub InvalidateArrange () Implements IView.InvalidateArrange" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Microsoft.Maui.IView.InvalidateArrange() = Microsoft::Maui::IView::InvalidateArrange;" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.Maui.IView.InvalidateArrange : unit -&gt; unit&#xA;override this.Microsoft.Maui.IView.InvalidateArrange : unit -&gt; unit" Usage="visualElement.Microsoft.Maui.IView.InvalidateArrange " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Maui.IView.InvalidateArrange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Maui.IView.InvalidateMeasure">
      <MemberSignature Language="C#" Value="void IView.InvalidateMeasure ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Microsoft.Maui.IView.InvalidateMeasure() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.VisualElement.Microsoft#Maui#IView#InvalidateMeasure" />
      <MemberSignature Language="VB.NET" Value="Sub InvalidateMeasure () Implements IView.InvalidateMeasure" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Microsoft.Maui.IView.InvalidateMeasure() = Microsoft::Maui::IView::InvalidateMeasure;" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.Maui.IView.InvalidateMeasure : unit -&gt; unit&#xA;override this.Microsoft.Maui.IView.InvalidateMeasure : unit -&gt; unit" Usage="visualElement.Microsoft.Maui.IView.InvalidateMeasure " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Maui.IView.InvalidateMeasure</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Maui.IView.IsFocused">
      <MemberSignature Language="C#" Value="bool Microsoft.Maui.IView.IsFocused { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Microsoft.Maui.IView.IsFocused" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.Microsoft#Maui#IView#IsFocused" />
      <MemberSignature Language="VB.NET" Value=" Property IsFocused As Boolean Implements IView.IsFocused" />
      <MemberSignature Language="C++ CLI" Value="property bool Microsoft::Maui::IView::IsFocused { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Microsoft.Maui.IView.IsFocused : bool with get, set" Usage="Microsoft.Maui.IView.IsFocused" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Maui.IView.IsFocused</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Maui.IView.Margin">
      <MemberSignature Language="C#" Value="Microsoft.Maui.Thickness Microsoft.Maui.IView.Margin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Maui.Thickness Microsoft.Maui.IView.Margin" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.Microsoft#Maui#IView#Margin" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Margin As Thickness Implements IView.Margin" />
      <MemberSignature Language="C++ CLI" Value="property Microsoft::Maui::Thickness Microsoft::Maui::IView::Margin { Microsoft::Maui::Thickness get(); };" />
      <MemberSignature Language="F#" Value="member this.Microsoft.Maui.IView.Margin : Microsoft.Maui.Thickness" Usage="Microsoft.Maui.IView.Margin" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Maui.IView.Margin</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Thickness</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Maui.IView.MaximumHeight">
      <MemberSignature Language="C#" Value="double Microsoft.Maui.IView.MaximumHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Microsoft.Maui.IView.MaximumHeight" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.Microsoft#Maui#IView#MaximumHeight" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property MaximumHeight As Double Implements IView.MaximumHeight" />
      <MemberSignature Language="C++ CLI" Value="property double Microsoft::Maui::IView::MaximumHeight { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Microsoft.Maui.IView.MaximumHeight : double" Usage="Microsoft.Maui.IView.MaximumHeight" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Maui.IView.MaximumHeight</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Maui.IView.MaximumWidth">
      <MemberSignature Language="C#" Value="double Microsoft.Maui.IView.MaximumWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Microsoft.Maui.IView.MaximumWidth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.Microsoft#Maui#IView#MaximumWidth" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property MaximumWidth As Double Implements IView.MaximumWidth" />
      <MemberSignature Language="C++ CLI" Value="property double Microsoft::Maui::IView::MaximumWidth { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Microsoft.Maui.IView.MaximumWidth : double" Usage="Microsoft.Maui.IView.MaximumWidth" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Maui.IView.MaximumWidth</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Maui.IView.Measure">
      <MemberSignature Language="C#" Value="Microsoft.Maui.Graphics.Size IView.Measure (double widthConstraint, double heightConstraint);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype Microsoft.Maui.Graphics.Size Microsoft.Maui.IView.Measure(float64 widthConstraint, float64 heightConstraint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.VisualElement.Microsoft#Maui#IView#Measure(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Function Measure (widthConstraint As Double, heightConstraint As Double) As Size Implements IView.Measure" />
      <MemberSignature Language="C++ CLI" Value=" virtual Microsoft::Maui::Graphics::Size Microsoft.Maui.IView.Measure(double widthConstraint, double heightConstraint) = Microsoft::Maui::IView::Measure;" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.Maui.IView.Measure : double * double -&gt; Microsoft.Maui.Graphics.Size&#xA;override this.Microsoft.Maui.IView.Measure : double * double -&gt; Microsoft.Maui.Graphics.Size" Usage="visualElement.Microsoft.Maui.IView.Measure (widthConstraint, heightConstraint)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Maui.IView.Measure(System.Double,System.Double)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Graphics.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="widthConstraint" Type="System.Double" />
        <Parameter Name="heightConstraint" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="widthConstraint">To be added.</param>
        <param name="heightConstraint">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Maui.IView.MinimumHeight">
      <MemberSignature Language="C#" Value="double Microsoft.Maui.IView.MinimumHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Microsoft.Maui.IView.MinimumHeight" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.Microsoft#Maui#IView#MinimumHeight" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property MinimumHeight As Double Implements IView.MinimumHeight" />
      <MemberSignature Language="C++ CLI" Value="property double Microsoft::Maui::IView::MinimumHeight { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Microsoft.Maui.IView.MinimumHeight : double" Usage="Microsoft.Maui.IView.MinimumHeight" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Maui.IView.MinimumHeight</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Maui.IView.MinimumWidth">
      <MemberSignature Language="C#" Value="double Microsoft.Maui.IView.MinimumWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Microsoft.Maui.IView.MinimumWidth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.Microsoft#Maui#IView#MinimumWidth" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property MinimumWidth As Double Implements IView.MinimumWidth" />
      <MemberSignature Language="C++ CLI" Value="property double Microsoft::Maui::IView::MinimumWidth { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Microsoft.Maui.IView.MinimumWidth : double" Usage="Microsoft.Maui.IView.MinimumWidth" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Maui.IView.MinimumWidth</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Maui.IView.Semantics">
      <MemberSignature Language="C#" Value="Microsoft.Maui.Semantics? Microsoft.Maui.IView.Semantics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Maui.Semantics Microsoft.Maui.IView.Semantics" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.Microsoft#Maui#IView#Semantics" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Semantics As Semantics Implements IView.Semantics" />
      <MemberSignature Language="C++ CLI" Value="property Microsoft::Maui::Semantics ^ Microsoft::Maui::IView::Semantics { Microsoft::Maui::Semantics ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Microsoft.Maui.IView.Semantics : Microsoft.Maui.Semantics" Usage="Microsoft.Maui.IView.Semantics" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Maui.IView.Semantics</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Semantics</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Maui.IView.Shadow">
      <MemberSignature Language="C#" Value="Microsoft.Maui.IShadow Microsoft.Maui.IView.Shadow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Maui.IShadow Microsoft.Maui.IView.Shadow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.Microsoft#Maui#IView#Shadow" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Shadow As IShadow Implements IView.Shadow" />
      <MemberSignature Language="C++ CLI" Value="property Microsoft::Maui::IShadow ^ Microsoft::Maui::IView::Shadow { Microsoft::Maui::IShadow ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Microsoft.Maui.IView.Shadow : Microsoft.Maui.IShadow" Usage="Microsoft.Maui.IView.Shadow" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Maui.IView.Shadow</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.IShadow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Maui.IView.VerticalLayoutAlignment">
      <MemberSignature Language="C#" Value="Microsoft.Maui.Primitives.LayoutAlignment Microsoft.Maui.IView.VerticalLayoutAlignment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Maui.Primitives.LayoutAlignment Microsoft.Maui.IView.VerticalLayoutAlignment" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.Microsoft#Maui#IView#VerticalLayoutAlignment" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property VerticalLayoutAlignment As LayoutAlignment Implements IView.VerticalLayoutAlignment" />
      <MemberSignature Language="C++ CLI" Value="property Microsoft::Maui::Primitives::LayoutAlignment Microsoft::Maui::IView::VerticalLayoutAlignment { Microsoft::Maui::Primitives::LayoutAlignment get(); };" />
      <MemberSignature Language="F#" Value="member this.Microsoft.Maui.IView.VerticalLayoutAlignment : Microsoft.Maui.Primitives.LayoutAlignment" Usage="Microsoft.Maui.IView.VerticalLayoutAlignment" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Maui.IView.VerticalLayoutAlignment</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Primitives.LayoutAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Maui.IView.Visibility">
      <MemberSignature Language="C#" Value="Microsoft.Maui.Visibility Microsoft.Maui.IView.Visibility { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Maui.Visibility Microsoft.Maui.IView.Visibility" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.Microsoft#Maui#IView#Visibility" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Visibility As Visibility Implements IView.Visibility" />
      <MemberSignature Language="C++ CLI" Value="property Microsoft::Maui::Visibility Microsoft::Maui::IView::Visibility { Microsoft::Maui::Visibility get(); };" />
      <MemberSignature Language="F#" Value="member this.Microsoft.Maui.IView.Visibility : Microsoft.Maui.Visibility" Usage="Microsoft.Maui.IView.Visibility" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Maui.IView.Visibility</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Visibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Maui.IView.Width">
      <MemberSignature Language="C#" Value="double Microsoft.Maui.IView.Width { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Microsoft.Maui.IView.Width" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.Microsoft#Maui#IView#Width" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Width As Double Implements IView.Width" />
      <MemberSignature Language="C++ CLI" Value="property double Microsoft::Maui::IView::Width { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Microsoft.Maui.IView.Width : double" Usage="Microsoft.Maui.IView.Width" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Maui.IView.Width</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="MinimumHeightRequest">
      <MemberSignature Language="C#" Value="public double MinimumHeightRequest { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MinimumHeightRequest" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.MinimumHeightRequest" />
      <MemberSignature Language="VB.NET" Value="Public Property MinimumHeightRequest As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double MinimumHeightRequest { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.MinimumHeightRequest : double with get, set" Usage="Microsoft.Maui.Controls.VisualElement.MinimumHeightRequest" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the minimum height the element will request during layout. This is a bindable property.
            </summary>
        <value>The minimum height the element requires. Default value is -1.</value>
        <remarks>
          <para>The default value is -1, which means the value is unset and a height will be determined automatically.</para>
          <para>
            <see cref="P:Microsoft.Maui.Controls.VisualElement.MinimumHeightRequest" /> is used to ensure that the element has at least the specified height during layout.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimumHeightRequestProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty MinimumHeightRequestProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty MinimumHeightRequestProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.MinimumHeightRequestProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MinimumHeightRequestProperty As BindableProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Maui::Controls::BindableProperty ^ MinimumHeightRequestProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable MinimumHeightRequestProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.VisualElement.MinimumHeightRequestProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bindable property for <see cref="P:Microsoft.Maui.Controls.VisualElement.MinimumHeightRequest" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimumWidthRequest">
      <MemberSignature Language="C#" Value="public double MinimumWidthRequest { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MinimumWidthRequest" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.MinimumWidthRequest" />
      <MemberSignature Language="VB.NET" Value="Public Property MinimumWidthRequest As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double MinimumWidthRequest { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.MinimumWidthRequest : double with get, set" Usage="Microsoft.Maui.Controls.VisualElement.MinimumWidthRequest" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the minimum width the element will request during layout. This is a bindable property.
            </summary>
        <value>The minimum width the element requires. Default value is -1.</value>
        <remarks>
          <para>The default value is -1, which means the value is unset; the effective minimum width will be zero.</para>
          <para>
            <see cref="P:Microsoft.Maui.Controls.VisualElement.MinimumWidthRequest" /> is used to ensure that the element has at least the specified width during layout.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimumWidthRequestProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty MinimumWidthRequestProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty MinimumWidthRequestProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.MinimumWidthRequestProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MinimumWidthRequestProperty As BindableProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Maui::Controls::BindableProperty ^ MinimumWidthRequestProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable MinimumWidthRequestProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.VisualElement.MinimumWidthRequestProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bindable property for <see cref="P:Microsoft.Maui.Controls.VisualElement.MinimumWidthRequest" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty NavigationProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty NavigationProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.NavigationProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NavigationProperty As BindableProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Maui::Controls::BindableProperty ^ NavigationProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable NavigationProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.VisualElement.NavigationProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bindable property for <see cref="P:Microsoft.Maui.Controls.NavigableElement.Navigation" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBindingContextChanged">
      <MemberSignature Language="C#" Value="protected override void OnBindingContextChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBindingContextChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.VisualElement.OnBindingContextChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBindingContextChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBindingContextChanged();" />
      <MemberSignature Language="F#" Value="override this.OnBindingContextChanged : unit -&gt; unit" Usage="visualElement.OnBindingContextChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnChildAdded">
      <MemberSignature Language="C#" Value="protected override void OnChildAdded (Microsoft.Maui.Controls.Element child);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnChildAdded(class Microsoft.Maui.Controls.Element child) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.VisualElement.OnChildAdded(Microsoft.Maui.Controls.Element)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnChildAdded (child As Element)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnChildAdded(Microsoft::Maui::Controls::Element ^ child);" />
      <MemberSignature Language="F#" Value="override this.OnChildAdded : Microsoft.Maui.Controls.Element -&gt; unit" Usage="visualElement.OnChildAdded child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Microsoft.Maui.Controls.Element" />
      </Parameters>
      <Docs>
        <param name="child">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnChildRemoved">
      <MemberSignature Language="C#" Value="protected override void OnChildRemoved (Microsoft.Maui.Controls.Element child, int oldLogicalIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnChildRemoved(class Microsoft.Maui.Controls.Element child, int32 oldLogicalIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.VisualElement.OnChildRemoved(Microsoft.Maui.Controls.Element,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnChildRemoved (child As Element, oldLogicalIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnChildRemoved(Microsoft::Maui::Controls::Element ^ child, int oldLogicalIndex);" />
      <MemberSignature Language="F#" Value="override this.OnChildRemoved : Microsoft.Maui.Controls.Element * int -&gt; unit" Usage="visualElement.OnChildRemoved (child, oldLogicalIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Microsoft.Maui.Controls.Element" />
        <Parameter Name="oldLogicalIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="child">To be added.</param>
        <param name="oldLogicalIndex">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnChildrenReordered">
      <MemberSignature Language="C#" Value="protected void OnChildrenReordered ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnChildrenReordered() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.VisualElement.OnChildrenReordered" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnChildrenReordered ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnChildrenReordered();" />
      <MemberSignature Language="F#" Value="member this.OnChildrenReordered : unit -&gt; unit" Usage="visualElement.OnChildrenReordered " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Raises the <see cref="E:Microsoft.Maui.Controls.VisualElement.ChildrenReordered" /> event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMeasure">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.Maui.SizeRequest OnMeasure (double widthConstraint, double heightConstraint);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype Microsoft.Maui.SizeRequest OnMeasure(float64 widthConstraint, float64 heightConstraint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.VisualElement.OnMeasure(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnMeasure (widthConstraint As Double, heightConstraint As Double) As SizeRequest" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Microsoft::Maui::SizeRequest OnMeasure(double widthConstraint, double heightConstraint);" />
      <MemberSignature Language="F#" Value="abstract member OnMeasure : double * double -&gt; Microsoft.Maui.SizeRequest&#xA;override this.OnMeasure : double * double -&gt; Microsoft.Maui.SizeRequest" Usage="visualElement.OnMeasure (widthConstraint, heightConstraint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.SizeRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="widthConstraint" Type="System.Double" />
        <Parameter Name="heightConstraint" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="widthConstraint">The width constraint to request.</param>
        <param name="heightConstraint">The height constraint to request.</param>
        <summary>
            Method that is called when a layout measurement happens.
            </summary>
        <returns>The requested size that the element requires in order to be displayed on the device.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSizeAllocated">
      <MemberSignature Language="C#" Value="protected virtual void OnSizeAllocated (double width, double height);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSizeAllocated(float64 width, float64 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.VisualElement.OnSizeAllocated(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSizeAllocated (width As Double, height As Double)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSizeAllocated(double width, double height);" />
      <MemberSignature Language="F#" Value="abstract member OnSizeAllocated : double * double -&gt; unit&#xA;override this.OnSizeAllocated : double * double -&gt; unit" Usage="visualElement.OnSizeAllocated (width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="width">The new width of the element.</param>
        <param name="height">The new height of the element.</param>
        <summary>
            Method that is called when the size of the element is set during a layout cycle. Implement this method to add class handling for this event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Opacity">
      <MemberSignature Language="C#" Value="public double Opacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Opacity" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.Opacity" />
      <MemberSignature Language="VB.NET" Value="Public Property Opacity As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Opacity { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Opacity : double with get, set" Usage="Microsoft.Maui.Controls.VisualElement.Opacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the opacity value applied to the element when it is rendered. The range of this value is 0 to 1; values outside this range will be set to the nearest valid value. This is a bindable property.
            </summary>
        <value>The opacity value. Default opacity is 1.0. Values will be clamped between 0 and 1 on set.</value>
        <remarks>
          <para>The default value is 1.0.</para>
          <para>
            The opacity value has no effect unless <see cref="P:Microsoft.Maui.Controls.VisualElement.IsVisible" /> is <see langword="true" />. The effective opacity of an element is the value of <see cref="P:Microsoft.Maui.Controls.VisualElement.Opacity" /> multiplied by the opacity of the element's <c>Parent</c>. If a parent has 0.5 opacity, and a child has 0.5 opacity, the child will render with an effective 0.25 opacity.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpacityProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty OpacityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty OpacityProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.OpacityProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OpacityProperty As BindableProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Maui::Controls::BindableProperty ^ OpacityProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable OpacityProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.VisualElement.OpacityProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bindable property for <see cref="P:Microsoft.Maui.Controls.VisualElement.Opacity" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlatformSizeChanged">
      <MemberSignature Language="C#" Value="public void PlatformSizeChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PlatformSizeChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.VisualElement.PlatformSizeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Sub PlatformSizeChanged ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PlatformSizeChanged();" />
      <MemberSignature Language="F#" Value="abstract member PlatformSizeChanged : unit -&gt; unit&#xA;override this.PlatformSizeChanged : unit -&gt; unit" Usage="visualElement.PlatformSizeChanged " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Maui.Controls.IVisualElementController.PlatformSizeChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Signals that the platform equivalent element for this element's size has changed and a new layout cycle might be needed.
            </summary>
        <remarks>For internal use only. This API can be changed or removed without notice at any time.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshIsEnabledProperty">
      <MemberSignature Language="C#" Value="protected void RefreshIsEnabledProperty ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RefreshIsEnabledProperty() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.VisualElement.RefreshIsEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RefreshIsEnabledProperty ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RefreshIsEnabledProperty();" />
      <MemberSignature Language="F#" Value="member this.RefreshIsEnabledProperty : unit -&gt; unit" Usage="visualElement.RefreshIsEnabledProperty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            This method must always be called if some event occurs and the value of
            the <see cref="P:Microsoft.Maui.Controls.VisualElement.IsEnabledCore" /> property will change.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resources">
      <MemberSignature Language="C#" Value="public Microsoft.Maui.Controls.ResourceDictionary Resources { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Maui.Controls.ResourceDictionary Resources" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.Resources" />
      <MemberSignature Language="VB.NET" Value="Public Property Resources As ResourceDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Maui::Controls::ResourceDictionary ^ Resources { Microsoft::Maui::Controls::ResourceDictionary ^ get(); void set(Microsoft::Maui::Controls::ResourceDictionary ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Resources : Microsoft.Maui.Controls.ResourceDictionary with get, set" Usage="Microsoft.Maui.Controls.VisualElement.Resources" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.ResourceDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the local resource dictionary.
            </summary>
        <value>The current resource dictionary, where resources are stored by key.</value>
        <remarks>
          <para>In XAML, resource dictionaries are filled with key/value pairs that are specified in XAML and consequently created at runtime. The keys in the resource dictionary are specified with the <c>x:Key</c> attribute of the XAML tag for the type to create. An object of that type is created, and is initialized with the property and field values that are specified either by additional attributes or by nested tags, both of which, when present, are simply string representations of the property or field names. The object is then inserted into the <see cref="T:Microsoft.Maui.Controls.ResourceDictionary" /> for the enclosing type at runtime.</para>
          <para>Resource dictionaries and their associated XML provide the application developer with a convenient method to reuse code inside the XAML compile-time and runtime engines.</para>
          <para>For more information, see: <see href="https://learn.microsoft.com/dotnet/maui/fundamentals/resource-dictionaries">Resource Dictionaries (Microsoft Learn)</see>.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rotation">
      <MemberSignature Language="C#" Value="public double Rotation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Rotation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.Rotation" />
      <MemberSignature Language="VB.NET" Value="Public Property Rotation As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Rotation { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Rotation : double with get, set" Usage="Microsoft.Maui.Controls.VisualElement.Rotation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the rotation (in degrees) about the Z-axis (affine rotation) when the element is rendered. This is a bindable property.
            </summary>
        <value>The rotation about the Z-axis in degrees.</value>
        <remarks>Rotation is applied relative to <see cref="P:Microsoft.Maui.Controls.VisualElement.AnchorX" /> and <see cref="P:Microsoft.Maui.Controls.VisualElement.AnchorY" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RotationProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty RotationProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty RotationProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.RotationProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RotationProperty As BindableProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Maui::Controls::BindableProperty ^ RotationProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable RotationProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.VisualElement.RotationProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bindable property for <see cref="P:Microsoft.Maui.Controls.VisualElement.Rotation" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RotationX">
      <MemberSignature Language="C#" Value="public double RotationX { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 RotationX" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.RotationX" />
      <MemberSignature Language="VB.NET" Value="Public Property RotationX As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double RotationX { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.RotationX : double with get, set" Usage="Microsoft.Maui.Controls.VisualElement.RotationX" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the rotation (in degrees) about the X-axis (perspective rotation) when the element is rendered. This is a bindable property.
            </summary>
        <value>The rotation about the X-axis in degrees.</value>
        <remarks>Rotation is applied relative to <see cref="P:Microsoft.Maui.Controls.VisualElement.AnchorX" /> and <see cref="P:Microsoft.Maui.Controls.VisualElement.AnchorY" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RotationXProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty RotationXProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty RotationXProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.RotationXProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RotationXProperty As BindableProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Maui::Controls::BindableProperty ^ RotationXProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable RotationXProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.VisualElement.RotationXProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bindable property for <see cref="P:Microsoft.Maui.Controls.VisualElement.RotationX" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RotationY">
      <MemberSignature Language="C#" Value="public double RotationY { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 RotationY" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.RotationY" />
      <MemberSignature Language="VB.NET" Value="Public Property RotationY As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double RotationY { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.RotationY : double with get, set" Usage="Microsoft.Maui.Controls.VisualElement.RotationY" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the rotation (in degrees) about the Y-axis (perspective rotation) when the element is rendered. This is a bindable property.
            </summary>
        <value>The rotation about the Y-axis in degrees.</value>
        <remarks>Rotation is applied relative to <see cref="P:Microsoft.Maui.Controls.VisualElement.AnchorX" /> and <see cref="P:Microsoft.Maui.Controls.VisualElement.AnchorY" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RotationYProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty RotationYProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty RotationYProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.RotationYProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RotationYProperty As BindableProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Maui::Controls::BindableProperty ^ RotationYProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable RotationYProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.VisualElement.RotationYProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bindable property for <see cref="P:Microsoft.Maui.Controls.VisualElement.RotationY" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public double Scale { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Scale" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.Scale" />
      <MemberSignature Language="VB.NET" Value="Public Property Scale As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Scale { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Scale : double with get, set" Usage="Microsoft.Maui.Controls.VisualElement.Scale" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the scale factor applied to the element. This is a bindable property.
            </summary>
        <value>The scale factor of the element. Default value is 1.0.</value>
        <remarks>
          <para>Default value is 1.0.</para>
          <para>
            <see cref="P:Microsoft.Maui.Controls.VisualElement.Scale" /> is applied relative to <see cref="P:Microsoft.Maui.Controls.VisualElement.AnchorX" /> and <see cref="P:Microsoft.Maui.Controls.VisualElement.AnchorY" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty ScaleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty ScaleProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.ScaleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ScaleProperty As BindableProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Maui::Controls::BindableProperty ^ ScaleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ScaleProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.VisualElement.ScaleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bindable property for <see cref="P:Microsoft.Maui.Controls.VisualElement.Scale" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleX">
      <MemberSignature Language="C#" Value="public double ScaleX { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ScaleX" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.ScaleX" />
      <MemberSignature Language="VB.NET" Value="Public Property ScaleX As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double ScaleX { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.ScaleX : double with get, set" Usage="Microsoft.Maui.Controls.VisualElement.ScaleX" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a scale value to apply to the X direction. This is a bindable property.
            </summary>
        <value>The scale value to apply to the X direction.</value>
        <remarks>The default value is 1.0.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleXProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty ScaleXProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty ScaleXProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.ScaleXProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ScaleXProperty As BindableProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Maui::Controls::BindableProperty ^ ScaleXProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ScaleXProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.VisualElement.ScaleXProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bindable property for <see cref="P:Microsoft.Maui.Controls.VisualElement.ScaleX" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleY">
      <MemberSignature Language="C#" Value="public double ScaleY { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ScaleY" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.ScaleY" />
      <MemberSignature Language="VB.NET" Value="Public Property ScaleY As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double ScaleY { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.ScaleY : double with get, set" Usage="Microsoft.Maui.Controls.VisualElement.ScaleY" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a scale value to apply to the Y direction. This is a bindable property.
            </summary>
        <value>The scale value to apply to the Y direction.</value>
        <remarks>The default value is 1.0.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleYProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty ScaleYProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty ScaleYProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.ScaleYProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ScaleYProperty As BindableProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Maui::Controls::BindableProperty ^ ScaleYProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ScaleYProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.VisualElement.ScaleYProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bindable property for <see cref="P:Microsoft.Maui.Controls.VisualElement.ScaleY" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Shadow">
      <MemberSignature Language="C#" Value="public Microsoft.Maui.Controls.Shadow Shadow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Maui.Controls.Shadow Shadow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.Shadow" />
      <MemberSignature Language="VB.NET" Value="Public Property Shadow As Shadow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Maui::Controls::Shadow ^ Shadow { Microsoft::Maui::Controls::Shadow ^ get(); void set(Microsoft::Maui::Controls::Shadow ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Shadow : Microsoft.Maui.Controls.Shadow with get, set" Usage="Microsoft.Maui.Controls.VisualElement.Shadow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.Shadow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the shadow effect cast by the element. This is a bindable property.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShadowProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty ShadowProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty ShadowProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.ShadowProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ShadowProperty As BindableProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Maui::Controls::BindableProperty ^ ShadowProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ShadowProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.VisualElement.ShadowProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bindable property for <see cref="P:Microsoft.Maui.Controls.VisualElement.Shadow" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SizeAllocated">
      <MemberSignature Language="C#" Value="protected void SizeAllocated (double width, double height);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SizeAllocated(float64 width, float64 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.VisualElement.SizeAllocated(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SizeAllocated (width As Double, height As Double)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SizeAllocated(double width, double height);" />
      <MemberSignature Language="F#" Value="member this.SizeAllocated : double * double -&gt; unit" Usage="visualElement.SizeAllocated (width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="width">The newly allocated width.</param>
        <param name="height">The newly allocated height.</param>
        <summary>
            Method that is called during a layout cycle to signal the start of a sub-tree layout.
            </summary>
        <remarks>Calling <see cref="M:Microsoft.Maui.Controls.VisualElement.SizeAllocated(System.Double,System.Double)" /> will start a new layout cycle on the children of the element. Excessive calls to this method may cause performance problems.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SizeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SizeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SizeChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Maui.Controls.VisualElement.SizeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event SizeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SizeChanged;" />
      <MemberSignature Language="F#" Value="member this.SizeChanged : EventHandler " Usage="member this.SizeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Occurs when the size of an element changed.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StyleProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty StyleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty StyleProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.StyleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StyleProperty As BindableProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Maui::Controls::BindableProperty ^ StyleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable StyleProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.VisualElement.StyleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bindable property for <see cref="P:Microsoft.Maui.Controls.NavigableElement.Style" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TranslationX">
      <MemberSignature Language="C#" Value="public double TranslationX { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 TranslationX" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.TranslationX" />
      <MemberSignature Language="VB.NET" Value="Public Property TranslationX As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double TranslationX { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.TranslationX : double with get, set" Usage="Microsoft.Maui.Controls.VisualElement.TranslationX" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the X translation delta of the element. This is a bindable property.
            </summary>
        <value>The amount to translate the element.</value>
        <remarks>Translation is applied post layout. It is particularly good for applying animations. Translating an element outside the bounds of its parent container may prevent inputs from working.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TranslationXProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty TranslationXProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty TranslationXProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.TranslationXProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TranslationXProperty As BindableProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Maui::Controls::BindableProperty ^ TranslationXProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TranslationXProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.VisualElement.TranslationXProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bindable property for <see cref="P:Microsoft.Maui.Controls.VisualElement.TranslationX" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TranslationY">
      <MemberSignature Language="C#" Value="public double TranslationY { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 TranslationY" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.TranslationY" />
      <MemberSignature Language="VB.NET" Value="Public Property TranslationY As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double TranslationY { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.TranslationY : double with get, set" Usage="Microsoft.Maui.Controls.VisualElement.TranslationY" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the Y translation delta of the element. This is a bindable property.
            </summary>
        <value>The amount to translate the element.</value>
        <remarks>Translation is applied post layout. It is particularly good for applying animations. Translating an element outside the bounds of its parent container may prevent inputs from working.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TranslationYProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty TranslationYProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty TranslationYProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.TranslationYProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TranslationYProperty As BindableProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Maui::Controls::BindableProperty ^ TranslationYProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TranslationYProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.VisualElement.TranslationYProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bindable property for <see cref="P:Microsoft.Maui.Controls.VisualElement.TranslationY" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Triggers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Maui.Controls.TriggerBase&gt; Triggers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Maui.Controls.TriggerBase&gt; Triggers" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.Triggers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Triggers As IList(Of TriggerBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;Microsoft::Maui::Controls::TriggerBase ^&gt; ^ Triggers { System::Collections::Generic::IList&lt;Microsoft::Maui::Controls::TriggerBase ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Triggers : System.Collections.Generic.IList&lt;Microsoft.Maui.Controls.TriggerBase&gt;" Usage="Microsoft.Maui.Controls.VisualElement.Triggers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Maui.Controls.TriggerBase&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the list of <see cref="T:Microsoft.Maui.Controls.TriggerBase" /> objects associated to this element. This is a read-only bindable property.
            </summary>
        <value />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TriggersProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty TriggersProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty TriggersProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.TriggersProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TriggersProperty As BindableProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Maui::Controls::BindableProperty ^ TriggersProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TriggersProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.VisualElement.TriggersProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bindable property for <see cref="P:Microsoft.Maui.Controls.VisualElement.Triggers" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unfocus">
      <MemberSignature Language="C#" Value="public void Unfocus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unfocus() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.VisualElement.Unfocus" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unfocus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Unfocus();" />
      <MemberSignature Language="F#" Value="abstract member Unfocus : unit -&gt; unit&#xA;override this.Unfocus : unit -&gt; unit" Usage="visualElement.Unfocus " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Maui.IView.Unfocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Unsets keyboard focus on this element.
            </summary>
        <remarks>Element must already have focus for this to have any effect.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unfocused">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Microsoft.Maui.Controls.FocusEventArgs&gt; Unfocused;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.Maui.Controls.FocusEventArgs&gt; Unfocused" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Maui.Controls.VisualElement.Unfocused" />
      <MemberSignature Language="VB.NET" Value="Public Event Unfocused As EventHandler(Of FocusEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;Microsoft::Maui::Controls::FocusEventArgs ^&gt; ^ Unfocused;" />
      <MemberSignature Language="F#" Value="member this.Unfocused : EventHandler&lt;Microsoft.Maui.Controls.FocusEventArgs&gt; " Usage="member this.Unfocused : System.EventHandler&lt;Microsoft.Maui.Controls.FocusEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.Maui.Controls.FocusEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Occurs when this element is unfocused.
            </summary>
        <remarks>This event is not triggered when the element does not currently have focus.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unloaded">
      <MemberSignature Language="C#" Value="public event EventHandler? Unloaded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Unloaded" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Maui.Controls.VisualElement.Unloaded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Unloaded As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Unloaded;" />
      <MemberSignature Language="F#" Value="member this.Unloaded : EventHandler " Usage="member this.Unloaded : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Occurs when an element is no longer connected to the main object tree.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visual">
      <MemberSignature Language="C#" Value="public Microsoft.Maui.Controls.IVisual Visual { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Maui.Controls.IVisual Visual" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.Visual" />
      <MemberSignature Language="VB.NET" Value="Public Property Visual As IVisual" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Maui::Controls::IVisual ^ Visual { Microsoft::Maui::Controls::IVisual ^ get(); void set(Microsoft::Maui::Controls::IVisual ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Visual : Microsoft.Maui.Controls.IVisual with get, set" Usage="Microsoft.Maui.Controls.VisualElement.Visual" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(Microsoft.Maui.Controls.VisualTypeConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(Microsoft.Maui.Controls.VisualTypeConverter))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.IVisual</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a <see cref="T:Microsoft.Maui.Controls.IVisual" /> implementation that overrides the visual appearance of an element. This is a bindable property.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty VisualProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty VisualProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.VisualProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly VisualProperty As BindableProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Maui::Controls::BindableProperty ^ VisualProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable VisualProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.VisualElement.VisualProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bindable property for <see cref="P:Microsoft.Maui.Controls.VisualElement.Visual" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public double Width { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Width" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.Width" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Width As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Width { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Width : double" Usage="Microsoft.Maui.Controls.VisualElement.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the current width of this element. This is a read-only bindable property.
            </summary>
        <value>The renderered width of this element.</value>
        <remarks>The width value of an element is set during the layout cycle.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WidthProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty WidthProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty WidthProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.WidthProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly WidthProperty As BindableProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Maui::Controls::BindableProperty ^ WidthProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable WidthProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.VisualElement.WidthProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bindable property for <see cref="P:Microsoft.Maui.Controls.VisualElement.Width" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WidthRequest">
      <MemberSignature Language="C#" Value="public double WidthRequest { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 WidthRequest" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.WidthRequest" />
      <MemberSignature Language="VB.NET" Value="Public Property WidthRequest As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double WidthRequest { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.WidthRequest : double with get, set" Usage="Microsoft.Maui.Controls.VisualElement.WidthRequest" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the desired width override of this element. This is a bindable property.
            </summary>
        <value>The width this element desires to be.</value>
        <remarks>
          <para>The default value is -1, which means the value is unset and a width will be determined automatically.</para>
          <para>
            <see cref="P:Microsoft.Maui.Controls.VisualElement.WidthRequest" /> does not immediately change the <see cref="P:Microsoft.Maui.Controls.VisualElement.Bounds" /> of an element; setting the <see cref="P:Microsoft.Maui.Controls.VisualElement.WidthRequest" /> will change the resulting width of the element during the next layout pass.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WidthRequestProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty WidthRequestProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty WidthRequestProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.WidthRequestProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly WidthRequestProperty As BindableProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Maui::Controls::BindableProperty ^ WidthRequestProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable WidthRequestProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.VisualElement.WidthRequestProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bindable property for <see cref="P:Microsoft.Maui.Controls.VisualElement.WidthRequest" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Window">
      <MemberSignature Language="C#" Value="public Microsoft.Maui.Controls.Window Window { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Maui.Controls.Window Window" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.Window" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Window As Window" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Maui::Controls::Window ^ Window { Microsoft::Maui::Controls::Window ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Window : Microsoft.Maui.Controls.Window" Usage="Microsoft.Maui.Controls.VisualElement.Window" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.Window</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="P:Microsoft.Maui.Controls.VisualElement.Window" /> that is associated with an element. This is a read-only bindable property.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty WindowProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty WindowProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.WindowProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly WindowProperty As BindableProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Maui::Controls::BindableProperty ^ WindowProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable WindowProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.VisualElement.WindowProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bindable property for <see cref="P:Microsoft.Maui.Controls.VisualElement.Window" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public double X { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 X" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.X" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property X As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double X { double get(); };" />
      <MemberSignature Language="F#" Value="member this.X : double" Usage="Microsoft.Maui.Controls.VisualElement.X" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the current X position of this element. This is a read-only bindable property.
            </summary>
        <value>The X position of this element relative to its parents bounds.</value>
        <remarks>The position of an element is set during layout.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty XProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty XProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.XProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly XProperty As BindableProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Maui::Controls::BindableProperty ^ XProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable XProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.VisualElement.XProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bindable property for <see cref="P:Microsoft.Maui.Controls.VisualElement.X" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public double Y { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Y" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.Y" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Y As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Y { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Y : double" Usage="Microsoft.Maui.Controls.VisualElement.Y" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the current Y position of this element. This is a read-only bindable property.
            </summary>
        <value>The Y position of this element relative to its parents bounds.</value>
        <remarks>The position of an element is set during layout.</remarks>
      </Docs>
    </Member>
    <Member MemberName="YProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty YProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty YProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.YProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly YProperty As BindableProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Maui::Controls::BindableProperty ^ YProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable YProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.VisualElement.YProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bindable property for <see cref="P:Microsoft.Maui.Controls.VisualElement.Y" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZIndex">
      <MemberSignature Language="C#" Value="public int ZIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ZIndex" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.ZIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property ZIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ZIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ZIndex : int with get, set" Usage="Microsoft.Maui.Controls.VisualElement.ZIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the front-to-back z-index of an element within a layout. This is a bindable property.
            </summary>
        <value>To be added.</value>
        <remarks>An element with a higher <see cref="P:Microsoft.Maui.Controls.VisualElement.ZIndex" /> value will be shown on top of an element with a lower <see cref="P:Microsoft.Maui.Controls.VisualElement.ZIndex" /> value.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZIndexProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty ZIndexProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty ZIndexProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.ZIndexProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ZIndexProperty As BindableProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Maui::Controls::BindableProperty ^ ZIndexProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ZIndexProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.VisualElement.ZIndexProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bindable property for <see cref="P:Microsoft.Maui.Controls.VisualElement.ZIndex" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
