<Type Name="View" FullName="Microsoft.Maui.Controls.View">
  <TypeSignature Language="C#" Value="public class View : Microsoft.Maui.Controls.VisualElement, Microsoft.Maui.Controls.IGestureRecognizers, Microsoft.Maui.Controls.Internals.IGestureController, Microsoft.Maui.Controls.IViewController, Microsoft.Maui.HotReload.IHotReloadableView, Microsoft.Maui.IPropertyMapperView" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit View extends Microsoft.Maui.Controls.VisualElement implements class Microsoft.Maui.Controls.IElementController, class Microsoft.Maui.Controls.IGestureRecognizers, class Microsoft.Maui.Controls.Internals.IGestureController, class Microsoft.Maui.Controls.IViewController, class Microsoft.Maui.Controls.IVisualElementController, class Microsoft.Maui.HotReload.IHotReloadableView, class Microsoft.Maui.IElement, class Microsoft.Maui.IPropertyMapperView, class Microsoft.Maui.IReplaceableView, class Microsoft.Maui.ITransform, class Microsoft.Maui.IView" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Maui.Controls.View" />
  <TypeSignature Language="VB.NET" Value="Public Class View&#xA;Inherits VisualElement&#xA;Implements IGestureController, IGestureRecognizers, IHotReloadableView, IPropertyMapperView, IViewController" />
  <TypeSignature Language="C++ CLI" Value="public ref class View : Microsoft::Maui::Controls::VisualElement, Microsoft::Maui::Controls::IGestureRecognizers, Microsoft::Maui::Controls::Internals::IGestureController, Microsoft::Maui::Controls::IViewController, Microsoft::Maui::HotReload::IHotReloadableView, Microsoft::Maui::IPropertyMapperView" />
  <TypeSignature Language="F#" Value="type View = class&#xA;    inherit VisualElement&#xA;    interface IView&#xA;    interface IElement&#xA;    interface ITransform&#xA;    interface IPropertyMapperView&#xA;    interface IHotReloadableView&#xA;    interface IReplaceableView&#xA;    interface IViewController&#xA;    interface IVisualElementController&#xA;    interface IElementController&#xA;    interface IGestureController&#xA;    interface IGestureRecognizers" FrameworkAlternate="net-maui-7.0" />
  <TypeSignature Language="F#" Value="type View = class&#xA;    inherit VisualElement&#xA;    interface IViewController&#xA;    interface IVisualElementController&#xA;    interface IElementController&#xA;    interface IGestureController&#xA;    interface IGestureRecognizers&#xA;    interface IView&#xA;    interface IElement&#xA;    interface ITransform&#xA;    interface IPropertyMapperView&#xA;    interface IHotReloadableView&#xA;    interface IReplaceableView" FrameworkAlternate="net-maui-8.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Maui.Controls.VisualElement</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Maui.Controls.IElementController</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Maui.Controls.IGestureRecognizers</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Maui.Controls.Internals.IGestureController</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Maui.Controls.IViewController</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Maui.Controls.IVisualElementController</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Maui.HotReload.IHotReloadableView</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Maui.IElement</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Maui.IPropertyMapperView</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Maui.IReplaceableView</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Maui.ITransform</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Maui.IView</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>A visual element that is used to place layouts and controls on the screen.</summary>
    <remarks>
            This is the base class for <see cref="T:Microsoft.Maui.Controls.Layout" /> and most of the controls.
            Because <see cref="T:Microsoft.Maui.Controls.View" /> ultimately inherits from <see cref="T:Microsoft.Maui.Controls.BindableObject" />, application developers can use the Model-View-ViewModel architecture, as well as XAML, to develop portable user interfaces.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal View ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.View.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; View();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Maui.Controls.View" /> class
            </summary>
        <remarks>It is unlikely that an application developer would want to create an instance of <see cref="T:Microsoft.Maui.Controls.View" /> on their own.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeVisualState">
      <MemberSignature Language="C#" Value="protected internal override void ChangeVisualState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void ChangeVisualState() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.View.ChangeVisualState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub ChangeVisualState ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void ChangeVisualState();" />
      <MemberSignature Language="F#" Value="override this.ChangeVisualState : unit -&gt; unit" Usage="view.ChangeVisualState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GestureController">
      <MemberSignature Language="C#" Value="protected internal Microsoft.Maui.Controls.Internals.IGestureController GestureController { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Maui.Controls.Internals.IGestureController GestureController" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.View.GestureController" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property GestureController As IGestureController" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property Microsoft::Maui::Controls::Internals::IGestureController ^ GestureController { Microsoft::Maui::Controls::Internals::IGestureController ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GestureController : Microsoft.Maui.Controls.Internals.IGestureController" Usage="Microsoft.Maui.Controls.View.GestureController" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.Internals.IGestureController</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GestureRecognizers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Maui.Controls.IGestureRecognizer&gt; GestureRecognizers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Maui.Controls.IGestureRecognizer&gt; GestureRecognizers" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.View.GestureRecognizers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GestureRecognizers As IList(Of IGestureRecognizer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;Microsoft::Maui::Controls::IGestureRecognizer ^&gt; ^ GestureRecognizers { System::Collections::Generic::IList&lt;Microsoft::Maui::Controls::IGestureRecognizer ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GestureRecognizers : System.Collections.Generic.IList&lt;Microsoft.Maui.Controls.IGestureRecognizer&gt;" Usage="Microsoft.Maui.Controls.View.GestureRecognizers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Maui.Controls.IGestureRecognizers.GestureRecognizers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Maui.Controls.IGestureRecognizer&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The collection of gesture recognizers associated with this view.</summary>
        <value>A List of <see cref="T:Microsoft.Maui.Controls.IGestureRecognizer" />.</value>
        <remarks>
            Adding items to this collection will associate gesture events with this element.
            It is not recommended to add gesture recognizers for gestures that elements already natively support.
            <para>
            For example, adding a <see cref="T:Microsoft.Maui.Controls.TapGestureRecognizer" /> to a <see cref="T:Microsoft.Maui.Controls.Button" /> may lead to unexpected results.
            </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildElements">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Microsoft.Maui.Controls.GestureElement&gt; GetChildElements (Microsoft.Maui.Graphics.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class Microsoft.Maui.Controls.GestureElement&gt; GetChildElements(valuetype Microsoft.Maui.Graphics.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.View.GetChildElements(Microsoft.Maui.Graphics.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChildElements (point As Point) As IList(Of GestureElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;Microsoft::Maui::Controls::GestureElement ^&gt; ^ GetChildElements(Microsoft::Maui::Graphics::Point point);" />
      <MemberSignature Language="F#" Value="abstract member GetChildElements : Microsoft.Maui.Graphics.Point -&gt; System.Collections.Generic.IList&lt;Microsoft.Maui.Controls.GestureElement&gt;&#xA;override this.GetChildElements : Microsoft.Maui.Graphics.Point -&gt; System.Collections.Generic.IList&lt;Microsoft.Maui.Controls.GestureElement&gt;" Usage="view.GetChildElements point" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Maui.Controls.Internals.IGestureController.GetChildElements(Microsoft.Maui.Graphics.Point)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Maui.Controls.GestureElement&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="Microsoft.Maui.Graphics.Point" />
      </Parameters>
      <Docs>
        <param name="point">The point under which to search for child elements.</param>
        <summary>
            Gets the child elements that are visually beneath the specified <paramref name="point" />.
            </summary>
        <returns>All child elements visually beneath <paramref name="point" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRendererOverrides&lt;T&gt;">
      <MemberSignature Language="C#" Value="protected Microsoft.Maui.PropertyMapper&lt;T&gt; GetRendererOverrides&lt;T&gt; () where T : Microsoft.Maui.IView;" FrameworkAlternate="net-maui-7.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class Microsoft.Maui.PropertyMapper`1&lt;!!T&gt; GetRendererOverrides&lt;(class Microsoft.Maui.IView) T&gt;() cil managed" FrameworkAlternate="net-maui-7.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.View.GetRendererOverrides``1" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetRendererOverrides(Of T As IView) () As PropertyMapper(Of T)" FrameworkAlternate="net-maui-7.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA;generic &lt;typename T&gt;&#xA; where T : Microsoft::Maui::IView Microsoft::Maui::PropertyMapper&lt;T&gt; ^ GetRendererOverrides();" FrameworkAlternate="net-maui-7.0" />
      <MemberSignature Language="F#" Value="member this.GetRendererOverrides : unit -&gt; Microsoft.Maui.PropertyMapper&lt;'T (requires 'T :&gt; Microsoft.Maui.IView)&gt; (requires 'T :&gt; Microsoft.Maui.IView)" Usage="view.GetRendererOverrides " />
      <MemberSignature Language="C#" Value="protected internal Microsoft.Maui.PropertyMapper&lt;T&gt; GetRendererOverrides&lt;T&gt; () where T : Microsoft.Maui.IView;" FrameworkAlternate="net-maui-8.0" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance class Microsoft.Maui.PropertyMapper`1&lt;!!T&gt; GetRendererOverrides&lt;(class Microsoft.Maui.IView) T&gt;() cil managed" FrameworkAlternate="net-maui-8.0" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function GetRendererOverrides(Of T As IView) () As PropertyMapper(Of T)" FrameworkAlternate="net-maui-8.0" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA;generic &lt;typename T&gt;&#xA; where T : Microsoft::Maui::IView Microsoft::Maui::PropertyMapper&lt;T&gt; ^ GetRendererOverrides();" FrameworkAlternate="net-maui-8.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.PropertyMapper&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <InterfaceName>Microsoft.Maui.IView</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalOptions">
      <MemberSignature Language="C#" Value="public Microsoft.Maui.Controls.LayoutOptions HorizontalOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Maui.Controls.LayoutOptions HorizontalOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.View.HorizontalOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property HorizontalOptions As LayoutOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Maui::Controls::LayoutOptions HorizontalOptions { Microsoft::Maui::Controls::LayoutOptions get(); void set(Microsoft::Maui::Controls::LayoutOptions value); };" />
      <MemberSignature Language="F#" Value="member this.HorizontalOptions : Microsoft.Maui.Controls.LayoutOptions with get, set" Usage="Microsoft.Maui.Controls.View.HorizontalOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.LayoutOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the <see cref="T:Microsoft.Maui.Controls.LayoutOptions" /> that define how the element gets laid out in a layout cycle. This is a bindable property.
            </summary>
        <value>A <see cref="T:Microsoft.Maui.Controls.LayoutOptions" /> which defines how to lay out the element. Default value is <see cref="F:Microsoft.Maui.Controls.LayoutOptions.Fill" /> unless otherwise documented.</value>
        <remarks>
            Assigning <see cref="P:Microsoft.Maui.Controls.View.HorizontalOptions" /> modifies how the element is laid out when there is excess space available along the X axis from the parent layout.
            If multiple elements inside a layout are set to expand, the extra space is distributed proportionally.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalOptionsProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty HorizontalOptionsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty HorizontalOptionsProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.View.HorizontalOptionsProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HorizontalOptionsProperty As BindableProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Maui::Controls::BindableProperty ^ HorizontalOptionsProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable HorizontalOptionsProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.View.HorizontalOptionsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bindable property for <see cref="P:Microsoft.Maui.Controls.View.HorizontalOptions" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Margin">
      <MemberSignature Language="C#" Value="public Microsoft.Maui.Thickness Margin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Maui.Thickness Margin" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.View.Margin" />
      <MemberSignature Language="VB.NET" Value="Public Property Margin As Thickness" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Maui::Thickness Margin { Microsoft::Maui::Thickness get(); void set(Microsoft::Maui::Thickness value); };" />
      <MemberSignature Language="F#" Value="member this.Margin : Microsoft.Maui.Thickness with get, set" Usage="Microsoft.Maui.Controls.View.Margin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Thickness</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or set the margin for the view.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarginProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty MarginProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty MarginProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.View.MarginProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MarginProperty As BindableProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Maui::Controls::BindableProperty ^ MarginProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable MarginProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.View.MarginProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bindable property for <see cref="P:Microsoft.Maui.Controls.View.Margin" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Maui.Controls.Internals.IGestureController.CompositeGestureRecognizers">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IList&lt;Microsoft.Maui.Controls.IGestureRecognizer&gt; Microsoft.Maui.Controls.Internals.IGestureController.CompositeGestureRecognizers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Maui.Controls.IGestureRecognizer&gt; Microsoft.Maui.Controls.Internals.IGestureController.CompositeGestureRecognizers" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.View.Microsoft#Maui#Controls#Internals#IGestureController#CompositeGestureRecognizers" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property CompositeGestureRecognizers As IList(Of IGestureRecognizer) Implements IGestureController.CompositeGestureRecognizers" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::Generic::IList&lt;Microsoft::Maui::Controls::IGestureRecognizer ^&gt; ^ Microsoft::Maui::Controls::Internals::IGestureController::CompositeGestureRecognizers { System::Collections::Generic::IList&lt;Microsoft::Maui::Controls::IGestureRecognizer ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Microsoft.Maui.Controls.Internals.IGestureController.CompositeGestureRecognizers : System.Collections.Generic.IList&lt;Microsoft.Maui.Controls.IGestureRecognizer&gt;" Usage="Microsoft.Maui.Controls.Internals.IGestureController.CompositeGestureRecognizers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Maui.Controls.Internals.IGestureController.CompositeGestureRecognizers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Maui.Controls.IGestureRecognizer&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Maui.HotReload.IHotReloadableView.Reload">
      <MemberSignature Language="C#" Value="void IHotReloadableView.Reload ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Microsoft.Maui.HotReload.IHotReloadableView.Reload() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.View.Microsoft#Maui#HotReload#IHotReloadableView#Reload" />
      <MemberSignature Language="VB.NET" Value="Sub Reload () Implements IHotReloadableView.Reload" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Microsoft.Maui.HotReload.IHotReloadableView.Reload() = Microsoft::Maui::HotReload::IHotReloadableView::Reload;" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.Maui.HotReload.IHotReloadableView.Reload : unit -&gt; unit&#xA;override this.Microsoft.Maui.HotReload.IHotReloadableView.Reload : unit -&gt; unit" Usage="view.Microsoft.Maui.HotReload.IHotReloadableView.Reload " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Maui.HotReload.IHotReloadableView.Reload</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Maui.HotReload.IHotReloadableView.ReloadHandler">
      <MemberSignature Language="C#" Value="Microsoft.Maui.HotReload.IReloadHandler Microsoft.Maui.HotReload.IHotReloadableView.ReloadHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Maui.HotReload.IReloadHandler Microsoft.Maui.HotReload.IHotReloadableView.ReloadHandler" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.View.Microsoft#Maui#HotReload#IHotReloadableView#ReloadHandler" />
      <MemberSignature Language="VB.NET" Value=" Property ReloadHandler As IReloadHandler Implements IHotReloadableView.ReloadHandler" />
      <MemberSignature Language="C++ CLI" Value="property Microsoft::Maui::HotReload::IReloadHandler ^ Microsoft::Maui::HotReload::IHotReloadableView::ReloadHandler { Microsoft::Maui::HotReload::IReloadHandler ^ get(); void set(Microsoft::Maui::HotReload::IReloadHandler ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Microsoft.Maui.HotReload.IHotReloadableView.ReloadHandler : Microsoft.Maui.HotReload.IReloadHandler with get, set" Usage="Microsoft.Maui.HotReload.IHotReloadableView.ReloadHandler" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Maui.HotReload.IHotReloadableView.ReloadHandler</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.HotReload.IReloadHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Maui.HotReload.IHotReloadableView.TransferState">
      <MemberSignature Language="C#" Value="void IHotReloadableView.TransferState (Microsoft.Maui.IView newView);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Microsoft.Maui.HotReload.IHotReloadableView.TransferState(class Microsoft.Maui.IView newView) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.View.Microsoft#Maui#HotReload#IHotReloadableView#TransferState(Microsoft.Maui.IView)" />
      <MemberSignature Language="VB.NET" Value="Sub TransferState (newView As IView) Implements IHotReloadableView.TransferState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Microsoft.Maui.HotReload.IHotReloadableView.TransferState(Microsoft::Maui::IView ^ newView) = Microsoft::Maui::HotReload::IHotReloadableView::TransferState;" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.Maui.HotReload.IHotReloadableView.TransferState : Microsoft.Maui.IView -&gt; unit&#xA;override this.Microsoft.Maui.HotReload.IHotReloadableView.TransferState : Microsoft.Maui.IView -&gt; unit" Usage="view.Microsoft.Maui.HotReload.IHotReloadableView.TransferState newView" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Maui.HotReload.IHotReloadableView.TransferState(Microsoft.Maui.IView)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newView" Type="Microsoft.Maui.IView" />
      </Parameters>
      <Docs>
        <param name="newView">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Maui.IPropertyMapperView.GetPropertyMapperOverrides">
      <MemberSignature Language="C#" Value="Microsoft.Maui.PropertyMapper IPropertyMapperView.GetPropertyMapperOverrides ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.Maui.PropertyMapper Microsoft.Maui.IPropertyMapperView.GetPropertyMapperOverrides() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.View.Microsoft#Maui#IPropertyMapperView#GetPropertyMapperOverrides" />
      <MemberSignature Language="VB.NET" Value="Function GetPropertyMapperOverrides () As PropertyMapper Implements IPropertyMapperView.GetPropertyMapperOverrides" />
      <MemberSignature Language="C++ CLI" Value=" virtual Microsoft::Maui::PropertyMapper ^ Microsoft.Maui.IPropertyMapperView.GetPropertyMapperOverrides() = Microsoft::Maui::IPropertyMapperView::GetPropertyMapperOverrides;" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.Maui.IPropertyMapperView.GetPropertyMapperOverrides : unit -&gt; Microsoft.Maui.PropertyMapper&#xA;override this.Microsoft.Maui.IPropertyMapperView.GetPropertyMapperOverrides : unit -&gt; Microsoft.Maui.PropertyMapper" Usage="view.Microsoft.Maui.IPropertyMapperView.GetPropertyMapperOverrides " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Maui.IPropertyMapperView.GetPropertyMapperOverrides</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.PropertyMapper</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Maui.IReplaceableView.ReplacedView">
      <MemberSignature Language="C#" Value="Microsoft.Maui.IView Microsoft.Maui.IReplaceableView.ReplacedView { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Maui.IView Microsoft.Maui.IReplaceableView.ReplacedView" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.View.Microsoft#Maui#IReplaceableView#ReplacedView" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ReplacedView As IView Implements IReplaceableView.ReplacedView" />
      <MemberSignature Language="C++ CLI" Value="property Microsoft::Maui::IView ^ Microsoft::Maui::IReplaceableView::ReplacedView { Microsoft::Maui::IView ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Microsoft.Maui.IReplaceableView.ReplacedView : Microsoft.Maui.IView" Usage="Microsoft.Maui.IReplaceableView.ReplacedView" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Maui.IReplaceableView.ReplacedView</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.IView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Maui.IView.HorizontalLayoutAlignment">
      <MemberSignature Language="C#" Value="Microsoft.Maui.Primitives.LayoutAlignment Microsoft.Maui.IView.HorizontalLayoutAlignment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Maui.Primitives.LayoutAlignment Microsoft.Maui.IView.HorizontalLayoutAlignment" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.View.Microsoft#Maui#IView#HorizontalLayoutAlignment" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property HorizontalLayoutAlignment As LayoutAlignment Implements IView.HorizontalLayoutAlignment" />
      <MemberSignature Language="C++ CLI" Value="property Microsoft::Maui::Primitives::LayoutAlignment Microsoft::Maui::IView::HorizontalLayoutAlignment { Microsoft::Maui::Primitives::LayoutAlignment get(); };" />
      <MemberSignature Language="F#" Value="member this.Microsoft.Maui.IView.HorizontalLayoutAlignment : Microsoft.Maui.Primitives.LayoutAlignment" Usage="Microsoft.Maui.IView.HorizontalLayoutAlignment" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Maui.IView.HorizontalLayoutAlignment</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Primitives.LayoutAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Maui.IView.Margin">
      <MemberSignature Language="C#" Value="Microsoft.Maui.Thickness Microsoft.Maui.IView.Margin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Maui.Thickness Microsoft.Maui.IView.Margin" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.View.Microsoft#Maui#IView#Margin" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Margin As Thickness Implements IView.Margin" />
      <MemberSignature Language="C++ CLI" Value="property Microsoft::Maui::Thickness Microsoft::Maui::IView::Margin { Microsoft::Maui::Thickness get(); };" />
      <MemberSignature Language="F#" Value="member this.Microsoft.Maui.IView.Margin : Microsoft.Maui.Thickness" Usage="Microsoft.Maui.IView.Margin" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Maui.IView.Margin</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Thickness</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Maui.IView.VerticalLayoutAlignment">
      <MemberSignature Language="C#" Value="Microsoft.Maui.Primitives.LayoutAlignment Microsoft.Maui.IView.VerticalLayoutAlignment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Maui.Primitives.LayoutAlignment Microsoft.Maui.IView.VerticalLayoutAlignment" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.View.Microsoft#Maui#IView#VerticalLayoutAlignment" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property VerticalLayoutAlignment As LayoutAlignment Implements IView.VerticalLayoutAlignment" />
      <MemberSignature Language="C++ CLI" Value="property Microsoft::Maui::Primitives::LayoutAlignment Microsoft::Maui::IView::VerticalLayoutAlignment { Microsoft::Maui::Primitives::LayoutAlignment get(); };" />
      <MemberSignature Language="F#" Value="member this.Microsoft.Maui.IView.VerticalLayoutAlignment : Microsoft.Maui.Primitives.LayoutAlignment" Usage="Microsoft.Maui.IView.VerticalLayoutAlignment" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Maui.IView.VerticalLayoutAlignment</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Primitives.LayoutAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="OnBindingContextChanged">
      <MemberSignature Language="C#" Value="protected override void OnBindingContextChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBindingContextChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.View.OnBindingContextChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBindingContextChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBindingContextChanged();" />
      <MemberSignature Language="F#" Value="override this.OnBindingContextChanged : unit -&gt; unit" Usage="view.OnBindingContextChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Invoked whenever the binding context of the <see cref="T:Microsoft.Maui.Controls.View" /> changes. 
            </summary>
        <remarks>This method can be overridden to add class handling for this event. Overrides must call the base method.</remarks>
      </Docs>
    </Member>
    <Member MemberName="propertyMapper">
      <MemberSignature Language="C#" Value="protected Microsoft.Maui.PropertyMapper propertyMapper;" />
      <MemberSignature Language="ILAsm" Value=".field family class Microsoft.Maui.PropertyMapper propertyMapper" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.View.propertyMapper" />
      <MemberSignature Language="VB.NET" Value="Protected propertyMapper As PropertyMapper " />
      <MemberSignature Language="C++ CLI" Value="protected: Microsoft::Maui::PropertyMapper ^ propertyMapper;" />
      <MemberSignature Language="F#" Value="val mutable propertyMapper : Microsoft.Maui.PropertyMapper" Usage="Microsoft.Maui.Controls.View.propertyMapper" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.PropertyMapper</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Represents the view's internal <see cref="T:Microsoft.Maui.PropertyMapper" />.
            </summary>
        <remarks>Contains the unique property overrides that are used by <see cref="M:Microsoft.Maui.IPropertyMapperView.GetPropertyMapperOverrides" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalOptions">
      <MemberSignature Language="C#" Value="public Microsoft.Maui.Controls.LayoutOptions VerticalOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Maui.Controls.LayoutOptions VerticalOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.View.VerticalOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property VerticalOptions As LayoutOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Maui::Controls::LayoutOptions VerticalOptions { Microsoft::Maui::Controls::LayoutOptions get(); void set(Microsoft::Maui::Controls::LayoutOptions value); };" />
      <MemberSignature Language="F#" Value="member this.VerticalOptions : Microsoft.Maui.Controls.LayoutOptions with get, set" Usage="Microsoft.Maui.Controls.View.VerticalOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.LayoutOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the <see cref="T:Microsoft.Maui.Controls.LayoutOptions" /> that define how the element gets laid out in a layout cycle. This is a bindable property.
            </summary>
        <value>A <see cref="T:Microsoft.Maui.Controls.LayoutOptions" /> which defines how to lay out the element. Default value is <see cref="F:Microsoft.Maui.Controls.LayoutOptions.Fill" /> unless otherwise documented.</value>
        <remarks>
            Assigning <see cref="P:Microsoft.Maui.Controls.View.VerticalOptions" /> modifies how the element is laid out when there is excess space available along the Y axis from the parent layout.
            If multiple elements inside a layout are set to expand, the extra space is distributed proportionally.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalOptionsProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty VerticalOptionsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty VerticalOptionsProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.View.VerticalOptionsProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly VerticalOptionsProperty As BindableProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Maui::Controls::BindableProperty ^ VerticalOptionsProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable VerticalOptionsProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.View.VerticalOptionsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bindable property for <see cref="P:Microsoft.Maui.Controls.View.VerticalOptions" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
