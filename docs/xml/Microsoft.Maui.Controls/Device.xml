<Type Name="Device" FullName="Microsoft.Maui.Controls.Device">
  <TypeSignature Language="C#" Value="public static class Device" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Device extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Maui.Controls.Device" />
  <TypeSignature Language="VB.NET" Value="Public Class Device" />
  <TypeSignature Language="C++ CLI" Value="public ref class Device abstract sealed" />
  <TypeSignature Language="F#" Value="type Device = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Obsolete]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Obsolete&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>A utility class to interact with the current Device/Platform.</summary>
    <remarks />
  </Docs>
  <Members>
    <Member MemberName="Android">
      <MemberSignature Language="C#" Value="public const string Android;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string Android" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.Device.Android" />
      <MemberSignature Language="VB.NET" Value="Public Const Android As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ Android;" />
      <MemberSignature Language="F#" Value="val mutable Android : string" Usage="Microsoft.Maui.Controls.Device.Android" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("Use Microsoft.Maui.Devices.DevicePlatform.Android instead.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use Microsoft.Maui.Devices.DevicePlatform.Android instead.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The string "Android", representing the Android operating system.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginInvokeOnMainThread">
      <MemberSignature Language="C#" Value="public static void BeginInvokeOnMainThread (Action action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BeginInvokeOnMainThread(class System.Action action) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Device.BeginInvokeOnMainThread(System.Action)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub BeginInvokeOnMainThread (action As Action)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void BeginInvokeOnMainThread(Action ^ action);" />
      <MemberSignature Language="F#" Value="static member BeginInvokeOnMainThread : Action -&gt; unit" Usage="Microsoft.Maui.Controls.Device.BeginInvokeOnMainThread action" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("Use BindableObject.Dispatcher.Dispatch() instead.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use BindableObject.Dispatcher.Dispatch() instead.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.Action" />
      </Parameters>
      <Docs>
        <param name="action">The Action to invoke </param>
        <summary>Invokes an Action on the device main (UI) thread.</summary>
        <remarks>
          <para>This example shows how to set the Text of Label on the main thread, e.g. in response to an async event.
          </para>
          <example>
            <code lang="csharp lang-csharp"><![CDATA[
Device.BeginInvokeOnMainThread (() => {
  label.Text = "Async operation completed";
});
          ]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultRendererAssembly">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly DefaultRendererAssembly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Reflection.Assembly DefaultRendererAssembly" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.Device.DefaultRendererAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultRendererAssembly As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Reflection::Assembly ^ DefaultRendererAssembly { System::Reflection::Assembly ^ get(); void set(System::Reflection::Assembly ^ value); };" />
      <MemberSignature Language="F#" Value="static member DefaultRendererAssembly : System.Reflection.Assembly with get, set" Usage="Microsoft.Maui.Controls.Device.DefaultRendererAssembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlowDirection">
      <MemberSignature Language="C#" Value="public static Microsoft.Maui.FlowDirection FlowDirection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Microsoft.Maui.FlowDirection FlowDirection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.Device.FlowDirection" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property FlowDirection As FlowDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Microsoft::Maui::FlowDirection FlowDirection { Microsoft::Maui::FlowDirection get(); };" />
      <MemberSignature Language="F#" Value="static member FlowDirection : Microsoft.Maui.FlowDirection" Usage="Microsoft.Maui.Controls.Device.FlowDirection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("Use Microsoft.Maui.ApplicationModel.AppInfo.RequestedLayoutDirection instead.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use Microsoft.Maui.ApplicationModel.AppInfo.RequestedLayoutDirection instead.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.FlowDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the flow direction on the device.</summary>
        <value>The flow direction on the device. See Remarks.</value>
        <remarks>
          <para>The following contains a few important points about flow direction from <format type="text/html"><a href="https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/localization/right-to-left">Right-to-Left Localization</a></format>. Developers should consult that document for more information about limitations of right-to-left support, and for requirements to implement right-to-left support on various target platforms.</para>
          <para>The default value of <see cref="T:Microsoft.Maui.FlowDirection" /> for a visual element that has no parent is <see cref="F:Microsoft.Maui.FlowDirection.LeftToRight" />, even on platforms where <see cref="P:Microsoft.Maui.Controls.Device.FlowDirection" /> is <see cref="F:Microsoft.Maui.FlowDirection.RightToLeft" />. Therefore, developers must deliberately opt in to right-to-left layout. Developers can choose right-to-left layout by setting the <see cref="P:Microsoft.Maui.Controls.VisualElement.FlowDirection" /> property of the root element to <see cref="F:Microsoft.Maui.FlowDirection.RightToLeft" /> to chosse right-to-left layout, or to <see cref="F:Microsoft.Maui.FlowDirection.MatchParent" /> to match the device layout.</para>
          <para>All <see cref="T:Microsoft.Maui.Controls.VisualElement" />s that have a parent default to <see cref="F:Microsoft.Maui.FlowDirection.MatchParent" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMainThreadSynchronizationContextAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Threading.SynchronizationContext&gt; GetMainThreadSynchronizationContextAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Threading.SynchronizationContext&gt; GetMainThreadSynchronizationContextAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Device.GetMainThreadSynchronizationContextAsync" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMainThreadSynchronizationContextAsync () As Task(Of SynchronizationContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::Task&lt;System::Threading::SynchronizationContext ^&gt; ^ GetMainThreadSynchronizationContextAsync();" />
      <MemberSignature Language="F#" Value="static member GetMainThreadSynchronizationContextAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Threading.SynchronizationContext&gt;" Usage="Microsoft.Maui.Controls.Device.GetMainThreadSynchronizationContextAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("Use BindableObject.Dispatcher.GetSynchronizationContextAsync() instead.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use BindableObject.Dispatcher.GetSynchronizationContextAsync() instead.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Threading.SynchronizationContext&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the current <see cref="T:System.Threading.SynchronizationContext" /> from the main thread.</summary>
        <returns>The current <see cref="T:System.Threading.SynchronizationContext" /> from the main thread.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNamedSize">
      <MemberSignature Language="C#" Value="public static double GetNamedSize (Microsoft.Maui.Controls.NamedSize size, Microsoft.Maui.Controls.Element targetElement);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetNamedSize(valuetype Microsoft.Maui.Controls.NamedSize size, class Microsoft.Maui.Controls.Element targetElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Device.GetNamedSize(Microsoft.Maui.Controls.NamedSize,Microsoft.Maui.Controls.Element)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNamedSize (size As NamedSize, targetElement As Element) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetNamedSize(Microsoft::Maui::Controls::NamedSize size, Microsoft::Maui::Controls::Element ^ targetElement);" />
      <MemberSignature Language="F#" Value="static member GetNamedSize : Microsoft.Maui.Controls.NamedSize * Microsoft.Maui.Controls.Element -&gt; double" Usage="Microsoft.Maui.Controls.Device.GetNamedSize (size, targetElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="Microsoft.Maui.Controls.NamedSize" />
        <Parameter Name="targetElement" Type="Microsoft.Maui.Controls.Element" />
      </Parameters>
      <Docs>
        <param name="size">The named size for which to get the numeric size.</param>
        <param name="targetElement">The element for which to calculate the numeric size.</param>
        <summary>Returns a double that represents a font size that corresponds to <paramref name="size" /> on <paramref name="targetElement" />.</summary>
        <returns>A double that represents a font size that corresponds to <paramref name="size" /> on <paramref name="targetElement" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNamedSize">
      <MemberSignature Language="C#" Value="public static double GetNamedSize (Microsoft.Maui.Controls.NamedSize size, Type targetElementType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetNamedSize(valuetype Microsoft.Maui.Controls.NamedSize size, class System.Type targetElementType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Device.GetNamedSize(Microsoft.Maui.Controls.NamedSize,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNamedSize (size As NamedSize, targetElementType As Type) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetNamedSize(Microsoft::Maui::Controls::NamedSize size, Type ^ targetElementType);" />
      <MemberSignature Language="F#" Value="static member GetNamedSize : Microsoft.Maui.Controls.NamedSize * Type -&gt; double" Usage="Microsoft.Maui.Controls.Device.GetNamedSize (size, targetElementType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="Microsoft.Maui.Controls.NamedSize" />
        <Parameter Name="targetElementType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="size">The named size for which to get the numeric size.</param>
        <param name="targetElementType">The element type for which to calculate the numeric size.</param>
        <summary>Returns a double that represents the named size for the font that is used on the element on the native platform.</summary>
        <returns>The named size for the font that is used on the element on the native platform.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNamedSize">
      <MemberSignature Language="C#" Value="public static double GetNamedSize (Microsoft.Maui.Controls.NamedSize size, Type targetElementType, bool useOldSizes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetNamedSize(valuetype Microsoft.Maui.Controls.NamedSize size, class System.Type targetElementType, bool useOldSizes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Device.GetNamedSize(Microsoft.Maui.Controls.NamedSize,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNamedSize (size As NamedSize, targetElementType As Type, useOldSizes As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetNamedSize(Microsoft::Maui::Controls::NamedSize size, Type ^ targetElementType, bool useOldSizes);" />
      <MemberSignature Language="F#" Value="static member GetNamedSize : Microsoft.Maui.Controls.NamedSize * Type * bool -&gt; double" Usage="Microsoft.Maui.Controls.Device.GetNamedSize (size, targetElementType, useOldSizes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="Microsoft.Maui.Controls.NamedSize" />
        <Parameter Name="targetElementType" Type="System.Type" />
        <Parameter Name="useOldSizes" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="size">For internal use by the Microsoft.Maui.Controls platform.</param>
        <param name="targetElementType">For internal use by the Microsoft.Maui.Controls platform.</param>
        <param name="useOldSizes">For internal use by the Microsoft.Maui.Controls platform.</param>
        <summary>For internal use by the Microsoft.Maui.Controls platform.</summary>
        <returns>For internal use by the Microsoft.Maui.Controls platform.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Idiom">
      <MemberSignature Language="C#" Value="public static Microsoft.Maui.Controls.TargetIdiom Idiom { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Microsoft.Maui.Controls.TargetIdiom Idiom" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.Device.Idiom" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Idiom As TargetIdiom" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Microsoft::Maui::Controls::TargetIdiom Idiom { Microsoft::Maui::Controls::TargetIdiom get(); };" />
      <MemberSignature Language="F#" Value="static member Idiom : Microsoft.Maui.Controls.TargetIdiom" Usage="Microsoft.Maui.Controls.Device.Idiom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("Use Microsoft.Maui.Devices.DeviceInfo.Idiom instead.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use Microsoft.Maui.Devices.DeviceInfo.Idiom instead.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.TargetIdiom</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the kind of device that Microsoft.Maui.Controls is currently working on.</summary>
        <value>A <see cref="T:Microsoft.Maui.Controls.TargetIdiom" /> that represents the device type.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeOnMainThreadAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task InvokeOnMainThreadAsync (Action action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task InvokeOnMainThreadAsync(class System.Action action) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Device.InvokeOnMainThreadAsync(System.Action)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InvokeOnMainThreadAsync (action As Action) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::Task ^ InvokeOnMainThreadAsync(Action ^ action);" />
      <MemberSignature Language="F#" Value="static member InvokeOnMainThreadAsync : Action -&gt; System.Threading.Tasks.Task" Usage="Microsoft.Maui.Controls.Device.InvokeOnMainThreadAsync action" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("Use BindableObject.Dispatcher.DispatchAsync() instead.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use BindableObject.Dispatcher.DispatchAsync() instead.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.Action" />
      </Parameters>
      <Docs>
        <param name="action">The Action to invoke</param>
        <summary>Invokes an Action on the device main (UI) thread.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeOnMainThreadAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task InvokeOnMainThreadAsync (Func&lt;System.Threading.Tasks.Task&gt; funcTask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task InvokeOnMainThreadAsync(class System.Func`1&lt;class System.Threading.Tasks.Task&gt; funcTask) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Device.InvokeOnMainThreadAsync(System.Func{System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InvokeOnMainThreadAsync (funcTask As Func(Of Task)) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::Task ^ InvokeOnMainThreadAsync(Func&lt;System::Threading::Tasks::Task ^&gt; ^ funcTask);" />
      <MemberSignature Language="F#" Value="static member InvokeOnMainThreadAsync : Func&lt;System.Threading.Tasks.Task&gt; -&gt; System.Threading.Tasks.Task" Usage="Microsoft.Maui.Controls.Device.InvokeOnMainThreadAsync funcTask" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("Use BindableObject.Dispatcher.DispatchAsync() instead.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use BindableObject.Dispatcher.DispatchAsync() instead.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="funcTask" Type="System.Func&lt;System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <param name="funcTask">The Func to invoke.</param>
        <summary>Invokes a Func on the device main (UI) thread.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeOnMainThreadAsync&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;T&gt; InvokeOnMainThreadAsync&lt;T&gt; (Func&lt;System.Threading.Tasks.Task&lt;T&gt;&gt; funcTask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;!!T&gt; InvokeOnMainThreadAsync&lt;T&gt;(class System.Func`1&lt;class System.Threading.Tasks.Task`1&lt;!!T&gt;&gt; funcTask) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Device.InvokeOnMainThreadAsync``1(System.Func{System.Threading.Tasks.Task{``0}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InvokeOnMainThreadAsync(Of T) (funcTask As Func(Of Task(Of T))) As Task(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Threading::Tasks::Task&lt;T&gt; ^ InvokeOnMainThreadAsync(Func&lt;System::Threading::Tasks::Task&lt;T&gt; ^&gt; ^ funcTask);" />
      <MemberSignature Language="F#" Value="static member InvokeOnMainThreadAsync : Func&lt;System.Threading.Tasks.Task&lt;'T&gt;&gt; -&gt; System.Threading.Tasks.Task&lt;'T&gt;" Usage="Microsoft.Maui.Controls.Device.InvokeOnMainThreadAsync funcTask" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("Use BindableObject.Dispatcher.DispatchAsync() instead.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use BindableObject.Dispatcher.DispatchAsync() instead.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="funcTask" Type="System.Func&lt;System.Threading.Tasks.Task&lt;T&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">The return type of the Func.</typeparam>
        <param name="funcTask">The Func to invoke.</param>
        <summary>Invokes a Func on the device main (UI) thread.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeOnMainThreadAsync&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;T&gt; InvokeOnMainThreadAsync&lt;T&gt; (Func&lt;T&gt; func);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;!!T&gt; InvokeOnMainThreadAsync&lt;T&gt;(class System.Func`1&lt;!!T&gt; func) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Device.InvokeOnMainThreadAsync``1(System.Func{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InvokeOnMainThreadAsync(Of T) (func As Func(Of T)) As Task(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Threading::Tasks::Task&lt;T&gt; ^ InvokeOnMainThreadAsync(Func&lt;T&gt; ^ func);" />
      <MemberSignature Language="F#" Value="static member InvokeOnMainThreadAsync : Func&lt;'T&gt; -&gt; System.Threading.Tasks.Task&lt;'T&gt;" Usage="Microsoft.Maui.Controls.Device.InvokeOnMainThreadAsync func" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("Use BindableObject.Dispatcher.DispatchAsync() instead.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use BindableObject.Dispatcher.DispatchAsync() instead.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="func" Type="System.Func&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">The return type of the Func.</typeparam>
        <param name="func">The Func to invoke.</param>
        <summary>Invokes a Func on the device main (UI) thread.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="iOS">
      <MemberSignature Language="C#" Value="public const string iOS;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string iOS" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.Device.iOS" />
      <MemberSignature Language="VB.NET" Value="Public Const iOS As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ iOS;" />
      <MemberSignature Language="F#" Value="val mutable iOS : string" Usage="Microsoft.Maui.Controls.Device.iOS" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("Use Microsoft.Maui.Devices.DevicePlatform.iOS instead.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use Microsoft.Maui.Devices.DevicePlatform.iOS instead.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The string "iOS", representing the iOS operating system.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInvokeRequired">
      <MemberSignature Language="C#" Value="public static bool IsInvokeRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsInvokeRequired" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.Device.IsInvokeRequired" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsInvokeRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsInvokeRequired { bool get(); };" />
      <MemberSignature Language="F#" Value="static member IsInvokeRequired : bool" Usage="Microsoft.Maui.Controls.Device.IsInvokeRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("Use BindableObject.Dispatcher.IsDispatchRequired instead.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use BindableObject.Dispatcher.IsDispatchRequired instead.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>For internal use by the Microsoft.Maui.Controls platform.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MacCatalyst">
      <MemberSignature Language="C#" Value="public const string MacCatalyst;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string MacCatalyst" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.Device.MacCatalyst" />
      <MemberSignature Language="VB.NET" Value="Public Const MacCatalyst As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ MacCatalyst;" />
      <MemberSignature Language="F#" Value="val mutable MacCatalyst : string" Usage="Microsoft.Maui.Controls.Device.MacCatalyst" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("Use Microsoft.Maui.Devices.DevicePlatform.MacCatalyst instead.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use Microsoft.Maui.Devices.DevicePlatform.MacCatalyst instead.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RuntimePlatform">
      <MemberSignature Language="C#" Value="public static string RuntimePlatform { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string RuntimePlatform" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.Device.RuntimePlatform" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property RuntimePlatform As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ RuntimePlatform { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="static member RuntimePlatform : string" Usage="Microsoft.Maui.Controls.Device.RuntimePlatform" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("Use Microsoft.Maui.Devices.DeviceInfo.Platform instead.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use Microsoft.Maui.Devices.DeviceInfo.Platform instead.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the kind of device that Microsoft.Maui.Controls is currently working on.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartTimer">
      <MemberSignature Language="C#" Value="public static void StartTimer (TimeSpan interval, Func&lt;bool&gt; callback);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StartTimer(valuetype System.TimeSpan interval, class System.Func`1&lt;bool&gt; callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Device.StartTimer(System.TimeSpan,System.Func{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub StartTimer (interval As TimeSpan, callback As Func(Of Boolean))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StartTimer(TimeSpan interval, Func&lt;bool&gt; ^ callback);" />
      <MemberSignature Language="F#" Value="static member StartTimer : TimeSpan * Func&lt;bool&gt; -&gt; unit" Usage="Microsoft.Maui.Controls.Device.StartTimer (interval, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("Use BindableObject.Dispatcher.StartTimer() or BindableObject.Dispatcher.DispatchDelayed() instead.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use BindableObject.Dispatcher.StartTimer() or BindableObject.Dispatcher.DispatchDelayed() instead.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interval" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.Func&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="interval">The interval between invocations of the callback.</param>
        <param name="callback">The action to run when the timer elapses.</param>
        <summary>Starts a recurring timer using the device clock capabilities.</summary>
        <remarks>
          <para>While the callback returns <see langword="true" />, the timer will keep recurring.</para>
          <para>If you want the code inside the timer to interact on the UI thread (e.g. setting text of a Label or showing an alert), it should be done within a <see langword="BeginInvokeOnMainThread" /> expression, which will be nested inside the timer (see below).</para>
          <example>
            <code lang="csharp lang-csharp"><![CDATA[
Device.StartTimer (new TimeSpan (0, 0, 60), () =>
{
    // do something every 60 seconds
    Device.BeginInvokeOnMainThread (() => 
    {
      // interact with UI elements
    });
    return true; // runs again, or false to stop
});
          ]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tizen">
      <MemberSignature Language="C#" Value="public const string Tizen;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string Tizen" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.Device.Tizen" />
      <MemberSignature Language="VB.NET" Value="Public Const Tizen As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ Tizen;" />
      <MemberSignature Language="F#" Value="val mutable Tizen : string" Usage="Microsoft.Maui.Controls.Device.Tizen" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("Use Microsoft.Maui.Devices.DevicePlatform.Tizen instead.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use Microsoft.Maui.Devices.DevicePlatform.Tizen instead.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The string "Tizen", representing the Tizen operating system.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="tvOS">
      <MemberSignature Language="C#" Value="public const string tvOS;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string tvOS" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.Device.tvOS" />
      <MemberSignature Language="VB.NET" Value="Public Const tvOS As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ tvOS;" />
      <MemberSignature Language="F#" Value="val mutable tvOS : string" Usage="Microsoft.Maui.Controls.Device.tvOS" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("Use Microsoft.Maui.Devices.DevicePlatform.tvOS instead.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use Microsoft.Maui.Devices.DevicePlatform.tvOS instead.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UWP">
      <MemberSignature Language="C#" Value="public const string UWP;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string UWP" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.Device.UWP" />
      <MemberSignature Language="VB.NET" Value="Public Const UWP As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ UWP;" />
      <MemberSignature Language="F#" Value="val mutable UWP : string" Usage="Microsoft.Maui.Controls.Device.UWP" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("Use Microsoft.Maui.Devices.DevicePlatform.WinUI instead.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use Microsoft.Maui.Devices.DevicePlatform.WinUI instead.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The string "UWP", representing the UWP operating system.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WinUI">
      <MemberSignature Language="C#" Value="public const string WinUI;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string WinUI" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.Device.WinUI" />
      <MemberSignature Language="VB.NET" Value="Public Const WinUI As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ WinUI;" />
      <MemberSignature Language="F#" Value="val mutable WinUI : string" Usage="Microsoft.Maui.Controls.Device.WinUI" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("Use Microsoft.Maui.Devices.DevicePlatform.WinUI instead.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use Microsoft.Maui.Devices.DevicePlatform.WinUI instead.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
