<Type Name="HybridWebView" FullName="Microsoft.Maui.Controls.HybridWebView">
  <TypeSignature Language="C#" Value="public class HybridWebView : Microsoft.Maui.Controls.View, Microsoft.Maui.IHybridWebView" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HybridWebView extends Microsoft.Maui.Controls.View implements class Microsoft.Maui.IElement, class Microsoft.Maui.IHybridWebView, class Microsoft.Maui.ITransform, class Microsoft.Maui.IView" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Maui.Controls.HybridWebView" />
  <TypeSignature Language="VB.NET" Value="Public Class HybridWebView&#xA;Inherits View&#xA;Implements IHybridWebView" />
  <TypeSignature Language="C++ CLI" Value="public ref class HybridWebView : Microsoft::Maui::Controls::View, Microsoft::Maui::IHybridWebView" />
  <TypeSignature Language="F#" Value="type HybridWebView = class&#xA;    inherit View&#xA;    interface IHybridWebView&#xA;    interface IView&#xA;    interface IElement&#xA;    interface ITransform" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Maui.Controls.View</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Maui.IElement</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Maui.IHybridWebView</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Maui.ITransform</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Maui.IView</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            A <see cref="T:Microsoft.Maui.Controls.View" /> that presents local HTML content in a web view and allows JavaScript and C# code to
            communicate by using messages and by invoking methods.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HybridWebView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.HybridWebView.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HybridWebView();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultFile">
      <MemberSignature Language="C#" Value="public string? DefaultFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultFile" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.HybridWebView.DefaultFile" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultFile : string with get, set" Usage="Microsoft.Maui.Controls.HybridWebView.DefaultFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Specifies the file within the <see cref="P:Microsoft.Maui.Controls.HybridWebView.HybridRoot" /> that should be served as the default file. The
            default value is <c>index.html</c>.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="DefaultFileProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty DefaultFileProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty DefaultFileProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.HybridWebView.DefaultFileProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DefaultFileProperty As BindableProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Maui::Controls::BindableProperty ^ DefaultFileProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable DefaultFileProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.HybridWebView.DefaultFileProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bindable property for <see cref="P:Microsoft.Maui.Controls.HybridWebView.DefaultFile" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluateJavaScriptAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string?&gt; EvaluateJavaScriptAsync (string script);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; EvaluateJavaScriptAsync(string script) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.HybridWebView.EvaluateJavaScriptAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EvaluateJavaScriptAsync (script As String) As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::String ^&gt; ^ EvaluateJavaScriptAsync(System::String ^ script);" />
      <MemberSignature Language="F#" Value="abstract member EvaluateJavaScriptAsync : string -&gt; System.Threading.Tasks.Task&lt;string&gt;&#xA;override this.EvaluateJavaScriptAsync : string -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="hybridWebView.EvaluateJavaScriptAsync script" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Maui.IHybridWebView.EvaluateJavaScriptAsync(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="net-maui-10.0">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 2 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 2 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="script" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="script">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="HybridRoot">
      <MemberSignature Language="C#" Value="public string? HybridRoot { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HybridRoot" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.HybridWebView.HybridRoot" />
      <MemberSignature Language="VB.NET" Value="Public Property HybridRoot As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HybridRoot { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HybridRoot : string with get, set" Usage="Microsoft.Maui.Controls.HybridWebView.HybridRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             The path within the app's "Raw" asset resources that contain the web app's contents. For example, if the
             files are located in <c>[ProjectFolder]/Resources/Raw/hybrid_root</c>, then set this property to "hybrid_root".
             The default value is <c>wwwroot</c>, which maps to <c>[ProjectFolder]/Resources/Raw/wwwroot</c>.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="HybridRootProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty HybridRootProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty HybridRootProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.HybridWebView.HybridRootProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HybridRootProperty As BindableProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Maui::Controls::BindableProperty ^ HybridRootProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable HybridRootProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.HybridWebView.HybridRootProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bindable property for <see cref="P:Microsoft.Maui.Controls.HybridWebView.HybridRoot" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeJavaScriptAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task InvokeJavaScriptAsync (string methodName, object?[]? paramValues = default, System.Text.Json.Serialization.Metadata.JsonTypeInfo?[]? paramJsonTypeInfos = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task InvokeJavaScriptAsync(string methodName, object[] paramValues, class System.Text.Json.Serialization.Metadata.JsonTypeInfo[] paramJsonTypeInfos) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.HybridWebView.InvokeJavaScriptAsync(System.String,System.Object[],System.Text.Json.Serialization.Metadata.JsonTypeInfo[])" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeJavaScriptAsync (methodName As String, Optional paramValues As Object() = Nothing, Optional paramJsonTypeInfos As JsonTypeInfo() = Nothing) As Task" />
      <MemberSignature Language="F#" Value="member this.InvokeJavaScriptAsync : string * obj[] * System.Text.Json.Serialization.Metadata.JsonTypeInfo[] -&gt; System.Threading.Tasks.Task" Usage="hybridWebView.InvokeJavaScriptAsync (methodName, paramValues, paramJsonTypeInfos)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" Index="0" FrameworkAlternate="net-maui-10.0" />
        <Parameter Name="paramValues" Type="System.Object[]" Index="1" FrameworkAlternate="net-maui-10.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="paramJsonTypeInfos" Type="System.Text.Json.Serialization.Metadata.JsonTypeInfo[]" Index="2" FrameworkAlternate="net-maui-10.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="methodName">To be added.</param>
        <param name="paramValues">To be added.</param>
        <param name="paramJsonTypeInfos">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="InvokeJavaScriptAsync&lt;TReturnType&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TReturnType?&gt; InvokeJavaScriptAsync&lt;TReturnType&gt; (string methodName, System.Text.Json.Serialization.Metadata.JsonTypeInfo&lt;TReturnType&gt; returnTypeJsonTypeInfo, object?[]? paramValues = default, System.Text.Json.Serialization.Metadata.JsonTypeInfo?[]? paramJsonTypeInfos = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;!!TReturnType&gt; InvokeJavaScriptAsync&lt;TReturnType&gt;(string methodName, class System.Text.Json.Serialization.Metadata.JsonTypeInfo`1&lt;!!TReturnType&gt; returnTypeJsonTypeInfo, object[] paramValues, class System.Text.Json.Serialization.Metadata.JsonTypeInfo[] paramJsonTypeInfos) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.HybridWebView.InvokeJavaScriptAsync``1(System.String,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0},System.Object[],System.Text.Json.Serialization.Metadata.JsonTypeInfo[])" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeJavaScriptAsync(Of TReturnType) (methodName As String, returnTypeJsonTypeInfo As JsonTypeInfo(Of TReturnType), Optional paramValues As Object() = Nothing, Optional paramJsonTypeInfos As JsonTypeInfo() = Nothing) As Task(Of TReturnType)" />
      <MemberSignature Language="F#" Value="abstract member InvokeJavaScriptAsync : string * System.Text.Json.Serialization.Metadata.JsonTypeInfo&lt;'ReturnType&gt; * obj[] * System.Text.Json.Serialization.Metadata.JsonTypeInfo[] -&gt; System.Threading.Tasks.Task&lt;'ReturnType&gt;&#xA;override this.InvokeJavaScriptAsync : string * System.Text.Json.Serialization.Metadata.JsonTypeInfo&lt;'ReturnType&gt; * obj[] * System.Text.Json.Serialization.Metadata.JsonTypeInfo[] -&gt; System.Threading.Tasks.Task&lt;'ReturnType&gt;" Usage="hybridWebView.InvokeJavaScriptAsync (methodName, returnTypeJsonTypeInfo, paramValues, paramJsonTypeInfos)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Maui.IHybridWebView.InvokeJavaScriptAsync``1(System.String,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0},System.Object[],System.Text.Json.Serialization.Metadata.JsonTypeInfo[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TReturnType&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="net-maui-10.0">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 2 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 2 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TReturnType" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="methodName" Type="System.String">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="returnTypeJsonTypeInfo" Type="System.Text.Json.Serialization.Metadata.JsonTypeInfo&lt;TReturnType&gt;">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="paramValues" Type="System.Object[]" />
        <Parameter Name="paramJsonTypeInfos" Type="System.Text.Json.Serialization.Metadata.JsonTypeInfo[]" />
      </Parameters>
      <Docs>
        <typeparam name="TReturnType">To be added.</typeparam>
        <param name="methodName">To be added.</param>
        <param name="returnTypeJsonTypeInfo">To be added.</param>
        <param name="paramValues">To be added.</param>
        <param name="paramJsonTypeInfos">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Maui.IHybridWebView.InvokeJavaScriptTarget">
      <MemberSignature Language="C#" Value="object? Microsoft.Maui.IHybridWebView.InvokeJavaScriptTarget { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Microsoft.Maui.IHybridWebView.InvokeJavaScriptTarget" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.HybridWebView.Microsoft#Maui#IHybridWebView#InvokeJavaScriptTarget" />
      <MemberSignature Language="VB.NET" Value=" Property InvokeJavaScriptTarget As Object Implements IHybridWebView.InvokeJavaScriptTarget" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ Microsoft::Maui::IHybridWebView::InvokeJavaScriptTarget { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Microsoft.Maui.IHybridWebView.InvokeJavaScriptTarget : obj with get, set" Usage="Microsoft.Maui.IHybridWebView.InvokeJavaScriptTarget" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Maui.IHybridWebView.InvokeJavaScriptTarget</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Maui.IHybridWebView.InvokeJavaScriptType">
      <MemberSignature Language="C#" Value="Type? Microsoft.Maui.IHybridWebView.InvokeJavaScriptType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Microsoft.Maui.IHybridWebView.InvokeJavaScriptType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.HybridWebView.Microsoft#Maui#IHybridWebView#InvokeJavaScriptType" />
      <MemberSignature Language="VB.NET" Value=" Property InvokeJavaScriptType As Type Implements IHybridWebView.InvokeJavaScriptType" />
      <MemberSignature Language="C++ CLI" Value="property Type ^ Microsoft::Maui::IHybridWebView::InvokeJavaScriptType { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Microsoft.Maui.IHybridWebView.InvokeJavaScriptType : Type with get, set" Usage="Microsoft.Maui.IHybridWebView.InvokeJavaScriptType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Maui.IHybridWebView.InvokeJavaScriptType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.All)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.All)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Maui.IHybridWebView.RawMessageReceived">
      <MemberSignature Language="C#" Value="void IHybridWebView.RawMessageReceived (string rawMessage);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Microsoft.Maui.IHybridWebView.RawMessageReceived(string rawMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.HybridWebView.Microsoft#Maui#IHybridWebView#RawMessageReceived(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RawMessageReceived (rawMessage As String) Implements IHybridWebView.RawMessageReceived" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Microsoft.Maui.IHybridWebView.RawMessageReceived(System::String ^ rawMessage) = Microsoft::Maui::IHybridWebView::RawMessageReceived;" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.Maui.IHybridWebView.RawMessageReceived : string -&gt; unit&#xA;override this.Microsoft.Maui.IHybridWebView.RawMessageReceived : string -&gt; unit" Usage="hybridWebView.Microsoft.Maui.IHybridWebView.RawMessageReceived rawMessage" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Maui.IHybridWebView.RawMessageReceived(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rawMessage">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RawMessageReceived">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Microsoft.Maui.Controls.HybridWebViewRawMessageReceivedEventArgs&gt;? RawMessageReceived;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.Maui.Controls.HybridWebViewRawMessageReceivedEventArgs&gt; RawMessageReceived" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Maui.Controls.HybridWebView.RawMessageReceived" />
      <MemberSignature Language="VB.NET" Value="Public Event RawMessageReceived As EventHandler(Of HybridWebViewRawMessageReceivedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;Microsoft::Maui::Controls::HybridWebViewRawMessageReceivedEventArgs ^&gt; ^ RawMessageReceived;" />
      <MemberSignature Language="F#" Value="member this.RawMessageReceived : EventHandler&lt;Microsoft.Maui.Controls.HybridWebViewRawMessageReceivedEventArgs&gt; " Usage="member this.RawMessageReceived : System.EventHandler&lt;Microsoft.Maui.Controls.HybridWebViewRawMessageReceivedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.Maui.Controls.HybridWebViewRawMessageReceivedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Raised when a raw message is received from the web view. Raw messages are strings that have no additional processing.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendRawMessage">
      <MemberSignature Language="C#" Value="public void SendRawMessage (string rawMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendRawMessage(string rawMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.HybridWebView.SendRawMessage(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendRawMessage (rawMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SendRawMessage(System::String ^ rawMessage);" />
      <MemberSignature Language="F#" Value="abstract member SendRawMessage : string -&gt; unit&#xA;override this.SendRawMessage : string -&gt; unit" Usage="hybridWebView.SendRawMessage rawMessage" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Maui.IHybridWebView.SendRawMessage(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rawMessage" />
        <summary>
            Sends a raw message to the code running in the web view. Raw messages have no additional processing.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetInvokeJavaScriptTarget&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void SetInvokeJavaScriptTarget&lt;T&gt; (T target) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetInvokeJavaScriptTarget&lt;class T&gt;(!!T target) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.HybridWebView.SetInvokeJavaScriptTarget``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetInvokeJavaScriptTarget(Of T As Class) (target As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class virtual void SetInvokeJavaScriptTarget(T target);" />
      <MemberSignature Language="F#" Value="abstract member SetInvokeJavaScriptTarget : 'T -&gt; unit (requires 'T : null)&#xA;override this.SetInvokeJavaScriptTarget : 'T -&gt; unit (requires 'T : null)" Usage="hybridWebView.SetInvokeJavaScriptTarget target" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Maui.IHybridWebView.SetInvokeJavaScriptTarget``1(``0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.All)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.All)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="target">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>
