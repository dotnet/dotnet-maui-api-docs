<Type Name="ViewExtensions" FullName="Microsoft.Maui.Controls.ViewExtensions">
  <TypeSignature Language="C#" Value="public static class ViewExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ViewExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Maui.Controls.ViewExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module ViewExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class ViewExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type ViewExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Extension methods for <see cref="T:Microsoft.Maui.Controls.VisualElement" />s, providing animatable scaling, rotation, and layout functions.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CancelAnimations">
      <MemberSignature Language="C#" Value="public static void CancelAnimations (this Microsoft.Maui.Controls.VisualElement view);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CancelAnimations(class Microsoft.Maui.Controls.VisualElement view) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.ViewExtensions.CancelAnimations(Microsoft.Maui.Controls.VisualElement)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CancelAnimations (view As VisualElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void CancelAnimations(Microsoft::Maui::Controls::VisualElement ^ view);" />
      <MemberSignature Language="F#" Value="static member CancelAnimations : Microsoft.Maui.Controls.VisualElement -&gt; unit" Usage="Microsoft.Maui.Controls.ViewExtensions.CancelAnimations view" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Microsoft.Maui.Controls.VisualElement" RefType="this" />
      </Parameters>
      <Docs>
        <param name="view">The view on which this method operates.</param>
        <summary>
            Aborts all animations (e.g. <c>LayoutTo</c>, <c>TranslateTo</c>, <c>ScaleTo</c>, etc.) on the <paramref name="view" /> element.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="view" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="FadeTo">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;bool&gt; FadeTo (this Microsoft.Maui.Controls.VisualElement view, double opacity, uint length = 250, Microsoft.Maui.Easing? easing = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;bool&gt; FadeTo(class Microsoft.Maui.Controls.VisualElement view, float64 opacity, unsigned int32 length, class Microsoft.Maui.Easing easing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.ViewExtensions.FadeTo(Microsoft.Maui.Controls.VisualElement,System.Double,System.UInt32,Microsoft.Maui.Easing)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FadeTo (view As VisualElement, opacity As Double, Optional length As UInteger = 250, Optional easing As Easing = Nothing) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="static member FadeTo : Microsoft.Maui.Controls.VisualElement * double * uint32 * Microsoft.Maui.Easing -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="Microsoft.Maui.Controls.ViewExtensions.FadeTo (view, opacity, length, easing)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-maui-10.0">
          <AttributeName Language="C#">[System.Obsolete("Please use FadeToAsync instead.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Please use FadeToAsync instead.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Microsoft.Maui.Controls.VisualElement" RefType="this" />
        <Parameter Name="opacity" Type="System.Double" />
        <Parameter Name="length" Type="System.UInt32" />
        <Parameter Name="easing" Type="Microsoft.Maui.Easing">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="view">The view on which this method operates.</param>
        <param name="opacity">The opacity to fade to.</param>
        <param name="length">The time, in milliseconds, over which to animate the transition. The default is 250.</param>
        <param name="easing">The easing function to use for the animation.</param>
        <summary>
            Returns a task that performs the fade that is described by the <paramref name="opacity" />, <paramref name="length" />, and <paramref name="easing" /> parameters.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> containing a <see cref="T:System.Boolean" /> value which indicates whether the animation was canceled. <see langword="true" /> indicates that the animation was canceled. <see langword="false" /> indicates that the animation ran to completion.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="view" /> is <see langword="null" />.</exception>
        <inheritdoc cref="M:Microsoft.Maui.Controls.ViewExtensions.FadeToAsync(Microsoft.Maui.Controls.VisualElement,System.Double,System.UInt32,Microsoft.Maui.Easing)" />
      </Docs>
    </Member>
    <Member MemberName="FadeToAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;bool&gt; FadeToAsync (this Microsoft.Maui.Controls.VisualElement view, double opacity, uint length = 250, Microsoft.Maui.Easing? easing = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;bool&gt; FadeToAsync(class Microsoft.Maui.Controls.VisualElement view, float64 opacity, unsigned int32 length, class Microsoft.Maui.Easing easing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.ViewExtensions.FadeToAsync(Microsoft.Maui.Controls.VisualElement,System.Double,System.UInt32,Microsoft.Maui.Easing)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FadeToAsync (view As VisualElement, opacity As Double, Optional length As UInteger = 250, Optional easing As Easing = Nothing) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="static member FadeToAsync : Microsoft.Maui.Controls.VisualElement * double * uint32 * Microsoft.Maui.Easing -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="Microsoft.Maui.Controls.ViewExtensions.FadeToAsync (view, opacity, length, easing)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Microsoft.Maui.Controls.VisualElement" Index="0" FrameworkAlternate="net-maui-10.0" RefType="this" />
        <Parameter Name="opacity" Type="System.Double" Index="1" FrameworkAlternate="net-maui-10.0" />
        <Parameter Name="length" Type="System.UInt32" Index="2" FrameworkAlternate="net-maui-10.0" />
        <Parameter Name="easing" Type="Microsoft.Maui.Easing" Index="3" FrameworkAlternate="net-maui-10.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="view">The view on which this method operates.</param>
        <param name="opacity">The opacity to fade to.</param>
        <param name="length">The time, in milliseconds, over which to animate the transition. The default is 250.</param>
        <param name="easing">The easing function to use for the animation.</param>
        <summary>
            Returns a task that performs the fade that is described by the <paramref name="opacity" />, <paramref name="length" />, and <paramref name="easing" /> parameters.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> containing a <see cref="T:System.Boolean" /> value which indicates whether the animation was canceled.
            <see langword="true" /> indicates that the animation was canceled. <see langword="false" /> indicates that the animation ran to completion.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="view" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="InvalidateMeasure">
      <MemberSignature Language="C#" Value="public static void InvalidateMeasure (this Microsoft.Maui.Controls.VisualElement view);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InvalidateMeasure(class Microsoft.Maui.Controls.VisualElement view) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.ViewExtensions.InvalidateMeasure(Microsoft.Maui.Controls.VisualElement)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub InvalidateMeasure (view As VisualElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void InvalidateMeasure(Microsoft::Maui::Controls::VisualElement ^ view);" />
      <MemberSignature Language="F#" Value="static member InvalidateMeasure : Microsoft.Maui.Controls.VisualElement -&gt; unit" Usage="Microsoft.Maui.Controls.ViewExtensions.InvalidateMeasure view" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Microsoft.Maui.Controls.VisualElement" RefType="this" Index="0" FrameworkAlternate="net-maui-10.0;net-maui-9.0" />
      </Parameters>
      <Docs>
        <param name="view">The view on which this method operates.</param>
        <summary>
            Layout updates can be forced by app code rather than relying on the built-in layout system behavior. However, that is not generally recommended. 
            Calling InvalidateArrange, InvalidateMeasure or UpdateLayout is usually unnecessary and can cause poor performance if overused. 
            In many situations where app code might be changing layout properties, the layout system will probably already be processing updates asynchronously. 
            The layout system also has optimizations for dealing with cascades of layout changes through parent-child relationships, 
            and forcing layout with app code can work against such optimizations. Nevertheless, 
            it's possible that layout situations exist in more complicated scenarios where forcing layout is the best option for resolving a timing issue or other issue with layout. 
            Just use it deliberately and sparingly.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LayoutTo">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;bool&gt; LayoutTo (this Microsoft.Maui.Controls.VisualElement view, Microsoft.Maui.Graphics.Rect bounds, uint length = 250, Microsoft.Maui.Easing? easing = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;bool&gt; LayoutTo(class Microsoft.Maui.Controls.VisualElement view, valuetype Microsoft.Maui.Graphics.Rect bounds, unsigned int32 length, class Microsoft.Maui.Easing easing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.ViewExtensions.LayoutTo(Microsoft.Maui.Controls.VisualElement,Microsoft.Maui.Graphics.Rect,System.UInt32,Microsoft.Maui.Easing)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LayoutTo (view As VisualElement, bounds As Rect, Optional length As UInteger = 250, Optional easing As Easing = Nothing) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="static member LayoutTo : Microsoft.Maui.Controls.VisualElement * Microsoft.Maui.Graphics.Rect * uint32 * Microsoft.Maui.Easing -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="Microsoft.Maui.Controls.ViewExtensions.LayoutTo (view, bounds, length, easing)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-maui-10.0">
          <AttributeName Language="C#">[System.Obsolete("Please use LayoutToAsync instead.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Please use LayoutToAsync instead.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Microsoft.Maui.Controls.VisualElement" RefType="this" />
        <Parameter Name="bounds" Type="Microsoft.Maui.Graphics.Rect" />
        <Parameter Name="length" Type="System.UInt32" />
        <Parameter Name="easing" Type="Microsoft.Maui.Easing">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="view">The view on which this method operates.</param>
        <param name="bounds">The layout bounds.</param>
        <param name="length">The time, in milliseconds, over which to animate the transition. The default is 250.</param>
        <param name="easing">The easing function to use for the animation.</param>
        <summary>
          <summary>Returns a task that eases the bounds of the <see cref="T:Microsoft.Maui.Controls.VisualElement" /> that is specified by the <paramref name="view" />
            to the rectangle that is specified by the <paramref name="bounds" /> parameter.</summary>
        </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> containing a <see cref="T:System.Boolean" /> value which indicates whether the animation was canceled. <see langword="true" /> indicates that the animation was canceled. <see langword="false" /> indicates that the animation ran to completion.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="view" /> is <see langword="null" />.</exception>
        <inheritdoc cref="M:Microsoft.Maui.Controls.ViewExtensions.LayoutToAsync(Microsoft.Maui.Controls.VisualElement,Microsoft.Maui.Graphics.Rect,System.UInt32,Microsoft.Maui.Easing)" />
      </Docs>
    </Member>
    <Member MemberName="LayoutToAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;bool&gt; LayoutToAsync (this Microsoft.Maui.Controls.VisualElement view, Microsoft.Maui.Graphics.Rect bounds, uint length = 250, Microsoft.Maui.Easing? easing = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;bool&gt; LayoutToAsync(class Microsoft.Maui.Controls.VisualElement view, valuetype Microsoft.Maui.Graphics.Rect bounds, unsigned int32 length, class Microsoft.Maui.Easing easing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.ViewExtensions.LayoutToAsync(Microsoft.Maui.Controls.VisualElement,Microsoft.Maui.Graphics.Rect,System.UInt32,Microsoft.Maui.Easing)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LayoutToAsync (view As VisualElement, bounds As Rect, Optional length As UInteger = 250, Optional easing As Easing = Nothing) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="static member LayoutToAsync : Microsoft.Maui.Controls.VisualElement * Microsoft.Maui.Graphics.Rect * uint32 * Microsoft.Maui.Easing -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="Microsoft.Maui.Controls.ViewExtensions.LayoutToAsync (view, bounds, length, easing)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Microsoft.Maui.Controls.VisualElement" Index="0" FrameworkAlternate="net-maui-10.0" RefType="this" />
        <Parameter Name="bounds" Type="Microsoft.Maui.Graphics.Rect" Index="1" FrameworkAlternate="net-maui-10.0" />
        <Parameter Name="length" Type="System.UInt32" Index="2" FrameworkAlternate="net-maui-10.0" />
        <Parameter Name="easing" Type="Microsoft.Maui.Easing" Index="3" FrameworkAlternate="net-maui-10.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="view">The view on which this method operates.</param>
        <param name="bounds">The layout bounds.</param>
        <param name="length">The time, in milliseconds, over which to animate the transition. The default is 250.</param>
        <param name="easing">The easing function to use for the animation.</param>
        <summary>
          <summary>Returns a task that eases the bounds of the <see cref="T:Microsoft.Maui.Controls.VisualElement" /> that is specified by the <paramref name="view" />
            to the rectangle that is specified by the <paramref name="bounds" /> parameter.</summary>
        </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> containing a <see cref="T:System.Boolean" /> value which indicates whether the animation was canceled.
            <see langword="true" /> indicates that the animation was canceled. <see langword="false" /> indicates that the animation ran to completion.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="view" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RelRotateTo">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;bool&gt; RelRotateTo (this Microsoft.Maui.Controls.VisualElement view, double drotation, uint length = 250, Microsoft.Maui.Easing? easing = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;bool&gt; RelRotateTo(class Microsoft.Maui.Controls.VisualElement view, float64 drotation, unsigned int32 length, class Microsoft.Maui.Easing easing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.ViewExtensions.RelRotateTo(Microsoft.Maui.Controls.VisualElement,System.Double,System.UInt32,Microsoft.Maui.Easing)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function RelRotateTo (view As VisualElement, drotation As Double, Optional length As UInteger = 250, Optional easing As Easing = Nothing) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="static member RelRotateTo : Microsoft.Maui.Controls.VisualElement * double * uint32 * Microsoft.Maui.Easing -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="Microsoft.Maui.Controls.ViewExtensions.RelRotateTo (view, drotation, length, easing)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-maui-10.0">
          <AttributeName Language="C#">[System.Obsolete("Please use RelRotateToAsync instead.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Please use RelRotateToAsync instead.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Microsoft.Maui.Controls.VisualElement" RefType="this" />
        <Parameter Name="drotation" Type="System.Double" />
        <Parameter Name="length" Type="System.UInt32" />
        <Parameter Name="easing" Type="Microsoft.Maui.Easing">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="view">The view on which this method operates.</param>
        <param name="drotation">The relative rotation.</param>
        <param name="length">The time, in milliseconds, over which to animate the transition. The default is 250.</param>
        <param name="easing">The easing function to use for the animation.</param>
        <summary>
            Rotates the <see cref="T:Microsoft.Maui.Controls.VisualElement" /> that is specified by <paramref name="view" /> from its current rotation by <paramref name="drotation" />.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> containing a <see cref="T:System.Boolean" /> value which indicates whether the animation was canceled. <see langword="true" /> indicates that the animation was canceled. <see langword="false" /> indicates that the animation ran to completion.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="view" /> is <see langword="null" />.</exception>
        <inheritdoc cref="M:Microsoft.Maui.Controls.ViewExtensions.RelRotateToAsync(Microsoft.Maui.Controls.VisualElement,System.Double,System.UInt32,Microsoft.Maui.Easing)" />
      </Docs>
    </Member>
    <Member MemberName="RelRotateToAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;bool&gt; RelRotateToAsync (this Microsoft.Maui.Controls.VisualElement view, double drotation, uint length = 250, Microsoft.Maui.Easing? easing = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;bool&gt; RelRotateToAsync(class Microsoft.Maui.Controls.VisualElement view, float64 drotation, unsigned int32 length, class Microsoft.Maui.Easing easing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.ViewExtensions.RelRotateToAsync(Microsoft.Maui.Controls.VisualElement,System.Double,System.UInt32,Microsoft.Maui.Easing)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function RelRotateToAsync (view As VisualElement, drotation As Double, Optional length As UInteger = 250, Optional easing As Easing = Nothing) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="static member RelRotateToAsync : Microsoft.Maui.Controls.VisualElement * double * uint32 * Microsoft.Maui.Easing -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="Microsoft.Maui.Controls.ViewExtensions.RelRotateToAsync (view, drotation, length, easing)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Microsoft.Maui.Controls.VisualElement" Index="0" FrameworkAlternate="net-maui-10.0" RefType="this" />
        <Parameter Name="drotation" Type="System.Double" Index="1" FrameworkAlternate="net-maui-10.0" />
        <Parameter Name="length" Type="System.UInt32" Index="2" FrameworkAlternate="net-maui-10.0" />
        <Parameter Name="easing" Type="Microsoft.Maui.Easing" Index="3" FrameworkAlternate="net-maui-10.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="view">The view on which this method operates.</param>
        <param name="drotation">The relative rotation.</param>
        <param name="length">The time, in milliseconds, over which to animate the transition. The default is 250.</param>
        <param name="easing">The easing function to use for the animation.</param>
        <summary>
            Rotates the <see cref="T:Microsoft.Maui.Controls.VisualElement" /> that is specified by <paramref name="view" /> from its current rotation by <paramref name="drotation" />.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> containing a <see cref="T:System.Boolean" /> value which indicates whether the animation was canceled.
            <see langword="true" /> indicates that the animation was canceled. <see langword="false" /> indicates that the animation ran to completion.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="view" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RelScaleTo">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;bool&gt; RelScaleTo (this Microsoft.Maui.Controls.VisualElement view, double dscale, uint length = 250, Microsoft.Maui.Easing? easing = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;bool&gt; RelScaleTo(class Microsoft.Maui.Controls.VisualElement view, float64 dscale, unsigned int32 length, class Microsoft.Maui.Easing easing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.ViewExtensions.RelScaleTo(Microsoft.Maui.Controls.VisualElement,System.Double,System.UInt32,Microsoft.Maui.Easing)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function RelScaleTo (view As VisualElement, dscale As Double, Optional length As UInteger = 250, Optional easing As Easing = Nothing) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="static member RelScaleTo : Microsoft.Maui.Controls.VisualElement * double * uint32 * Microsoft.Maui.Easing -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="Microsoft.Maui.Controls.ViewExtensions.RelScaleTo (view, dscale, length, easing)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-maui-10.0">
          <AttributeName Language="C#">[System.Obsolete("Please use RelScaleToAsync instead.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Please use RelScaleToAsync instead.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Microsoft.Maui.Controls.VisualElement" RefType="this" />
        <Parameter Name="dscale" Type="System.Double" />
        <Parameter Name="length" Type="System.UInt32" />
        <Parameter Name="easing" Type="Microsoft.Maui.Easing">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="view">The view on which this method operates.</param>
        <param name="dscale">The relative scale.</param>
        <param name="length">The time, in milliseconds, over which to animate the transition. The default is 250.</param>
        <param name="easing">The easing function to use for the animation.</param>
        <summary>
            Returns a task that scales the <see cref="T:Microsoft.Maui.Controls.VisualElement" /> that is specified by <paramref name="view" />
            from its current scale to <paramref name="dscale" />.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> containing a <see cref="T:System.Boolean" /> value which indicates whether the animation was canceled. <see langword="true" /> indicates that the animation was canceled. <see langword="false" /> indicates that the animation ran to completion.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="view" /> is <see langword="null" />.</exception>
        <inheritdoc cref="M:Microsoft.Maui.Controls.ViewExtensions.RelScaleToAsync(Microsoft.Maui.Controls.VisualElement,System.Double,System.UInt32,Microsoft.Maui.Easing)" />
      </Docs>
    </Member>
    <Member MemberName="RelScaleToAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;bool&gt; RelScaleToAsync (this Microsoft.Maui.Controls.VisualElement view, double dscale, uint length = 250, Microsoft.Maui.Easing? easing = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;bool&gt; RelScaleToAsync(class Microsoft.Maui.Controls.VisualElement view, float64 dscale, unsigned int32 length, class Microsoft.Maui.Easing easing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.ViewExtensions.RelScaleToAsync(Microsoft.Maui.Controls.VisualElement,System.Double,System.UInt32,Microsoft.Maui.Easing)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function RelScaleToAsync (view As VisualElement, dscale As Double, Optional length As UInteger = 250, Optional easing As Easing = Nothing) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="static member RelScaleToAsync : Microsoft.Maui.Controls.VisualElement * double * uint32 * Microsoft.Maui.Easing -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="Microsoft.Maui.Controls.ViewExtensions.RelScaleToAsync (view, dscale, length, easing)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Microsoft.Maui.Controls.VisualElement" Index="0" FrameworkAlternate="net-maui-10.0" RefType="this" />
        <Parameter Name="dscale" Type="System.Double" Index="1" FrameworkAlternate="net-maui-10.0" />
        <Parameter Name="length" Type="System.UInt32" Index="2" FrameworkAlternate="net-maui-10.0" />
        <Parameter Name="easing" Type="Microsoft.Maui.Easing" Index="3" FrameworkAlternate="net-maui-10.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="view">The view on which this method operates.</param>
        <param name="dscale">The relative scale.</param>
        <param name="length">The time, in milliseconds, over which to animate the transition. The default is 250.</param>
        <param name="easing">The easing function to use for the animation.</param>
        <summary>
            Returns a task that scales the <see cref="T:Microsoft.Maui.Controls.VisualElement" /> that is specified by <paramref name="view" />
            from its current scale to <paramref name="dscale" />.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> containing a <see cref="T:System.Boolean" /> value which indicates whether the animation was canceled.
            <see langword="true" /> indicates that the animation was canceled. <see langword="false" /> indicates that the animation ran to completion.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="view" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RotateTo">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;bool&gt; RotateTo (this Microsoft.Maui.Controls.VisualElement view, double rotation, uint length = 250, Microsoft.Maui.Easing? easing = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;bool&gt; RotateTo(class Microsoft.Maui.Controls.VisualElement view, float64 rotation, unsigned int32 length, class Microsoft.Maui.Easing easing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.ViewExtensions.RotateTo(Microsoft.Maui.Controls.VisualElement,System.Double,System.UInt32,Microsoft.Maui.Easing)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function RotateTo (view As VisualElement, rotation As Double, Optional length As UInteger = 250, Optional easing As Easing = Nothing) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="static member RotateTo : Microsoft.Maui.Controls.VisualElement * double * uint32 * Microsoft.Maui.Easing -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="Microsoft.Maui.Controls.ViewExtensions.RotateTo (view, rotation, length, easing)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-maui-10.0">
          <AttributeName Language="C#">[System.Obsolete("Please use RotateToAsync instead.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Please use RotateToAsync instead.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Microsoft.Maui.Controls.VisualElement" RefType="this" />
        <Parameter Name="rotation" Type="System.Double" />
        <Parameter Name="length" Type="System.UInt32" />
        <Parameter Name="easing" Type="Microsoft.Maui.Easing">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="view">The view on which this method operates.</param>
        <param name="rotation">The final rotation value.</param>
        <param name="length">The time, in milliseconds, over which to animate the transition. The default is 250.</param>
        <param name="easing">The easing function to use for the animation.</param>
        <summary>
            Returns a task that rotates the <see cref="T:Microsoft.Maui.Controls.VisualElement" /> that is specified by <paramref name="view" />
            that is described by the <paramref name="rotation" />, <paramref name="length" />, and <paramref name="easing" /> parameters.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> containing a <see cref="T:System.Boolean" /> value which indicates whether the animation was canceled. <see langword="true" /> indicates that the animation was canceled. <see langword="false" /> indicates that the animation ran to completion.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="view" /> is <see langword="null" />.</exception>
        <inheritdoc cref="M:Microsoft.Maui.Controls.ViewExtensions.RotateToAsync(Microsoft.Maui.Controls.VisualElement,System.Double,System.UInt32,Microsoft.Maui.Easing)" />
      </Docs>
    </Member>
    <Member MemberName="RotateToAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;bool&gt; RotateToAsync (this Microsoft.Maui.Controls.VisualElement view, double rotation, uint length = 250, Microsoft.Maui.Easing? easing = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;bool&gt; RotateToAsync(class Microsoft.Maui.Controls.VisualElement view, float64 rotation, unsigned int32 length, class Microsoft.Maui.Easing easing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.ViewExtensions.RotateToAsync(Microsoft.Maui.Controls.VisualElement,System.Double,System.UInt32,Microsoft.Maui.Easing)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function RotateToAsync (view As VisualElement, rotation As Double, Optional length As UInteger = 250, Optional easing As Easing = Nothing) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="static member RotateToAsync : Microsoft.Maui.Controls.VisualElement * double * uint32 * Microsoft.Maui.Easing -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="Microsoft.Maui.Controls.ViewExtensions.RotateToAsync (view, rotation, length, easing)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Microsoft.Maui.Controls.VisualElement" Index="0" FrameworkAlternate="net-maui-10.0" RefType="this" />
        <Parameter Name="rotation" Type="System.Double" Index="1" FrameworkAlternate="net-maui-10.0" />
        <Parameter Name="length" Type="System.UInt32" Index="2" FrameworkAlternate="net-maui-10.0" />
        <Parameter Name="easing" Type="Microsoft.Maui.Easing" Index="3" FrameworkAlternate="net-maui-10.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="view">The view on which this method operates.</param>
        <param name="rotation">The final rotation value.</param>
        <param name="length">The time, in milliseconds, over which to animate the transition. The default is 250.</param>
        <param name="easing">The easing function to use for the animation.</param>
        <summary>
            Returns a task that rotates the <see cref="T:Microsoft.Maui.Controls.VisualElement" /> that is specified by <paramref name="view" />
            that is described by the <paramref name="rotation" />, <paramref name="length" />, and <paramref name="easing" /> parameters.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> containing a <see cref="T:System.Boolean" /> value which indicates whether the animation was canceled.
            <see langword="true" /> indicates that the animation was canceled. <see langword="false" /> indicates that the animation ran to completion.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="view" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RotateXTo">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;bool&gt; RotateXTo (this Microsoft.Maui.Controls.VisualElement view, double rotation, uint length = 250, Microsoft.Maui.Easing? easing = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;bool&gt; RotateXTo(class Microsoft.Maui.Controls.VisualElement view, float64 rotation, unsigned int32 length, class Microsoft.Maui.Easing easing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.ViewExtensions.RotateXTo(Microsoft.Maui.Controls.VisualElement,System.Double,System.UInt32,Microsoft.Maui.Easing)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function RotateXTo (view As VisualElement, rotation As Double, Optional length As UInteger = 250, Optional easing As Easing = Nothing) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="static member RotateXTo : Microsoft.Maui.Controls.VisualElement * double * uint32 * Microsoft.Maui.Easing -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="Microsoft.Maui.Controls.ViewExtensions.RotateXTo (view, rotation, length, easing)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-maui-10.0">
          <AttributeName Language="C#">[System.Obsolete("Please use RotateXToAsync instead.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Please use RotateXToAsync instead.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Microsoft.Maui.Controls.VisualElement" RefType="this" />
        <Parameter Name="rotation" Type="System.Double" />
        <Parameter Name="length" Type="System.UInt32" />
        <Parameter Name="easing" Type="Microsoft.Maui.Easing">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="view">The view on which this method operates.</param>
        <param name="rotation">The final rotation value.</param>
        <param name="length">The time, in milliseconds, over which to animate the transition. The default is 250.</param>
        <param name="easing">The easing function to use for the animation.</param>
        <summary>
            Returns a task that skews the X axis of the the <see cref="T:Microsoft.Maui.Controls.VisualElement" /> that is specified by <paramref name="view" />
            by <paramref name="rotation" />, taking time <paramref name="length" /> and using <paramref name="easing" />.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> containing a <see cref="T:System.Boolean" /> value which indicates whether the animation was canceled. <see langword="true" /> indicates that the animation was canceled. <see langword="false" /> indicates that the animation ran to completion.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="view" /> is <see langword="null" />.</exception>
        <inheritdoc cref="M:Microsoft.Maui.Controls.ViewExtensions.RotateXToAsync(Microsoft.Maui.Controls.VisualElement,System.Double,System.UInt32,Microsoft.Maui.Easing)" />
      </Docs>
    </Member>
    <Member MemberName="RotateXToAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;bool&gt; RotateXToAsync (this Microsoft.Maui.Controls.VisualElement view, double rotation, uint length = 250, Microsoft.Maui.Easing? easing = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;bool&gt; RotateXToAsync(class Microsoft.Maui.Controls.VisualElement view, float64 rotation, unsigned int32 length, class Microsoft.Maui.Easing easing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.ViewExtensions.RotateXToAsync(Microsoft.Maui.Controls.VisualElement,System.Double,System.UInt32,Microsoft.Maui.Easing)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function RotateXToAsync (view As VisualElement, rotation As Double, Optional length As UInteger = 250, Optional easing As Easing = Nothing) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="static member RotateXToAsync : Microsoft.Maui.Controls.VisualElement * double * uint32 * Microsoft.Maui.Easing -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="Microsoft.Maui.Controls.ViewExtensions.RotateXToAsync (view, rotation, length, easing)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Microsoft.Maui.Controls.VisualElement" Index="0" FrameworkAlternate="net-maui-10.0" RefType="this" />
        <Parameter Name="rotation" Type="System.Double" Index="1" FrameworkAlternate="net-maui-10.0" />
        <Parameter Name="length" Type="System.UInt32" Index="2" FrameworkAlternate="net-maui-10.0" />
        <Parameter Name="easing" Type="Microsoft.Maui.Easing" Index="3" FrameworkAlternate="net-maui-10.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="view">The view on which this method operates.</param>
        <param name="rotation">The final rotation value.</param>
        <param name="length">The time, in milliseconds, over which to animate the transition. The default is 250.</param>
        <param name="easing">The easing function to use for the animation.</param>
        <summary>
            Returns a task that skews the X axis of the the <see cref="T:Microsoft.Maui.Controls.VisualElement" /> that is specified by <paramref name="view" />
            by <paramref name="rotation" />, taking time <paramref name="length" /> and using <paramref name="easing" />.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> containing a <see cref="T:System.Boolean" /> value which indicates whether the animation was canceled. 
            <see langword="true" /> indicates that the animation was canceled. <see langword="false" /> indicates that the animation ran to completion.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="view" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RotateYTo">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;bool&gt; RotateYTo (this Microsoft.Maui.Controls.VisualElement view, double rotation, uint length = 250, Microsoft.Maui.Easing? easing = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;bool&gt; RotateYTo(class Microsoft.Maui.Controls.VisualElement view, float64 rotation, unsigned int32 length, class Microsoft.Maui.Easing easing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.ViewExtensions.RotateYTo(Microsoft.Maui.Controls.VisualElement,System.Double,System.UInt32,Microsoft.Maui.Easing)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function RotateYTo (view As VisualElement, rotation As Double, Optional length As UInteger = 250, Optional easing As Easing = Nothing) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="static member RotateYTo : Microsoft.Maui.Controls.VisualElement * double * uint32 * Microsoft.Maui.Easing -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="Microsoft.Maui.Controls.ViewExtensions.RotateYTo (view, rotation, length, easing)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-maui-10.0">
          <AttributeName Language="C#">[System.Obsolete("Please use RotateYToAsync instead.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Please use RotateYToAsync instead.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Microsoft.Maui.Controls.VisualElement" RefType="this" />
        <Parameter Name="rotation" Type="System.Double" />
        <Parameter Name="length" Type="System.UInt32" />
        <Parameter Name="easing" Type="Microsoft.Maui.Easing">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="view">The view on which this method operates.</param>
        <param name="rotation">The final rotation value.</param>
        <param name="length">The time, in milliseconds, over which to animate the transition. The default is 250.</param>
        <param name="easing">The easing function to use for the animation.</param>
        <summary>
            Returns a task that skews the Y axis of the the <see cref="T:Microsoft.Maui.Controls.VisualElement" /> that is specified by <paramref name="view" />
            by <paramref name="rotation" />, taking time <paramref name="length" /> and using <paramref name="easing" />.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> containing a <see cref="T:System.Boolean" /> value which indicates whether the animation was canceled. <see langword="true" /> indicates that the animation was canceled. <see langword="false" /> indicates that the animation ran to completion.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="view" /> is <see langword="null" />.</exception>
        <inheritdoc cref="M:Microsoft.Maui.Controls.ViewExtensions.RotateYToAsync(Microsoft.Maui.Controls.VisualElement,System.Double,System.UInt32,Microsoft.Maui.Easing)" />
      </Docs>
    </Member>
    <Member MemberName="RotateYToAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;bool&gt; RotateYToAsync (this Microsoft.Maui.Controls.VisualElement view, double rotation, uint length = 250, Microsoft.Maui.Easing? easing = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;bool&gt; RotateYToAsync(class Microsoft.Maui.Controls.VisualElement view, float64 rotation, unsigned int32 length, class Microsoft.Maui.Easing easing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.ViewExtensions.RotateYToAsync(Microsoft.Maui.Controls.VisualElement,System.Double,System.UInt32,Microsoft.Maui.Easing)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function RotateYToAsync (view As VisualElement, rotation As Double, Optional length As UInteger = 250, Optional easing As Easing = Nothing) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="static member RotateYToAsync : Microsoft.Maui.Controls.VisualElement * double * uint32 * Microsoft.Maui.Easing -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="Microsoft.Maui.Controls.ViewExtensions.RotateYToAsync (view, rotation, length, easing)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Microsoft.Maui.Controls.VisualElement" Index="0" FrameworkAlternate="net-maui-10.0" RefType="this" />
        <Parameter Name="rotation" Type="System.Double" Index="1" FrameworkAlternate="net-maui-10.0" />
        <Parameter Name="length" Type="System.UInt32" Index="2" FrameworkAlternate="net-maui-10.0" />
        <Parameter Name="easing" Type="Microsoft.Maui.Easing" Index="3" FrameworkAlternate="net-maui-10.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="view">The view on which this method operates.</param>
        <param name="rotation">The final rotation value.</param>
        <param name="length">The time, in milliseconds, over which to animate the transition. The default is 250.</param>
        <param name="easing">The easing function to use for the animation.</param>
        <summary>
            Returns a task that skews the Y axis of the the <see cref="T:Microsoft.Maui.Controls.VisualElement" /> that is specified by <paramref name="view" />
            by <paramref name="rotation" />, taking time <paramref name="length" /> and using <paramref name="easing" />.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> containing a <see cref="T:System.Boolean" /> value which indicates whether the animation was canceled.
            <see langword="true" /> indicates that the animation was canceled. <see langword="false" /> indicates that the animation ran to completion.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="view" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ScaleTo">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;bool&gt; ScaleTo (this Microsoft.Maui.Controls.VisualElement view, double scale, uint length = 250, Microsoft.Maui.Easing? easing = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;bool&gt; ScaleTo(class Microsoft.Maui.Controls.VisualElement view, float64 scale, unsigned int32 length, class Microsoft.Maui.Easing easing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.ViewExtensions.ScaleTo(Microsoft.Maui.Controls.VisualElement,System.Double,System.UInt32,Microsoft.Maui.Easing)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ScaleTo (view As VisualElement, scale As Double, Optional length As UInteger = 250, Optional easing As Easing = Nothing) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="static member ScaleTo : Microsoft.Maui.Controls.VisualElement * double * uint32 * Microsoft.Maui.Easing -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="Microsoft.Maui.Controls.ViewExtensions.ScaleTo (view, scale, length, easing)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-maui-10.0">
          <AttributeName Language="C#">[System.Obsolete("Please use ScaleToAsync instead.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Please use ScaleToAsync instead.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Microsoft.Maui.Controls.VisualElement" RefType="this" />
        <Parameter Name="scale" Type="System.Double" />
        <Parameter Name="length" Type="System.UInt32" />
        <Parameter Name="easing" Type="Microsoft.Maui.Easing">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="view">The view on which this method operates.</param>
        <param name="scale">The final absolute scale.</param>
        <param name="length">The time, in milliseconds, over which to animate the transition. The default is 250.</param>
        <param name="easing">The easing function to use for the animation.</param>
        <summary>
            Returns a task that scales the <see cref="T:Microsoft.Maui.Controls.VisualElement" /> that is specified by <paramref name="view" /> to the absolute scale factor <paramref name="scale" />.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> containing a <see cref="T:System.Boolean" /> value which indicates whether the animation was canceled. <see langword="true" /> indicates that the animation was canceled. <see langword="false" /> indicates that the animation ran to completion.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="view" /> is <see langword="null" />.</exception>
        <inheritdoc cref="M:Microsoft.Maui.Controls.ViewExtensions.ScaleToAsync(Microsoft.Maui.Controls.VisualElement,System.Double,System.UInt32,Microsoft.Maui.Easing)" />
      </Docs>
    </Member>
    <Member MemberName="ScaleToAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;bool&gt; ScaleToAsync (this Microsoft.Maui.Controls.VisualElement view, double scale, uint length = 250, Microsoft.Maui.Easing? easing = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;bool&gt; ScaleToAsync(class Microsoft.Maui.Controls.VisualElement view, float64 scale, unsigned int32 length, class Microsoft.Maui.Easing easing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.ViewExtensions.ScaleToAsync(Microsoft.Maui.Controls.VisualElement,System.Double,System.UInt32,Microsoft.Maui.Easing)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ScaleToAsync (view As VisualElement, scale As Double, Optional length As UInteger = 250, Optional easing As Easing = Nothing) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="static member ScaleToAsync : Microsoft.Maui.Controls.VisualElement * double * uint32 * Microsoft.Maui.Easing -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="Microsoft.Maui.Controls.ViewExtensions.ScaleToAsync (view, scale, length, easing)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Microsoft.Maui.Controls.VisualElement" Index="0" FrameworkAlternate="net-maui-10.0" RefType="this" />
        <Parameter Name="scale" Type="System.Double" Index="1" FrameworkAlternate="net-maui-10.0" />
        <Parameter Name="length" Type="System.UInt32" Index="2" FrameworkAlternate="net-maui-10.0" />
        <Parameter Name="easing" Type="Microsoft.Maui.Easing" Index="3" FrameworkAlternate="net-maui-10.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="view">The view on which this method operates.</param>
        <param name="scale">The final absolute scale.</param>
        <param name="length">The time, in milliseconds, over which to animate the transition. The default is 250.</param>
        <param name="easing">The easing function to use for the animation.</param>
        <summary>
            Returns a task that scales the <see cref="T:Microsoft.Maui.Controls.VisualElement" /> that is specified by <paramref name="view" /> to the absolute scale factor <paramref name="scale" />.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> containing a <see cref="T:System.Boolean" /> value which indicates whether the animation was canceled.
            <see langword="true" /> indicates that the animation was canceled. <see langword="false" /> indicates that the animation ran to completion.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="view" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ScaleXTo">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;bool&gt; ScaleXTo (this Microsoft.Maui.Controls.VisualElement view, double scale, uint length = 250, Microsoft.Maui.Easing? easing = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;bool&gt; ScaleXTo(class Microsoft.Maui.Controls.VisualElement view, float64 scale, unsigned int32 length, class Microsoft.Maui.Easing easing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.ViewExtensions.ScaleXTo(Microsoft.Maui.Controls.VisualElement,System.Double,System.UInt32,Microsoft.Maui.Easing)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ScaleXTo (view As VisualElement, scale As Double, Optional length As UInteger = 250, Optional easing As Easing = Nothing) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="static member ScaleXTo : Microsoft.Maui.Controls.VisualElement * double * uint32 * Microsoft.Maui.Easing -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="Microsoft.Maui.Controls.ViewExtensions.ScaleXTo (view, scale, length, easing)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-maui-10.0">
          <AttributeName Language="C#">[System.Obsolete("Please use ScaleXToAsync instead.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Please use ScaleXToAsync instead.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Microsoft.Maui.Controls.VisualElement" RefType="this" />
        <Parameter Name="scale" Type="System.Double" />
        <Parameter Name="length" Type="System.UInt32" />
        <Parameter Name="easing" Type="Microsoft.Maui.Easing">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="view">The view on which this method operates.</param>
        <param name="scale">The final absolute scale.</param>
        <param name="length">The time, in milliseconds, over which to animate the transition. The default is 250.</param>
        <param name="easing">The easing function to use for the animation.</param>
        <summary>
            Returns a task that scales the X axis of the the <see cref="T:Microsoft.Maui.Controls.VisualElement" /> that is specified by <paramref name="view" />
            to the absolute scale factor <paramref name="scale" />.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> containing a <see cref="T:System.Boolean" /> value which indicates whether the animation was canceled. <see langword="true" /> indicates that the animation was canceled. <see langword="false" /> indicates that the animation ran to completion.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="view" /> is <see langword="null" />.</exception>
        <inheritdoc cref="M:Microsoft.Maui.Controls.ViewExtensions.ScaleXToAsync(Microsoft.Maui.Controls.VisualElement,System.Double,System.UInt32,Microsoft.Maui.Easing)" />
      </Docs>
    </Member>
    <Member MemberName="ScaleXToAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;bool&gt; ScaleXToAsync (this Microsoft.Maui.Controls.VisualElement view, double scale, uint length = 250, Microsoft.Maui.Easing? easing = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;bool&gt; ScaleXToAsync(class Microsoft.Maui.Controls.VisualElement view, float64 scale, unsigned int32 length, class Microsoft.Maui.Easing easing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.ViewExtensions.ScaleXToAsync(Microsoft.Maui.Controls.VisualElement,System.Double,System.UInt32,Microsoft.Maui.Easing)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ScaleXToAsync (view As VisualElement, scale As Double, Optional length As UInteger = 250, Optional easing As Easing = Nothing) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="static member ScaleXToAsync : Microsoft.Maui.Controls.VisualElement * double * uint32 * Microsoft.Maui.Easing -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="Microsoft.Maui.Controls.ViewExtensions.ScaleXToAsync (view, scale, length, easing)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Microsoft.Maui.Controls.VisualElement" Index="0" FrameworkAlternate="net-maui-10.0" RefType="this" />
        <Parameter Name="scale" Type="System.Double" Index="1" FrameworkAlternate="net-maui-10.0" />
        <Parameter Name="length" Type="System.UInt32" Index="2" FrameworkAlternate="net-maui-10.0" />
        <Parameter Name="easing" Type="Microsoft.Maui.Easing" Index="3" FrameworkAlternate="net-maui-10.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="view">The view on which this method operates.</param>
        <param name="scale">The final absolute scale.</param>
        <param name="length">The time, in milliseconds, over which to animate the transition. The default is 250.</param>
        <param name="easing">The easing function to use for the animation.</param>
        <summary>
            Returns a task that scales the X axis of the the <see cref="T:Microsoft.Maui.Controls.VisualElement" /> that is specified by <paramref name="view" />
            to the absolute scale factor <paramref name="scale" />.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> containing a <see cref="T:System.Boolean" /> value which indicates whether the animation was canceled.
            <see langword="true" /> indicates that the animation was canceled. <see langword="false" /> indicates that the animation ran to completion.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="view" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ScaleYTo">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;bool&gt; ScaleYTo (this Microsoft.Maui.Controls.VisualElement view, double scale, uint length = 250, Microsoft.Maui.Easing? easing = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;bool&gt; ScaleYTo(class Microsoft.Maui.Controls.VisualElement view, float64 scale, unsigned int32 length, class Microsoft.Maui.Easing easing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.ViewExtensions.ScaleYTo(Microsoft.Maui.Controls.VisualElement,System.Double,System.UInt32,Microsoft.Maui.Easing)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ScaleYTo (view As VisualElement, scale As Double, Optional length As UInteger = 250, Optional easing As Easing = Nothing) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="static member ScaleYTo : Microsoft.Maui.Controls.VisualElement * double * uint32 * Microsoft.Maui.Easing -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="Microsoft.Maui.Controls.ViewExtensions.ScaleYTo (view, scale, length, easing)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-maui-10.0">
          <AttributeName Language="C#">[System.Obsolete("Please use ScaleYToAsync instead.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Please use ScaleYToAsync instead.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Microsoft.Maui.Controls.VisualElement" RefType="this" />
        <Parameter Name="scale" Type="System.Double" />
        <Parameter Name="length" Type="System.UInt32" />
        <Parameter Name="easing" Type="Microsoft.Maui.Easing">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="view">The view on which this method operates.</param>
        <param name="scale">The final absolute scale.</param>
        <param name="length">The time, in milliseconds, over which to animate the transition. The default is 250.</param>
        <param name="easing">The easing function to use for the animation.</param>
        <summary>
            Returns a task that scales the Y axis of the the <see cref="T:Microsoft.Maui.Controls.VisualElement" /> that is specified by <paramref name="view" />
            to the absolute scale factor <paramref name="scale" />.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> containing a <see cref="T:System.Boolean" /> value which indicates whether the animation was canceled. <see langword="true" /> indicates that the animation was canceled. <see langword="false" /> indicates that the animation ran to completion.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="view" /> is <see langword="null" />.</exception>
        <inheritdoc cref="M:Microsoft.Maui.Controls.ViewExtensions.ScaleYToAsync(Microsoft.Maui.Controls.VisualElement,System.Double,System.UInt32,Microsoft.Maui.Easing)" />
      </Docs>
    </Member>
    <Member MemberName="ScaleYToAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;bool&gt; ScaleYToAsync (this Microsoft.Maui.Controls.VisualElement view, double scale, uint length = 250, Microsoft.Maui.Easing? easing = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;bool&gt; ScaleYToAsync(class Microsoft.Maui.Controls.VisualElement view, float64 scale, unsigned int32 length, class Microsoft.Maui.Easing easing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.ViewExtensions.ScaleYToAsync(Microsoft.Maui.Controls.VisualElement,System.Double,System.UInt32,Microsoft.Maui.Easing)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ScaleYToAsync (view As VisualElement, scale As Double, Optional length As UInteger = 250, Optional easing As Easing = Nothing) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="static member ScaleYToAsync : Microsoft.Maui.Controls.VisualElement * double * uint32 * Microsoft.Maui.Easing -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="Microsoft.Maui.Controls.ViewExtensions.ScaleYToAsync (view, scale, length, easing)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Microsoft.Maui.Controls.VisualElement" Index="0" FrameworkAlternate="net-maui-10.0" RefType="this" />
        <Parameter Name="scale" Type="System.Double" Index="1" FrameworkAlternate="net-maui-10.0" />
        <Parameter Name="length" Type="System.UInt32" Index="2" FrameworkAlternate="net-maui-10.0" />
        <Parameter Name="easing" Type="Microsoft.Maui.Easing" Index="3" FrameworkAlternate="net-maui-10.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="view">The view on which this method operates.</param>
        <param name="scale">The final absolute scale.</param>
        <param name="length">The time, in milliseconds, over which to animate the transition. The default is 250.</param>
        <param name="easing">The easing function to use for the animation.</param>
        <summary>
            Returns a task that scales the Y axis of the the <see cref="T:Microsoft.Maui.Controls.VisualElement" /> that is specified by <paramref name="view" />
            to the absolute scale factor <paramref name="scale" />.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> containing a <see cref="T:System.Boolean" /> value which indicates whether the animation was canceled.
            <see langword="true" /> indicates that the animation was canceled. <see langword="false" /> indicates that the animation ran to completion.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="view" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="TranslateTo">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;bool&gt; TranslateTo (this Microsoft.Maui.Controls.VisualElement view, double x, double y, uint length = 250, Microsoft.Maui.Easing? easing = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;bool&gt; TranslateTo(class Microsoft.Maui.Controls.VisualElement view, float64 x, float64 y, unsigned int32 length, class Microsoft.Maui.Easing easing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.ViewExtensions.TranslateTo(Microsoft.Maui.Controls.VisualElement,System.Double,System.Double,System.UInt32,Microsoft.Maui.Easing)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TranslateTo (view As VisualElement, x As Double, y As Double, Optional length As UInteger = 250, Optional easing As Easing = Nothing) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="static member TranslateTo : Microsoft.Maui.Controls.VisualElement * double * double * uint32 * Microsoft.Maui.Easing -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="Microsoft.Maui.Controls.ViewExtensions.TranslateTo (view, x, y, length, easing)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-maui-10.0">
          <AttributeName Language="C#">[System.Obsolete("Please use TranslateToAsync instead.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Please use TranslateToAsync instead.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Microsoft.Maui.Controls.VisualElement" RefType="this" />
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
        <Parameter Name="length" Type="System.UInt32" />
        <Parameter Name="easing" Type="Microsoft.Maui.Easing">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="view">The view on which this method operates.</param>
        <param name="x">The x component of the final translation vector.</param>
        <param name="y">The y component of the final translation vector.</param>
        <param name="length">The time, in milliseconds, over which to animate the transition. The default is 250.</param>
        <param name="easing">The easing function to use for the animation.</param>
        <summary>
            Animates an elements <see cref="P:Microsoft.Maui.Controls.VisualElement.TranslationX" /> and <see cref="P:Microsoft.Maui.Controls.VisualElement.TranslationY" /> properties
            from their current values to the new values. This ensures that the input layout is in the same position as the visual layout.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> containing a <see cref="T:System.Boolean" /> value which indicates whether the animation was canceled. <see langword="true" /> indicates that the animation was canceled. <see langword="false" /> indicates that the animation ran to completion.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="view" /> is <see langword="null" />.</exception>
        <inheritdoc cref="M:Microsoft.Maui.Controls.ViewExtensions.TranslateToAsync(Microsoft.Maui.Controls.VisualElement,System.Double,System.Double,System.UInt32,Microsoft.Maui.Easing)" />
      </Docs>
    </Member>
    <Member MemberName="TranslateToAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;bool&gt; TranslateToAsync (this Microsoft.Maui.Controls.VisualElement view, double x, double y, uint length = 250, Microsoft.Maui.Easing? easing = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;bool&gt; TranslateToAsync(class Microsoft.Maui.Controls.VisualElement view, float64 x, float64 y, unsigned int32 length, class Microsoft.Maui.Easing easing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.ViewExtensions.TranslateToAsync(Microsoft.Maui.Controls.VisualElement,System.Double,System.Double,System.UInt32,Microsoft.Maui.Easing)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TranslateToAsync (view As VisualElement, x As Double, y As Double, Optional length As UInteger = 250, Optional easing As Easing = Nothing) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="static member TranslateToAsync : Microsoft.Maui.Controls.VisualElement * double * double * uint32 * Microsoft.Maui.Easing -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="Microsoft.Maui.Controls.ViewExtensions.TranslateToAsync (view, x, y, length, easing)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Microsoft.Maui.Controls.VisualElement" Index="0" FrameworkAlternate="net-maui-10.0" RefType="this" />
        <Parameter Name="x" Type="System.Double" Index="1" FrameworkAlternate="net-maui-10.0" />
        <Parameter Name="y" Type="System.Double" Index="2" FrameworkAlternate="net-maui-10.0" />
        <Parameter Name="length" Type="System.UInt32" Index="3" FrameworkAlternate="net-maui-10.0" />
        <Parameter Name="easing" Type="Microsoft.Maui.Easing" Index="4" FrameworkAlternate="net-maui-10.0">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="view">The view on which this method operates.</param>
        <param name="x">The x component of the final translation vector.</param>
        <param name="y">The y component of the final translation vector.</param>
        <param name="length">The time, in milliseconds, over which to animate the transition. The default is 250.</param>
        <param name="easing">The easing function to use for the animation.</param>
        <summary>
            Animates an elements <see cref="P:Microsoft.Maui.Controls.VisualElement.TranslationX" /> and <see cref="P:Microsoft.Maui.Controls.VisualElement.TranslationY" /> properties
            from their current values to the new values. This ensures that the input layout is in the same position as the visual layout.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> containing a <see cref="T:System.Boolean" /> value which indicates whether the animation was canceled.
            <see langword="true" /> indicates that the animation was canceled. <see langword="false" /> indicates that the animation ran to completion.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="view" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
