<Type Name="IShellController" FullName="Microsoft.Maui.Controls.IShellController">
  <TypeSignature Language="C#" Value="public interface IShellController : Microsoft.Maui.Controls.IPageController" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IShellController implements class Microsoft.Maui.Controls.IElementController, class Microsoft.Maui.Controls.IPageController, class Microsoft.Maui.Controls.IVisualElementController" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Maui.Controls.IShellController" />
  <TypeSignature Language="VB.NET" Value="Public Interface IShellController&#xA;Implements IPageController" />
  <TypeSignature Language="C++ CLI" Value="public interface class IShellController : Microsoft::Maui::Controls::IPageController" />
  <TypeSignature Language="F#" Value="type IShellController = interface&#xA;    interface IPageController&#xA;    interface IVisualElementController&#xA;    interface IElementController" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Maui.Controls.IElementController</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Maui.Controls.IPageController</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Maui.Controls.IVisualElementController</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddAppearanceObserver">
      <MemberSignature Language="C#" Value="public void AddAppearanceObserver (Microsoft.Maui.Controls.IAppearanceObserver observer, Microsoft.Maui.Controls.Element pivot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddAppearanceObserver(class Microsoft.Maui.Controls.IAppearanceObserver observer, class Microsoft.Maui.Controls.Element pivot) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.IShellController.AddAppearanceObserver(Microsoft.Maui.Controls.IAppearanceObserver,Microsoft.Maui.Controls.Element)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAppearanceObserver (observer As IAppearanceObserver, pivot As Element)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAppearanceObserver(Microsoft::Maui::Controls::IAppearanceObserver ^ observer, Microsoft::Maui::Controls::Element ^ pivot);" />
      <MemberSignature Language="F#" Value="abstract member AddAppearanceObserver : Microsoft.Maui.Controls.IAppearanceObserver * Microsoft.Maui.Controls.Element -&gt; unit" Usage="iShellController.AddAppearanceObserver (observer, pivot)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="observer" Type="Microsoft.Maui.Controls.IAppearanceObserver" />
        <Parameter Name="pivot" Type="Microsoft.Maui.Controls.Element" />
      </Parameters>
      <Docs>
        <param name="observer">To be added.</param>
        <param name="pivot">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFlyoutBehaviorObserver">
      <MemberSignature Language="C#" Value="public void AddFlyoutBehaviorObserver (Microsoft.Maui.Controls.IFlyoutBehaviorObserver observer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddFlyoutBehaviorObserver(class Microsoft.Maui.Controls.IFlyoutBehaviorObserver observer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.IShellController.AddFlyoutBehaviorObserver(Microsoft.Maui.Controls.IFlyoutBehaviorObserver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddFlyoutBehaviorObserver (observer As IFlyoutBehaviorObserver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddFlyoutBehaviorObserver(Microsoft::Maui::Controls::IFlyoutBehaviorObserver ^ observer);" />
      <MemberSignature Language="F#" Value="abstract member AddFlyoutBehaviorObserver : Microsoft.Maui.Controls.IFlyoutBehaviorObserver -&gt; unit" Usage="iShellController.AddFlyoutBehaviorObserver observer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="observer" Type="Microsoft.Maui.Controls.IFlyoutBehaviorObserver" />
      </Parameters>
      <Docs>
        <param name="observer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppearanceChanged">
      <MemberSignature Language="C#" Value="public void AppearanceChanged (Microsoft.Maui.Controls.Element source, bool appearanceSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AppearanceChanged(class Microsoft.Maui.Controls.Element source, bool appearanceSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.IShellController.AppearanceChanged(Microsoft.Maui.Controls.Element,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppearanceChanged (source As Element, appearanceSet As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppearanceChanged(Microsoft::Maui::Controls::Element ^ source, bool appearanceSet);" />
      <MemberSignature Language="F#" Value="abstract member AppearanceChanged : Microsoft.Maui.Controls.Element * bool -&gt; unit" Usage="iShellController.AppearanceChanged (source, appearanceSet)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.Maui.Controls.Element" />
        <Parameter Name="appearanceSet" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <param name="appearanceSet">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlyoutContent">
      <MemberSignature Language="C#" Value="public Microsoft.Maui.Controls.View FlyoutContent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Maui.Controls.View FlyoutContent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.IShellController.FlyoutContent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FlyoutContent As View" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Maui::Controls::View ^ FlyoutContent { Microsoft::Maui::Controls::View ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FlyoutContent : Microsoft.Maui.Controls.View" Usage="Microsoft.Maui.Controls.IShellController.FlyoutContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.View</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlyoutFooter">
      <MemberSignature Language="C#" Value="public Microsoft.Maui.Controls.View FlyoutFooter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Maui.Controls.View FlyoutFooter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.IShellController.FlyoutFooter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FlyoutFooter As View" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Maui::Controls::View ^ FlyoutFooter { Microsoft::Maui::Controls::View ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FlyoutFooter : Microsoft.Maui.Controls.View" Usage="Microsoft.Maui.Controls.IShellController.FlyoutFooter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.View</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlyoutHeader">
      <MemberSignature Language="C#" Value="public Microsoft.Maui.Controls.View FlyoutHeader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Maui.Controls.View FlyoutHeader" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.IShellController.FlyoutHeader" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FlyoutHeader As View" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Maui::Controls::View ^ FlyoutHeader { Microsoft::Maui::Controls::View ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FlyoutHeader : Microsoft.Maui.Controls.View" Usage="Microsoft.Maui.Controls.IShellController.FlyoutHeader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.View</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlyoutIcon">
      <MemberSignature Language="C#" Value="public Microsoft.Maui.Controls.ImageSource FlyoutIcon { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Maui.Controls.ImageSource FlyoutIcon" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.IShellController.FlyoutIcon" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FlyoutIcon As ImageSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Maui::Controls::ImageSource ^ FlyoutIcon { Microsoft::Maui::Controls::ImageSource ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FlyoutIcon : Microsoft.Maui.Controls.ImageSource" Usage="Microsoft.Maui.Controls.IShellController.FlyoutIcon" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.ImageSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlyoutItemsChanged">
      <MemberSignature Language="C#" Value="event EventHandler FlyoutItemsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler FlyoutItemsChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Maui.Controls.IShellController.FlyoutItemsChanged" />
      <MemberSignature Language="VB.NET" Value="Event FlyoutItemsChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ FlyoutItemsChanged;" />
      <MemberSignature Language="F#" Value="member this.FlyoutItemsChanged : EventHandler " Usage="member this.FlyoutItemsChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateFlyoutGrouping">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;System.Collections.Generic.List&lt;Microsoft.Maui.Controls.Element&gt;&gt; GenerateFlyoutGrouping ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.List`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.Maui.Controls.Element&gt;&gt; GenerateFlyoutGrouping() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.IShellController.GenerateFlyoutGrouping" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateFlyoutGrouping () As List(Of List(Of Element))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::List&lt;System::Collections::Generic::List&lt;Microsoft::Maui::Controls::Element ^&gt; ^&gt; ^ GenerateFlyoutGrouping();" />
      <MemberSignature Language="F#" Value="abstract member GenerateFlyoutGrouping : unit -&gt; System.Collections.Generic.List&lt;System.Collections.Generic.List&lt;Microsoft.Maui.Controls.Element&gt;&gt;" Usage="iShellController.GenerateFlyoutGrouping " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.Collections.Generic.List&lt;Microsoft.Maui.Controls.Element&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFlyoutItemDataTemplate">
      <MemberSignature Language="C#" Value="public Microsoft.Maui.Controls.DataTemplate GetFlyoutItemDataTemplate (Microsoft.Maui.Controls.BindableObject bo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Maui.Controls.DataTemplate GetFlyoutItemDataTemplate(class Microsoft.Maui.Controls.BindableObject bo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.IShellController.GetFlyoutItemDataTemplate(Microsoft.Maui.Controls.BindableObject)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFlyoutItemDataTemplate (bo As BindableObject) As DataTemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Maui::Controls::DataTemplate ^ GetFlyoutItemDataTemplate(Microsoft::Maui::Controls::BindableObject ^ bo);" />
      <MemberSignature Language="F#" Value="abstract member GetFlyoutItemDataTemplate : Microsoft.Maui.Controls.BindableObject -&gt; Microsoft.Maui.Controls.DataTemplate" Usage="iShellController.GetFlyoutItemDataTemplate bo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.DataTemplate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bo" Type="Microsoft.Maui.Controls.BindableObject" />
      </Parameters>
      <Docs>
        <param name="bo">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItems">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.Maui.Controls.ShellItem&gt; GetItems ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class Microsoft.Maui.Controls.ShellItem&gt; GetItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.IShellController.GetItems" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItems () As ReadOnlyCollection(Of ShellItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;Microsoft::Maui::Controls::ShellItem ^&gt; ^ GetItems();" />
      <MemberSignature Language="F#" Value="abstract member GetItems : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.Maui.Controls.ShellItem&gt;" Usage="iShellController.GetItems " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.Maui.Controls.ShellItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNavigationState">
      <MemberSignature Language="C#" Value="public Microsoft.Maui.Controls.ShellNavigationState GetNavigationState (Microsoft.Maui.Controls.ShellItem shellItem, Microsoft.Maui.Controls.ShellSection shellSection, Microsoft.Maui.Controls.ShellContent shellContent, bool includeStack = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Maui.Controls.ShellNavigationState GetNavigationState(class Microsoft.Maui.Controls.ShellItem shellItem, class Microsoft.Maui.Controls.ShellSection shellSection, class Microsoft.Maui.Controls.ShellContent shellContent, bool includeStack) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.IShellController.GetNavigationState(Microsoft.Maui.Controls.ShellItem,Microsoft.Maui.Controls.ShellSection,Microsoft.Maui.Controls.ShellContent,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNavigationState (shellItem As ShellItem, shellSection As ShellSection, shellContent As ShellContent, Optional includeStack As Boolean = true) As ShellNavigationState" />
      <MemberSignature Language="F#" Value="abstract member GetNavigationState : Microsoft.Maui.Controls.ShellItem * Microsoft.Maui.Controls.ShellSection * Microsoft.Maui.Controls.ShellContent * bool -&gt; Microsoft.Maui.Controls.ShellNavigationState" Usage="iShellController.GetNavigationState (shellItem, shellSection, shellContent, includeStack)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.ShellNavigationState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shellItem" Type="Microsoft.Maui.Controls.ShellItem" />
        <Parameter Name="shellSection" Type="Microsoft.Maui.Controls.ShellSection" />
        <Parameter Name="shellContent" Type="Microsoft.Maui.Controls.ShellContent" />
        <Parameter Name="includeStack" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="shellItem">To be added.</param>
        <param name="shellSection">To be added.</param>
        <param name="shellContent">To be added.</param>
        <param name="includeStack">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemsCollectionChanged">
      <MemberSignature Language="C#" Value="event System.Collections.Specialized.NotifyCollectionChangedEventHandler ItemsCollectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Collections.Specialized.NotifyCollectionChangedEventHandler ItemsCollectionChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Maui.Controls.IShellController.ItemsCollectionChanged" />
      <MemberSignature Language="VB.NET" Value="Event ItemsCollectionChanged As NotifyCollectionChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Collections::Specialized::NotifyCollectionChangedEventHandler ^ ItemsCollectionChanged;" />
      <MemberSignature Language="F#" Value="member this.ItemsCollectionChanged : System.Collections.Specialized.NotifyCollectionChangedEventHandler " Usage="member this.ItemsCollectionChanged : System.Collections.Specialized.NotifyCollectionChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NotifyCollectionChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnFlyoutItemSelected">
      <MemberSignature Language="C#" Value="public void OnFlyoutItemSelected (Microsoft.Maui.Controls.Element element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnFlyoutItemSelected(class Microsoft.Maui.Controls.Element element) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.IShellController.OnFlyoutItemSelected(Microsoft.Maui.Controls.Element)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnFlyoutItemSelected (element As Element)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnFlyoutItemSelected(Microsoft::Maui::Controls::Element ^ element);" />
      <MemberSignature Language="F#" Value="abstract member OnFlyoutItemSelected : Microsoft.Maui.Controls.Element -&gt; unit" Usage="iShellController.OnFlyoutItemSelected element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="Microsoft.Maui.Controls.Element" />
      </Parameters>
      <Docs>
        <param name="element">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnFlyoutItemSelectedAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task OnFlyoutItemSelectedAsync (Microsoft.Maui.Controls.Element element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task OnFlyoutItemSelectedAsync(class Microsoft.Maui.Controls.Element element) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.IShellController.OnFlyoutItemSelectedAsync(Microsoft.Maui.Controls.Element)" />
      <MemberSignature Language="VB.NET" Value="Public Function OnFlyoutItemSelectedAsync (element As Element) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ OnFlyoutItemSelectedAsync(Microsoft::Maui::Controls::Element ^ element);" />
      <MemberSignature Language="F#" Value="abstract member OnFlyoutItemSelectedAsync : Microsoft.Maui.Controls.Element -&gt; System.Threading.Tasks.Task" Usage="iShellController.OnFlyoutItemSelectedAsync element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="Microsoft.Maui.Controls.Element" />
      </Parameters>
      <Docs>
        <param name="element">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProposeNavigation">
      <MemberSignature Language="C#" Value="public bool ProposeNavigation (Microsoft.Maui.Controls.ShellNavigationSource source, Microsoft.Maui.Controls.ShellItem item, Microsoft.Maui.Controls.ShellSection shellSection, Microsoft.Maui.Controls.ShellContent shellContent, System.Collections.Generic.IReadOnlyList&lt;Microsoft.Maui.Controls.Page&gt; stack, bool canCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ProposeNavigation(valuetype Microsoft.Maui.Controls.ShellNavigationSource source, class Microsoft.Maui.Controls.ShellItem item, class Microsoft.Maui.Controls.ShellSection shellSection, class Microsoft.Maui.Controls.ShellContent shellContent, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.Maui.Controls.Page&gt; stack, bool canCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.IShellController.ProposeNavigation(Microsoft.Maui.Controls.ShellNavigationSource,Microsoft.Maui.Controls.ShellItem,Microsoft.Maui.Controls.ShellSection,Microsoft.Maui.Controls.ShellContent,System.Collections.Generic.IReadOnlyList{Microsoft.Maui.Controls.Page},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ProposeNavigation (source As ShellNavigationSource, item As ShellItem, shellSection As ShellSection, shellContent As ShellContent, stack As IReadOnlyList(Of Page), canCancel As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ProposeNavigation(Microsoft::Maui::Controls::ShellNavigationSource source, Microsoft::Maui::Controls::ShellItem ^ item, Microsoft::Maui::Controls::ShellSection ^ shellSection, Microsoft::Maui::Controls::ShellContent ^ shellContent, System::Collections::Generic::IReadOnlyList&lt;Microsoft::Maui::Controls::Page ^&gt; ^ stack, bool canCancel);" />
      <MemberSignature Language="F#" Value="abstract member ProposeNavigation : Microsoft.Maui.Controls.ShellNavigationSource * Microsoft.Maui.Controls.ShellItem * Microsoft.Maui.Controls.ShellSection * Microsoft.Maui.Controls.ShellContent * System.Collections.Generic.IReadOnlyList&lt;Microsoft.Maui.Controls.Page&gt; * bool -&gt; bool" Usage="iShellController.ProposeNavigation (source, item, shellSection, shellContent, stack, canCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.Maui.Controls.ShellNavigationSource" />
        <Parameter Name="item" Type="Microsoft.Maui.Controls.ShellItem" />
        <Parameter Name="shellSection" Type="Microsoft.Maui.Controls.ShellSection" />
        <Parameter Name="shellContent" Type="Microsoft.Maui.Controls.ShellContent" />
        <Parameter Name="stack" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.Maui.Controls.Page&gt;" />
        <Parameter Name="canCancel" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <param name="item">To be added.</param>
        <param name="shellSection">To be added.</param>
        <param name="shellContent">To be added.</param>
        <param name="stack">To be added.</param>
        <param name="canCancel">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAppearanceObserver">
      <MemberSignature Language="C#" Value="public bool RemoveAppearanceObserver (Microsoft.Maui.Controls.IAppearanceObserver observer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RemoveAppearanceObserver(class Microsoft.Maui.Controls.IAppearanceObserver observer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.IShellController.RemoveAppearanceObserver(Microsoft.Maui.Controls.IAppearanceObserver)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAppearanceObserver (observer As IAppearanceObserver) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAppearanceObserver(Microsoft::Maui::Controls::IAppearanceObserver ^ observer);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAppearanceObserver : Microsoft.Maui.Controls.IAppearanceObserver -&gt; bool" Usage="iShellController.RemoveAppearanceObserver observer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="observer" Type="Microsoft.Maui.Controls.IAppearanceObserver" />
      </Parameters>
      <Docs>
        <param name="observer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveFlyoutBehaviorObserver">
      <MemberSignature Language="C#" Value="public bool RemoveFlyoutBehaviorObserver (Microsoft.Maui.Controls.IFlyoutBehaviorObserver observer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RemoveFlyoutBehaviorObserver(class Microsoft.Maui.Controls.IFlyoutBehaviorObserver observer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.IShellController.RemoveFlyoutBehaviorObserver(Microsoft.Maui.Controls.IFlyoutBehaviorObserver)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveFlyoutBehaviorObserver (observer As IFlyoutBehaviorObserver) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveFlyoutBehaviorObserver(Microsoft::Maui::Controls::IFlyoutBehaviorObserver ^ observer);" />
      <MemberSignature Language="F#" Value="abstract member RemoveFlyoutBehaviorObserver : Microsoft.Maui.Controls.IFlyoutBehaviorObserver -&gt; bool" Usage="iShellController.RemoveFlyoutBehaviorObserver observer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="observer" Type="Microsoft.Maui.Controls.IFlyoutBehaviorObserver" />
      </Parameters>
      <Docs>
        <param name="observer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StructureChanged">
      <MemberSignature Language="C#" Value="event EventHandler StructureChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler StructureChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Maui.Controls.IShellController.StructureChanged" />
      <MemberSignature Language="VB.NET" Value="Event StructureChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ StructureChanged;" />
      <MemberSignature Language="F#" Value="member this.StructureChanged : EventHandler " Usage="member this.StructureChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCurrentState">
      <MemberSignature Language="C#" Value="public void UpdateCurrentState (Microsoft.Maui.Controls.ShellNavigationSource source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateCurrentState(valuetype Microsoft.Maui.Controls.ShellNavigationSource source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.IShellController.UpdateCurrentState(Microsoft.Maui.Controls.ShellNavigationSource)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateCurrentState (source As ShellNavigationSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateCurrentState(Microsoft::Maui::Controls::ShellNavigationSource source);" />
      <MemberSignature Language="F#" Value="abstract member UpdateCurrentState : Microsoft.Maui.Controls.ShellNavigationSource -&gt; unit" Usage="iShellController.UpdateCurrentState source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.Maui.Controls.ShellNavigationSource" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
