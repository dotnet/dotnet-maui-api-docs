<Type Name="PropertyChangingEventArgs" FullName="Microsoft.Maui.Controls.PropertyChangingEventArgs">
  <TypeSignature Language="C#" Value="public class PropertyChangingEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PropertyChangingEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Maui.Controls.PropertyChangingEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class PropertyChangingEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class PropertyChangingEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type PropertyChangingEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Event arguments for the <see cref="T:Microsoft.Maui.Controls.PropertyChangingEventHandler" /> delegate.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PropertyChangingEventArgs (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.PropertyChangingEventArgs.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (propertyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PropertyChangingEventArgs(System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="new Microsoft.Maui.Controls.PropertyChangingEventArgs : string -&gt; Microsoft.Maui.Controls.PropertyChangingEventArgs" Usage="new Microsoft.Maui.Controls.PropertyChangingEventArgs propertyName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <summary>Creates a new <see cref="T:Microsoft.Maui.Controls.PropertyChangingEventArgs" /> object that indicates that <paramref name="propertyName" /> is changing.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyName">
      <MemberSignature Language="C#" Value="public virtual string PropertyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PropertyName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.PropertyChangingEventArgs.PropertyName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PropertyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PropertyName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PropertyName : string" Usage="Microsoft.Maui.Controls.PropertyChangingEventArgs.PropertyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the name of the property that is changing.</summary>
        <value>The name of the property that is changing.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
