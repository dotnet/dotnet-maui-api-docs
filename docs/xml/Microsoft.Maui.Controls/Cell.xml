<Type Name="Cell" FullName="Microsoft.Maui.Controls.Cell">
  <TypeSignature Language="C#" Value="public abstract class Cell : Microsoft.Maui.Controls.Element, Microsoft.Maui.Controls.ICellController, Microsoft.Maui.IVisualTreeElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Cell extends Microsoft.Maui.Controls.Element implements class Microsoft.Maui.Controls.ICellController, class Microsoft.Maui.IVisualTreeElement" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Maui.Controls.Cell" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Cell&#xA;Inherits Element&#xA;Implements ICellController, IVisualTreeElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class Cell abstract : Microsoft::Maui::Controls::Element, Microsoft::Maui::Controls::ICellController, Microsoft::Maui::IVisualTreeElement" />
  <TypeSignature Language="F#" Value="type Cell = class&#xA;    inherit Element&#xA;    interface ICellController&#xA;    interface IVisualTreeElement" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Maui.Controls.Element</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Maui.Controls.ICellController</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Maui.IVisualTreeElement</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Provides base class and capabilities for all Microsoft.Maui.Controls cells. Cells are elements meant to be added to <see cref="T:Microsoft.Maui.Controls.ListView" /> or <see cref="T:Microsoft.Maui.Controls.TableView" />.</summary>
    <remarks>
      <para>The subtypes of <see cref="T:Microsoft.Maui.Controls.Cell" /> are:</para>
      <list type="table">
        <listheader>
          <term>Type</term>
          <description>Description</description>
        </listheader>
        <item>
          <term>EntryCell</term>
          <description>A <see cref="T:Microsoft.Maui.Controls.Cell" /> with a label and a single line text entry field.</description>
        </item>
        <item>
          <term>SwitchCell</term>
          <description>A <see cref="T:Microsoft.Maui.Controls.Cell" /> with a label and an on/off switch.</description>
        </item>
        <item>
          <term>TextCell</term>
          <description>A <see cref="T:Microsoft.Maui.Controls.Cell" /> with primary and secondary text.</description>
        </item>
        <item>
          <term>ImageCell</term>
          <description>A <see cref="T:Microsoft.Maui.Controls.TextCell" /> that also includes an image.</description>
        </item>
        <item>
          <term>ViewCell</term>
          <description>A <see cref="T:Microsoft.Maui.Controls.Cell" /> containing a developer-defined <see cref="T:Microsoft.Maui.Controls.View" />.</description>
        </item>
      </list>
      <para>The various subclasses are shown in the following image:</para>
      <para>
        <img href="~/xml/Microsoft.Maui.Controls/_images/Cell.Gallery.png" />
      </para>
      <example>
        <code lang="csharp lang-csharp"><![CDATA[
Content = new TableView
{
    Root = new TableRoot ("Table Title")
    {
        new TableSection("Section 1 Title")
        {
            new TextCell
            {
                Text = "TextCell Text",
                Detail = "TextCell Detail"
            },
            new ImageCell
            {
                Text = "ImageCell Text",
                Detail = "ImageCell Detail",
                ImageSource = "http://xamarin.com/images/index/ide-xamarin-studio.png"
            },
            new EntryCell
            {
                Label = "EntryCell:",
                Placeholder = "default keyboard",
                Keyboard = Keyboard.Default
            }
        },
        new TableSection("Section 2 Title")
        {
            new EntryCell
            {
                Label = "Another EntryCell:",
                Placeholder = "phone keyboard",
                Keyboard = Keyboard.Telephone
            },
            new SwitchCell
            {
                Text = "SwitchCell:"
            },
            new ViewCell
            {
                View = new StackLayout
                {
                    Orientation = StackOrientation.Horizontal,
                    Children = 
                    {
                        new Label
                        {
                            Text = "Custom Slider View:"
                        },
                        new Slider
                        {
                        }
                    }
                }
            }
        }
    }
}          
          ]]></code>
      </example>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Cell ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Cell.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Cell();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the Cell class.</summary>
        <remarks>Cell class is abstract, this constructor is never invoked directly.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Appearing">
      <MemberSignature Language="C#" Value="public event EventHandler Appearing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Appearing" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Maui.Controls.Cell.Appearing" />
      <MemberSignature Language="VB.NET" Value="Public Event Appearing As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Appearing;" />
      <MemberSignature Language="F#" Value="member this.Appearing : EventHandler " Usage="member this.Appearing : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextActions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Maui.Controls.MenuItem&gt; ContextActions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Maui.Controls.MenuItem&gt; ContextActions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.Cell.ContextActions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContextActions As IList(Of MenuItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;Microsoft::Maui::Controls::MenuItem ^&gt; ^ ContextActions { System::Collections::Generic::IList&lt;Microsoft::Maui::Controls::MenuItem ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContextActions : System.Collections.Generic.IList&lt;Microsoft.Maui.Controls.MenuItem&gt;" Usage="Microsoft.Maui.Controls.Cell.ContextActions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Maui.Controls.MenuItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a list of menu items to display when the user performs the device-specific context gesture on the Cell.</summary>
        <value>The list of menu items that will be displayed when the user performs the device-specific context gesture on the Cell.</value>
        <remarks>The context gesture on the iOS platform is a left swipe. For Android and Windows Phone operating systems, the context gesture is a press and hold.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultCellHeight">
      <MemberSignature Language="C#" Value="public const int DefaultCellHeight = 40;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 DefaultCellHeight = (40)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.Cell.DefaultCellHeight" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultCellHeight As Integer  = 40" />
      <MemberSignature Language="C++ CLI" Value="public: int DefaultCellHeight = 40;" />
      <MemberSignature Language="F#" Value="val mutable DefaultCellHeight : int" Usage="Microsoft.Maui.Controls.Cell.DefaultCellHeight" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>40</MemberValue>
      <Docs>
        <summary>The default height of cells.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Disappearing">
      <MemberSignature Language="C#" Value="public event EventHandler Disappearing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Disappearing" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Maui.Controls.Cell.Disappearing" />
      <MemberSignature Language="VB.NET" Value="Public Event Disappearing As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Disappearing;" />
      <MemberSignature Language="F#" Value="member this.Disappearing : EventHandler " Usage="member this.Disappearing : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForceUpdateSize">
      <MemberSignature Language="C#" Value="public void ForceUpdateSize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ForceUpdateSize() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Cell.ForceUpdateSize" />
      <MemberSignature Language="VB.NET" Value="Public Sub ForceUpdateSize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ForceUpdateSize();" />
      <MemberSignature Language="F#" Value="member this.ForceUpdateSize : unit -&gt; unit" Usage="cell.ForceUpdateSize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Immediately updates the cell's size.</summary>
        <remarks>
          <para>Developers can call this method to update the cell's size, even if the cell is currently visible. Developers should note that this operation can be expensive.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForceUpdateSizeRequested">
      <MemberSignature Language="C#" Value="public event EventHandler ForceUpdateSizeRequested;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ForceUpdateSizeRequested" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Maui.Controls.Cell.ForceUpdateSizeRequested" />
      <MemberSignature Language="VB.NET" Value="Public Event ForceUpdateSizeRequested As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ ForceUpdateSizeRequested;" />
      <MemberSignature Language="F#" Value="member this.ForceUpdateSizeRequested : EventHandler " Usage="member this.ForceUpdateSizeRequested : System.EventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:Microsoft.Maui.Controls.ICellController.ForceUpdateSizeRequested</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasContextActions">
      <MemberSignature Language="C#" Value="public bool HasContextActions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasContextActions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.Cell.HasContextActions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasContextActions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasContextActions { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasContextActions : bool" Usage="Microsoft.Maui.Controls.Cell.HasContextActions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether the cell has at least one menu item in its <see cref="P:Microsoft.Maui.Controls.Cell.ContextActions" /> list property.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public double Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Height" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.Cell.Height" />
      <MemberSignature Language="VB.NET" Value="Public Property Height As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Height { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Height : double with get, set" Usage="Microsoft.Maui.Controls.Cell.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the height of the Cell.</summary>
        <value>A double that represents the height of the cell.</value>
        <remarks>The <see cref="P:Microsoft.Maui.Controls.Cell.Height" /> property is ignored if the app developer sets the <see cref="P:Microsoft.Maui.Controls.ListView.HasUnevenRows" /> or <see cref="P:Microsoft.Maui.Controls.TableView.HasUnevenRows" /> property on the surrounding <see cref="T:Microsoft.Maui.Controls.View" /> to <see langword="false" />. In that case, the <see cref="P:Microsoft.Maui.Controls.ListView.RowHeight" /> or <see cref="P:Microsoft.Maui.Controls.TableView.RowHeight" /> property is used instead.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsContextActionsLegacyModeEnabled">
      <MemberSignature Language="C#" Value="public bool IsContextActionsLegacyModeEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsContextActionsLegacyModeEnabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.Cell.IsContextActionsLegacyModeEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsContextActionsLegacyModeEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsContextActionsLegacyModeEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsContextActionsLegacyModeEnabled : bool with get, set" Usage="Microsoft.Maui.Controls.Cell.IsContextActionsLegacyModeEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.Cell.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsEnabled : bool with get, set" Usage="Microsoft.Maui.Controls.Cell.IsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the IsEnabled state of the Cell. This is a bindable property.</summary>
        <value>A bool. Default is <see langword="true" />.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="IsEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty IsEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty IsEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.Cell.IsEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsEnabledProperty As BindableProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Maui::Controls::BindableProperty ^ IsEnabledProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsEnabledProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.Cell.IsEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the IsEnabled bindable property.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Maui.IVisualTreeElement.GetVisualChildren">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IReadOnlyList&lt;Microsoft.Maui.IVisualTreeElement&gt; IVisualTreeElement.GetVisualChildren ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.Maui.IVisualTreeElement&gt; Microsoft.Maui.IVisualTreeElement.GetVisualChildren() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Cell.Microsoft#Maui#IVisualTreeElement#GetVisualChildren" />
      <MemberSignature Language="VB.NET" Value="Function GetVisualChildren () As IReadOnlyList(Of IVisualTreeElement) Implements IVisualTreeElement.GetVisualChildren" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IReadOnlyList&lt;Microsoft::Maui::IVisualTreeElement ^&gt; ^ Microsoft.Maui.IVisualTreeElement.GetVisualChildren() = Microsoft::Maui::IVisualTreeElement::GetVisualChildren;" />
      <MemberSignature Language="F#" Value="override this.Microsoft.Maui.IVisualTreeElement.GetVisualChildren : unit -&gt; System.Collections.Generic.IReadOnlyList&lt;Microsoft.Maui.IVisualTreeElement&gt;" Usage="cell.Microsoft.Maui.IVisualTreeElement.GetVisualChildren " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Maui.IVisualTreeElement.GetVisualChildren</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.Maui.IVisualTreeElement&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="On&lt;T&gt;">
      <MemberSignature Language="C#" Value="public Microsoft.Maui.Controls.IPlatformElementConfiguration&lt;T,Microsoft.Maui.Controls.Cell&gt; On&lt;T&gt; () where T : Microsoft.Maui.Controls.IConfigPlatform;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Maui.Controls.IPlatformElementConfiguration`2&lt;!!T, class Microsoft.Maui.Controls.Cell&gt; On&lt;(class Microsoft.Maui.Controls.IConfigPlatform) T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Cell.On``1" />
      <MemberSignature Language="VB.NET" Value="Public Function On(Of T As IConfigPlatform) () As IPlatformElementConfiguration(Of T, Cell)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : Microsoft::Maui::Controls::IConfigPlatform Microsoft::Maui::Controls::IPlatformElementConfiguration&lt;T, Microsoft::Maui::Controls::Cell ^&gt; ^ On();" />
      <MemberSignature Language="F#" Value="member this.On : unit -&gt; Microsoft.Maui.Controls.IPlatformElementConfiguration&lt;'T, Microsoft.Maui.Controls.Cell (requires 'T :&gt; Microsoft.Maui.Controls.IConfigPlatform)&gt; (requires 'T :&gt; Microsoft.Maui.Controls.IConfigPlatform)" Usage="cell.On " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.IPlatformElementConfiguration&lt;T,Microsoft.Maui.Controls.Cell&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <InterfaceName>Microsoft.Maui.Controls.IConfigPlatform</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAppearing">
      <MemberSignature Language="C#" Value="protected virtual void OnAppearing ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAppearing() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Cell.OnAppearing" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAppearing ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAppearing();" />
      <MemberSignature Language="F#" Value="abstract member OnAppearing : unit -&gt; unit&#xA;override this.OnAppearing : unit -&gt; unit" Usage="cell.OnAppearing " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBindingContextChanged">
      <MemberSignature Language="C#" Value="protected override void OnBindingContextChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBindingContextChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Cell.OnBindingContextChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBindingContextChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBindingContextChanged();" />
      <MemberSignature Language="F#" Value="override this.OnBindingContextChanged : unit -&gt; unit" Usage="cell.OnBindingContextChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDisappearing">
      <MemberSignature Language="C#" Value="protected virtual void OnDisappearing ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDisappearing() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Cell.OnDisappearing" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDisappearing ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDisappearing();" />
      <MemberSignature Language="F#" Value="abstract member OnDisappearing : unit -&gt; unit&#xA;override this.OnDisappearing : unit -&gt; unit" Usage="cell.OnDisappearing " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnParentSet">
      <MemberSignature Language="C#" Value="protected override void OnParentSet ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnParentSet() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Cell.OnParentSet" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnParentSet ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnParentSet();" />
      <MemberSignature Language="F#" Value="override this.OnParentSet : unit -&gt; unit" Usage="cell.OnParentSet " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanging">
      <MemberSignature Language="C#" Value="protected override void OnPropertyChanging (string propertyName = default);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPropertyChanging(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Cell.OnPropertyChanging(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPropertyChanging (Optional propertyName As String = Nothing)" />
      <MemberSignature Language="F#" Value="override this.OnPropertyChanging : string -&gt; unit" Usage="cell.OnPropertyChanging propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTapped">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTapped ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTapped() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Cell.OnTapped" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTapped ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTapped();" />
      <MemberSignature Language="F#" Value="abstract member OnTapped : unit -&gt; unit&#xA;override this.OnTapped : unit -&gt; unit" Usage="cell.OnTapped " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderHeight">
      <MemberSignature Language="C#" Value="public double RenderHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 RenderHeight" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.Cell.RenderHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RenderHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double RenderHeight { double get(); };" />
      <MemberSignature Language="F#" Value="member this.RenderHeight : double" Usage="Microsoft.Maui.Controls.Cell.RenderHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the height of the rendered cell on the device.</summary>
        <value />
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SendAppearing">
      <MemberSignature Language="C#" Value="public void SendAppearing ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendAppearing() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Cell.SendAppearing" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAppearing ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SendAppearing();" />
      <MemberSignature Language="F#" Value="abstract member SendAppearing : unit -&gt; unit&#xA;override this.SendAppearing : unit -&gt; unit" Usage="cell.SendAppearing " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Maui.Controls.ICellController.SendAppearing</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>For internal use by the Microsoft.Maui.Controls platform.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendDisappearing">
      <MemberSignature Language="C#" Value="public void SendDisappearing ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendDisappearing() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Cell.SendDisappearing" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendDisappearing ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SendDisappearing();" />
      <MemberSignature Language="F#" Value="abstract member SendDisappearing : unit -&gt; unit&#xA;override this.SendDisappearing : unit -&gt; unit" Usage="cell.SendDisappearing " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Maui.Controls.ICellController.SendDisappearing</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>For internal use by the Microsoft.Maui.Controls platform.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tapped">
      <MemberSignature Language="C#" Value="public event EventHandler Tapped;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Tapped" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Maui.Controls.Cell.Tapped" />
      <MemberSignature Language="VB.NET" Value="Public Event Tapped As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Tapped;" />
      <MemberSignature Language="F#" Value="member this.Tapped : EventHandler " Usage="member this.Tapped : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
