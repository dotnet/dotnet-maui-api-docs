<Type Name="DependencyService" FullName="Microsoft.Maui.Controls.DependencyService">
  <TypeSignature Language="C#" Value="public static class DependencyService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DependencyService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Maui.Controls.DependencyService" />
  <TypeSignature Language="VB.NET" Value="Public Class DependencyService" />
  <TypeSignature Language="C++ CLI" Value="public ref class DependencyService abstract sealed" />
  <TypeSignature Language="F#" Value="type DependencyService = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Static class that provides the <see cref="M:Microsoft.Maui.Controls.DependencyService.Get``1(Microsoft.Maui.Controls.DependencyFetchTarget)" /> factory method for retrieving platform-specific implementations of the specified type T.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Get&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Get&lt;T&gt; (Microsoft.Maui.Controls.DependencyFetchTarget fetchTarget = Microsoft.Maui.Controls.DependencyFetchTarget.GlobalInstance) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Get&lt;class T&gt;(valuetype Microsoft.Maui.Controls.DependencyFetchTarget fetchTarget) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.DependencyService.Get``1(Microsoft.Maui.Controls.DependencyFetchTarget)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Get(Of T As Class) (Optional fetchTarget As DependencyFetchTarget = Microsoft.Maui.Controls.DependencyFetchTarget.GlobalInstance) As T" />
      <MemberSignature Language="F#" Value="static member Get : Microsoft.Maui.Controls.DependencyFetchTarget -&gt; 'T (requires 'T : null)" Usage="Microsoft.Maui.Controls.DependencyService.Get fetchTarget" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="fetchTarget" Type="Microsoft.Maui.Controls.DependencyFetchTarget" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="fetchTarget">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public static void Register (System.Reflection.Assembly[] assemblies);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Register(class System.Reflection.Assembly[] assemblies) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.DependencyService.Register(System.Reflection.Assembly[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Register (assemblies As Assembly())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Register(cli::array &lt;System::Reflection::Assembly ^&gt; ^ assemblies);" />
      <MemberSignature Language="F#" Value="static member Register : System.Reflection.Assembly[] -&gt; unit" Usage="Microsoft.Maui.Controls.DependencyService.Register assemblies" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblies" Type="System.Reflection.Assembly[]" />
      </Parameters>
      <Docs>
        <param name="assemblies">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Register&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Register&lt;T&gt; () where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Register&lt;class T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.DependencyService.Register``1" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Register(Of T As Class) ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class static void Register();" />
      <MemberSignature Language="F#" Value="static member Register : unit -&gt; unit (requires 'T : null)" Usage="Microsoft.Maui.Controls.DependencyService.Register " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicParameterlessConstructor)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicParameterlessConstructor)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Register&lt;T,TImpl&gt;">
      <MemberSignature Language="C#" Value="public static void Register&lt;T,TImpl&gt; () where T : class where TImpl : class, T;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Register&lt;class T, class (!!T) TImpl&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.DependencyService.Register``2" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Register(Of T As Class, TImpl As Class) ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T, typename TImpl&gt;&#xA; where T : class where TImpl : class, T static void Register();" />
      <MemberSignature Language="F#" Value="static member Register : unit -&gt; unit (requires 'T : null)" Usage="Microsoft.Maui.Controls.DependencyService.Register " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicParameterlessConstructor)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicParameterlessConstructor)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TImpl">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicParameterlessConstructor)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicParameterlessConstructor)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <BaseTypeName>T</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <typeparam name="TImpl">To be added.</typeparam>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterSingleton&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void RegisterSingleton&lt;T&gt; (T instance) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterSingleton&lt;class T&gt;(!!T instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.DependencyService.RegisterSingleton``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterSingleton(Of T As Class) (instance As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class static void RegisterSingleton(T instance);" />
      <MemberSignature Language="F#" Value="static member RegisterSingleton : 'T -&gt; unit (requires 'T : null)" Usage="Microsoft.Maui.Controls.DependencyService.RegisterSingleton instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicParameterlessConstructor)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicParameterlessConstructor)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="instance" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="instance">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resolve&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Resolve&lt;T&gt; (Microsoft.Maui.Controls.DependencyFetchTarget fallbackFetchTarget = Microsoft.Maui.Controls.DependencyFetchTarget.GlobalInstance) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Resolve&lt;class T&gt;(valuetype Microsoft.Maui.Controls.DependencyFetchTarget fallbackFetchTarget) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.DependencyService.Resolve``1(Microsoft.Maui.Controls.DependencyFetchTarget)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Resolve(Of T As Class) (Optional fallbackFetchTarget As DependencyFetchTarget = Microsoft.Maui.Controls.DependencyFetchTarget.GlobalInstance) As T" />
      <MemberSignature Language="F#" Value="static member Resolve : Microsoft.Maui.Controls.DependencyFetchTarget -&gt; 'T (requires 'T : null)" Usage="Microsoft.Maui.Controls.DependencyService.Resolve fallbackFetchTarget" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="fallbackFetchTarget" Type="Microsoft.Maui.Controls.DependencyFetchTarget" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="fallbackFetchTarget">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
