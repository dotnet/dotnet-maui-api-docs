<Type Name="Element" FullName="Microsoft.Maui.Controls.Element">
  <TypeSignature Language="C#" Value="public abstract class Element : Microsoft.Maui.Controls.BindableObject, Microsoft.Maui.Controls.IEffectControlProvider, Microsoft.Maui.Controls.IElementController, Microsoft.Maui.Controls.Internals.INameScope, Microsoft.Maui.IElement, Microsoft.Maui.IVisualTreeElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Element extends Microsoft.Maui.Controls.BindableObject implements class Microsoft.Maui.Controls.IEffectControlProvider, class Microsoft.Maui.Controls.IElementController, class Microsoft.Maui.Controls.Internals.INameScope, class Microsoft.Maui.IElement, class Microsoft.Maui.IVisualTreeElement" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Maui.Controls.Element" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Element&#xA;Inherits BindableObject&#xA;Implements IEffectControlProvider, IElement, IElementController, INameScope, IVisualTreeElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class Element abstract : Microsoft::Maui::Controls::BindableObject, Microsoft::Maui::Controls::IEffectControlProvider, Microsoft::Maui::Controls::IElementController, Microsoft::Maui::Controls::Internals::INameScope, Microsoft::Maui::IElement, Microsoft::Maui::IVisualTreeElement" />
  <TypeSignature Language="F#" Value="type Element = class&#xA;    inherit BindableObject&#xA;    interface INameScope&#xA;    interface IElementController&#xA;    interface IVisualTreeElement&#xA;    interface IElement&#xA;    interface IEffectControlProvider" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Maui.Controls.BindableObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Maui.Controls.IEffectControlProvider</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Maui.Controls.IElementController</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Maui.Controls.Internals.INameScope</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Maui.IElement</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Maui.IVisualTreeElement</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Provides the base class for all Microsoft.Maui.Controls hierarchal elements. This class contains all the methods and properties required to represent an element in the Microsoft.Maui.Controls hierarchy.</summary>
    <remarks>
      <para>Important categories of visual elements are noted in the following table:</para>
      <list type="table">
        <listheader>
          <term>Class</term>
          <description>Description</description>
        </listheader>
        <item>
          <term>
            <see cref="T:Microsoft.Maui.Controls.VisualElement" />
          </term>
          <description>A <see cref="T:Microsoft.Maui.Controls.Element" /> that occupies an area on the screen, has a visual appearance, and can obtain touch input.</description>
        </item>
        <item>
          <term>
            <see cref="T:Microsoft.Maui.Controls.Cell" />
          </term>
          <description>Cells are elements meant to be added to <see cref="T:Microsoft.Maui.Controls.ListView" /> or <see cref="T:Microsoft.Maui.Controls.TableView" />.</description>
        </item>
        <item>
          <term>
            <see cref="T:Microsoft.Maui.Controls.Page" />
          </term>
          <description>A <see cref="T:Microsoft.Maui.Controls.VisualElement" /> that occupies most or all of the screen and contains a single child.</description>
        </item>
        <item>
          <term>
            <see cref="T:Microsoft.Maui.Controls.Layout" />
          </term>
          <description>
            <see cref="T:Microsoft.Maui.Controls.Layout" /> have a single child of type <see cref="T:Microsoft.Maui.Controls.View" />, while subclasses of <see cref="T:Microsoft.Maui.Controls.Layout" /> have a collection of multiple children views, including other layouts.</description>
        </item>
        <item>
          <term>
            Controls and specialized <see cref="T:Microsoft.Maui.Controls.View" />s
          </term>
          <description>The lower part of the diagram shows the Microsoft.Maui.Controls classes for universally-available controls, such as <see cref="T:Microsoft.Maui.Controls.Button" />s and <see cref="T:Microsoft.Maui.Controls.TableView" />s.</description>
        </item>
      </list>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Element ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Element.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Element();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutomationId">
      <MemberSignature Language="C#" Value="public string AutomationId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AutomationId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.Element.AutomationId" />
      <MemberSignature Language="VB.NET" Value="Public Property AutomationId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AutomationId { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AutomationId : string with get, set" Usage="Microsoft.Maui.Controls.Element.AutomationId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that allows the automation framework to find and interact with this element.</summary>
        <value>A value that the automation framework can use to find and interact with this element.</value>
        <remarks>This value may only be set once on an element.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutomationIdProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty AutomationIdProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty AutomationIdProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.Element.AutomationIdProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AutomationIdProperty As BindableProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Maui::Controls::BindableProperty ^ AutomationIdProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AutomationIdProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.Element.AutomationIdProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.Element.AutomationId" /> field.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildAdded">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Microsoft.Maui.Controls.ElementEventArgs&gt; ChildAdded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.Maui.Controls.ElementEventArgs&gt; ChildAdded" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Maui.Controls.Element.ChildAdded" />
      <MemberSignature Language="VB.NET" Value="Public Event ChildAdded As EventHandler(Of ElementEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;Microsoft::Maui::Controls::ElementEventArgs ^&gt; ^ ChildAdded;" />
      <MemberSignature Language="F#" Value="member this.ChildAdded : EventHandler&lt;Microsoft.Maui.Controls.ElementEventArgs&gt; " Usage="member this.ChildAdded : System.EventHandler&lt;Microsoft.Maui.Controls.ElementEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.Maui.Controls.ElementEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildRemoved">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Microsoft.Maui.Controls.ElementEventArgs&gt; ChildRemoved;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.Maui.Controls.ElementEventArgs&gt; ChildRemoved" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Maui.Controls.Element.ChildRemoved" />
      <MemberSignature Language="VB.NET" Value="Public Event ChildRemoved As EventHandler(Of ElementEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;Microsoft::Maui::Controls::ElementEventArgs ^&gt; ^ ChildRemoved;" />
      <MemberSignature Language="F#" Value="member this.ChildRemoved : EventHandler&lt;Microsoft.Maui.Controls.ElementEventArgs&gt; " Usage="member this.ChildRemoved : System.EventHandler&lt;Microsoft.Maui.Controls.ElementEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.Maui.Controls.ElementEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassId">
      <MemberSignature Language="C#" Value="public string ClassId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClassId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.Element.ClassId" />
      <MemberSignature Language="VB.NET" Value="Public Property ClassId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ClassId { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ClassId : string with get, set" Usage="Microsoft.Maui.Controls.Element.ClassId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value used to identify a collection of semantically similar elements.</summary>
        <value>A string that represents the collection the element belongs to.</value>
        <remarks>Use the class id property to collect together elements into semantically similar groups for identification in ui testing and in theme engines.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassIdProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty ClassIdProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty ClassIdProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.Element.ClassIdProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClassIdProperty As BindableProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Maui::Controls::BindableProperty ^ ClassIdProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ClassIdProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.Element.ClassIdProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the ClassId bindable property.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlsElementMapper">
      <MemberSignature Language="C#" Value="public static Microsoft.Maui.IPropertyMapper&lt;Microsoft.Maui.IElement,Microsoft.Maui.IElementHandler&gt; ControlsElementMapper;" />
      <MemberSignature Language="ILAsm" Value=".field public static class Microsoft.Maui.IPropertyMapper`2&lt;class Microsoft.Maui.IElement, class Microsoft.Maui.IElementHandler&gt; ControlsElementMapper" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.Element.ControlsElementMapper" />
      <MemberSignature Language="VB.NET" Value="Public Shared ControlsElementMapper As IPropertyMapper(Of IElement, IElementHandler) " />
      <MemberSignature Language="C++ CLI" Value="public: static Microsoft::Maui::IPropertyMapper&lt;Microsoft::Maui::IElement ^, Microsoft::Maui::IElementHandler ^&gt; ^ ControlsElementMapper;" />
      <MemberSignature Language="F#" Value=" staticval mutable ControlsElementMapper : Microsoft.Maui.IPropertyMapper&lt;Microsoft.Maui.IElement, Microsoft.Maui.IElementHandler&gt;" Usage="Microsoft.Maui.Controls.Element.ControlsElementMapper" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.IPropertyMapper&lt;Microsoft.Maui.IElement,Microsoft.Maui.IElementHandler&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <!-- No matching elements were found for the following include tag -->
        <include file="../../../../docs/Microsoft.Maui.Controls/Element.xml" path="//Member[@MemberName='ControlsElementMapper']/Docs/*" />
      </Docs>
    </Member>
    <Member MemberName="DescendantAdded">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Microsoft.Maui.Controls.ElementEventArgs&gt; DescendantAdded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.Maui.Controls.ElementEventArgs&gt; DescendantAdded" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Maui.Controls.Element.DescendantAdded" />
      <MemberSignature Language="VB.NET" Value="Public Event DescendantAdded As EventHandler(Of ElementEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;Microsoft::Maui::Controls::ElementEventArgs ^&gt; ^ DescendantAdded;" />
      <MemberSignature Language="F#" Value="member this.DescendantAdded : EventHandler&lt;Microsoft.Maui.Controls.ElementEventArgs&gt; " Usage="member this.DescendantAdded : System.EventHandler&lt;Microsoft.Maui.Controls.ElementEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.Maui.Controls.ElementEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DescendantRemoved">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Microsoft.Maui.Controls.ElementEventArgs&gt; DescendantRemoved;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.Maui.Controls.ElementEventArgs&gt; DescendantRemoved" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Maui.Controls.Element.DescendantRemoved" />
      <MemberSignature Language="VB.NET" Value="Public Event DescendantRemoved As EventHandler(Of ElementEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;Microsoft::Maui::Controls::ElementEventArgs ^&gt; ^ DescendantRemoved;" />
      <MemberSignature Language="F#" Value="member this.DescendantRemoved : EventHandler&lt;Microsoft.Maui.Controls.ElementEventArgs&gt; " Usage="member this.DescendantRemoved : System.EventHandler&lt;Microsoft.Maui.Controls.ElementEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.Maui.Controls.ElementEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EffectControlProvider">
      <MemberSignature Language="C#" Value="public Microsoft.Maui.Controls.IEffectControlProvider EffectControlProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Maui.Controls.IEffectControlProvider EffectControlProvider" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.Element.EffectControlProvider" />
      <MemberSignature Language="VB.NET" Value="Public Property EffectControlProvider As IEffectControlProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Maui::Controls::IEffectControlProvider ^ EffectControlProvider { Microsoft::Maui::Controls::IEffectControlProvider ^ get(); void set(Microsoft::Maui::Controls::IEffectControlProvider ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EffectControlProvider : Microsoft.Maui.Controls.IEffectControlProvider with get, set" Usage="Microsoft.Maui.Controls.Element.EffectControlProvider" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Maui.Controls.IElementController.EffectControlProvider</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.IEffectControlProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>For internal use by the Microsoft.Maui.Controls platform.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EffectIsAttached">
      <MemberSignature Language="C#" Value="public bool EffectIsAttached (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EffectIsAttached(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Element.EffectIsAttached(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EffectIsAttached (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool EffectIsAttached(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member EffectIsAttached : string -&gt; bool&#xA;override this.EffectIsAttached : string -&gt; bool" Usage="element.EffectIsAttached name" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Maui.Controls.IElementController.EffectIsAttached(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">For internal use by the Microsoft.Maui.Controls platform.</param>
        <summary>For internal use by the Microsoft.Maui.Controls platform.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Effects">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Maui.Controls.Effect&gt; Effects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Maui.Controls.Effect&gt; Effects" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.Element.Effects" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Effects As IList(Of Effect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;Microsoft::Maui::Controls::Effect ^&gt; ^ Effects { System::Collections::Generic::IList&lt;Microsoft::Maui::Controls::Effect ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Effects : System.Collections.Generic.IList&lt;Microsoft.Maui.Controls.Effect&gt;" Usage="Microsoft.Maui.Controls.Element.Effects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Maui.Controls.Effect&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A list of the effects that are applied to this item.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindByName">
      <MemberSignature Language="C#" Value="public object FindByName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object FindByName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Element.FindByName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindByName (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ FindByName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member FindByName : string -&gt; obj&#xA;override this.FindByName : string -&gt; obj" Usage="element.FindByName name" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Maui.Controls.Internals.INameScope.FindByName(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the element to find.</param>
        <summary>Returns the element that has the specified name.</summary>
        <returns>The element that has the specified name.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Handler">
      <MemberSignature Language="C#" Value="public Microsoft.Maui.IElementHandler Handler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Maui.IElementHandler Handler" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.Element.Handler" />
      <MemberSignature Language="VB.NET" Value="Public Property Handler As IElementHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Maui::IElementHandler ^ Handler { Microsoft::Maui::IElementHandler ^ get(); void set(Microsoft::Maui::IElementHandler ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Handler : Microsoft.Maui.IElementHandler with get, set" Usage="Microsoft.Maui.Controls.Element.Handler" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Maui.IElement.Handler</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.IElementHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <!-- No matching elements were found for the following include tag -->
        <include file="../../../../docs/Microsoft.Maui.Controls/Element.xml" path="//Member[@MemberName='Handler']/Docs/*" />
      </Docs>
    </Member>
    <Member MemberName="HandlerChanged">
      <MemberSignature Language="C#" Value="public event EventHandler HandlerChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler HandlerChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Maui.Controls.Element.HandlerChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event HandlerChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ HandlerChanged;" />
      <MemberSignature Language="F#" Value="member this.HandlerChanged : EventHandler " Usage="member this.HandlerChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandlerChanging">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Microsoft.Maui.Controls.HandlerChangingEventArgs&gt; HandlerChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.Maui.Controls.HandlerChangingEventArgs&gt; HandlerChanging" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Maui.Controls.Element.HandlerChanging" />
      <MemberSignature Language="VB.NET" Value="Public Event HandlerChanging As EventHandler(Of HandlerChangingEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;Microsoft::Maui::Controls::HandlerChangingEventArgs ^&gt; ^ HandlerChanging;" />
      <MemberSignature Language="F#" Value="member this.HandlerChanging : EventHandler&lt;Microsoft.Maui.Controls.HandlerChangingEventArgs&gt; " Usage="member this.HandlerChanging : System.EventHandler&lt;Microsoft.Maui.Controls.HandlerChangingEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.Maui.Controls.HandlerChangingEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public Guid Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid Id" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.Element.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid Id { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : Guid" Usage="Microsoft.Maui.Controls.Element.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that can be used to uniquely identify an element through the run of an application.</summary>
        <value>A Guid uniquely identifying the element.</value>
        <remarks>This value is generated at runtime and is not stable across runs of your app.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogicalChildren">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.Maui.Controls.Element&gt; LogicalChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class Microsoft.Maui.Controls.Element&gt; LogicalChildren" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.Element.LogicalChildren" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogicalChildren As ReadOnlyCollection(Of Element)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;Microsoft::Maui::Controls::Element ^&gt; ^ LogicalChildren { System::Collections::ObjectModel::ReadOnlyCollection&lt;Microsoft::Maui::Controls::Element ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LogicalChildren : System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.Maui.Controls.Element&gt;" Usage="Microsoft.Maui.Controls.Element.LogicalChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("Do not use! This is to be removed! Just used by Hot Reload! To be replaced with IVisualTreeElement!")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Do not use! This is to be removed! Just used by Hot Reload! To be replaced with IVisualTreeElement!")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.Maui.Controls.Element&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>For internal use by the Microsoft.Maui.Controls platform.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MapAutomationPropertiesExcludedWithChildren">
      <MemberSignature Language="C#" Value="public static void MapAutomationPropertiesExcludedWithChildren (Microsoft.Maui.IElementHandler handler, Microsoft.Maui.Controls.Element element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MapAutomationPropertiesExcludedWithChildren(class Microsoft.Maui.IElementHandler handler, class Microsoft.Maui.Controls.Element element) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Element.MapAutomationPropertiesExcludedWithChildren(Microsoft.Maui.IElementHandler,Microsoft.Maui.Controls.Element)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub MapAutomationPropertiesExcludedWithChildren (handler As IElementHandler, element As Element)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MapAutomationPropertiesExcludedWithChildren(Microsoft::Maui::IElementHandler ^ handler, Microsoft::Maui::Controls::Element ^ element);" />
      <MemberSignature Language="F#" Value="static member MapAutomationPropertiesExcludedWithChildren : Microsoft.Maui.IElementHandler * Microsoft.Maui.Controls.Element -&gt; unit" Usage="Microsoft.Maui.Controls.Element.MapAutomationPropertiesExcludedWithChildren (handler, element)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="Microsoft.Maui.IElementHandler" />
        <Parameter Name="element" Type="Microsoft.Maui.Controls.Element" />
      </Parameters>
      <Docs>
        <param name="handler">To be added.</param>
        <param name="element">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <!-- No matching elements were found for the following include tag -->
        <include file="../../../../docs/Microsoft.Maui.Controls/Element.xml" path="//Member[@MemberName='MapAutomationPropertiesExcludedWithChildren']/Docs/*" />
      </Docs>
    </Member>
    <Member MemberName="MapAutomationPropertiesIsInAccessibleTree">
      <MemberSignature Language="C#" Value="public static void MapAutomationPropertiesIsInAccessibleTree (Microsoft.Maui.IElementHandler handler, Microsoft.Maui.Controls.Element element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MapAutomationPropertiesIsInAccessibleTree(class Microsoft.Maui.IElementHandler handler, class Microsoft.Maui.Controls.Element element) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Element.MapAutomationPropertiesIsInAccessibleTree(Microsoft.Maui.IElementHandler,Microsoft.Maui.Controls.Element)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub MapAutomationPropertiesIsInAccessibleTree (handler As IElementHandler, element As Element)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MapAutomationPropertiesIsInAccessibleTree(Microsoft::Maui::IElementHandler ^ handler, Microsoft::Maui::Controls::Element ^ element);" />
      <MemberSignature Language="F#" Value="static member MapAutomationPropertiesIsInAccessibleTree : Microsoft.Maui.IElementHandler * Microsoft.Maui.Controls.Element -&gt; unit" Usage="Microsoft.Maui.Controls.Element.MapAutomationPropertiesIsInAccessibleTree (handler, element)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="Microsoft.Maui.IElementHandler" />
        <Parameter Name="element" Type="Microsoft.Maui.Controls.Element" />
      </Parameters>
      <Docs>
        <param name="handler">To be added.</param>
        <param name="element">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <!-- No matching elements were found for the following include tag -->
        <include file="../../../../docs/Microsoft.Maui.Controls/Element.xml" path="//Member[@MemberName='MapAutomationPropertiesIsInAccessibleTree']/Docs/*" />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Maui.Controls.IEffectControlProvider.RegisterEffect">
      <MemberSignature Language="C#" Value="void IEffectControlProvider.RegisterEffect (Microsoft.Maui.Controls.Effect effect);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Microsoft.Maui.Controls.IEffectControlProvider.RegisterEffect(class Microsoft.Maui.Controls.Effect effect) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Element.Microsoft#Maui#Controls#IEffectControlProvider#RegisterEffect(Microsoft.Maui.Controls.Effect)" />
      <MemberSignature Language="VB.NET" Value="Sub RegisterEffect (effect As Effect) Implements IEffectControlProvider.RegisterEffect" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Microsoft.Maui.Controls.IEffectControlProvider.RegisterEffect(Microsoft::Maui::Controls::Effect ^ effect) = Microsoft::Maui::Controls::IEffectControlProvider::RegisterEffect;" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.Maui.Controls.IEffectControlProvider.RegisterEffect : Microsoft.Maui.Controls.Effect -&gt; unit&#xA;override this.Microsoft.Maui.Controls.IEffectControlProvider.RegisterEffect : Microsoft.Maui.Controls.Effect -&gt; unit" Usage="element.Microsoft.Maui.Controls.IEffectControlProvider.RegisterEffect effect" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Maui.Controls.IEffectControlProvider.RegisterEffect(Microsoft.Maui.Controls.Effect)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="effect" Type="Microsoft.Maui.Controls.Effect" />
      </Parameters>
      <Docs>
        <param name="effect">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Maui.Controls.IElementController.Descendants">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerable&lt;Microsoft.Maui.Controls.Element&gt; IElementController.Descendants ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Maui.Controls.Element&gt; Microsoft.Maui.Controls.IElementController.Descendants() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Element.Microsoft#Maui#Controls#IElementController#Descendants" />
      <MemberSignature Language="VB.NET" Value="Function Descendants () As IEnumerable(Of Element) Implements IElementController.Descendants" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerable&lt;Microsoft::Maui::Controls::Element ^&gt; ^ Microsoft.Maui.Controls.IElementController.Descendants() = Microsoft::Maui::Controls::IElementController::Descendants;" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.Maui.Controls.IElementController.Descendants : unit -&gt; seq&lt;Microsoft.Maui.Controls.Element&gt;&#xA;override this.Microsoft.Maui.Controls.IElementController.Descendants : unit -&gt; seq&lt;Microsoft.Maui.Controls.Element&gt;" Usage="element.Microsoft.Maui.Controls.IElementController.Descendants " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Maui.Controls.IElementController.Descendants</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Maui.Controls.Element&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Maui.Controls.IElementController.LogicalChildren">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IReadOnlyList&lt;Microsoft.Maui.Controls.Element&gt; Microsoft.Maui.Controls.IElementController.LogicalChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.Maui.Controls.Element&gt; Microsoft.Maui.Controls.IElementController.LogicalChildren" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.Element.Microsoft#Maui#Controls#IElementController#LogicalChildren" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property LogicalChildren As IReadOnlyList(Of Element) Implements IElementController.LogicalChildren" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::Generic::IReadOnlyList&lt;Microsoft::Maui::Controls::Element ^&gt; ^ Microsoft::Maui::Controls::IElementController::LogicalChildren { System::Collections::Generic::IReadOnlyList&lt;Microsoft::Maui::Controls::Element ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Microsoft.Maui.Controls.IElementController.LogicalChildren : System.Collections.Generic.IReadOnlyList&lt;Microsoft.Maui.Controls.Element&gt;" Usage="Microsoft.Maui.Controls.IElementController.LogicalChildren" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Maui.Controls.IElementController.LogicalChildren</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.Maui.Controls.Element&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Maui.Controls.IElementController.SetValueFromRenderer">
      <MemberSignature Language="C#" Value="void IElementController.SetValueFromRenderer (Microsoft.Maui.Controls.BindableProperty property, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Microsoft.Maui.Controls.IElementController.SetValueFromRenderer(class Microsoft.Maui.Controls.BindableProperty property, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Element.Microsoft#Maui#Controls#IElementController#SetValueFromRenderer(Microsoft.Maui.Controls.BindableProperty,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub SetValueFromRenderer (property As BindableProperty, value As Object) Implements IElementController.SetValueFromRenderer" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Microsoft.Maui.Controls.IElementController.SetValueFromRenderer(Microsoft::Maui::Controls::BindableProperty ^ property, System::Object ^ value) = Microsoft::Maui::Controls::IElementController::SetValueFromRenderer;" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.Maui.Controls.IElementController.SetValueFromRenderer : Microsoft.Maui.Controls.BindableProperty * obj -&gt; unit&#xA;override this.Microsoft.Maui.Controls.IElementController.SetValueFromRenderer : Microsoft.Maui.Controls.BindableProperty * obj -&gt; unit" Usage="element.Microsoft.Maui.Controls.IElementController.SetValueFromRenderer (property, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Maui.Controls.IElementController.SetValueFromRenderer(Microsoft.Maui.Controls.BindableProperty,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.Maui.Controls.BindableProperty" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Maui.Controls.Internals.INameScope.RegisterName">
      <MemberSignature Language="C#" Value="void INameScope.RegisterName (string name, object scopedElement);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Microsoft.Maui.Controls.Internals.INameScope.RegisterName(string name, object scopedElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Element.Microsoft#Maui#Controls#Internals#INameScope#RegisterName(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub RegisterName (name As String, scopedElement As Object) Implements INameScope.RegisterName" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Microsoft.Maui.Controls.Internals.INameScope.RegisterName(System::String ^ name, System::Object ^ scopedElement) = Microsoft::Maui::Controls::Internals::INameScope::RegisterName;" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.Maui.Controls.Internals.INameScope.RegisterName : string * obj -&gt; unit&#xA;override this.Microsoft.Maui.Controls.Internals.INameScope.RegisterName : string * obj -&gt; unit" Usage="element.Microsoft.Maui.Controls.Internals.INameScope.RegisterName (name, scopedElement)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Maui.Controls.Internals.INameScope.RegisterName(System.String,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="scopedElement" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="scopedElement">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Maui.Controls.Internals.INameScope.UnregisterName">
      <MemberSignature Language="C#" Value="void INameScope.UnregisterName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Microsoft.Maui.Controls.Internals.INameScope.UnregisterName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Element.Microsoft#Maui#Controls#Internals#INameScope#UnregisterName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub UnregisterName (name As String) Implements INameScope.UnregisterName" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Microsoft.Maui.Controls.Internals.INameScope.UnregisterName(System::String ^ name) = Microsoft::Maui::Controls::Internals::INameScope::UnregisterName;" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.Maui.Controls.Internals.INameScope.UnregisterName : string -&gt; unit&#xA;override this.Microsoft.Maui.Controls.Internals.INameScope.UnregisterName : string -&gt; unit" Usage="element.Microsoft.Maui.Controls.Internals.INameScope.UnregisterName name" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Maui.Controls.Internals.INameScope.UnregisterName(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Maui.IElement.Parent">
      <MemberSignature Language="C#" Value="Microsoft.Maui.IElement Microsoft.Maui.IElement.Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Maui.IElement Microsoft.Maui.IElement.Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.Element.Microsoft#Maui#IElement#Parent" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Parent As IElement Implements IElement.Parent" />
      <MemberSignature Language="C++ CLI" Value="property Microsoft::Maui::IElement ^ Microsoft::Maui::IElement::Parent { Microsoft::Maui::IElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Microsoft.Maui.IElement.Parent : Microsoft.Maui.IElement" Usage="Microsoft.Maui.IElement.Parent" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Maui.IElement.Parent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.IElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Maui.IVisualTreeElement.GetVisualChildren">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IReadOnlyList&lt;Microsoft.Maui.IVisualTreeElement&gt; IVisualTreeElement.GetVisualChildren ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.Maui.IVisualTreeElement&gt; Microsoft.Maui.IVisualTreeElement.GetVisualChildren() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Element.Microsoft#Maui#IVisualTreeElement#GetVisualChildren" />
      <MemberSignature Language="VB.NET" Value="Function GetVisualChildren () As IReadOnlyList(Of IVisualTreeElement) Implements IVisualTreeElement.GetVisualChildren" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IReadOnlyList&lt;Microsoft::Maui::IVisualTreeElement ^&gt; ^ Microsoft.Maui.IVisualTreeElement.GetVisualChildren() = Microsoft::Maui::IVisualTreeElement::GetVisualChildren;" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.Maui.IVisualTreeElement.GetVisualChildren : unit -&gt; System.Collections.Generic.IReadOnlyList&lt;Microsoft.Maui.IVisualTreeElement&gt;&#xA;override this.Microsoft.Maui.IVisualTreeElement.GetVisualChildren : unit -&gt; System.Collections.Generic.IReadOnlyList&lt;Microsoft.Maui.IVisualTreeElement&gt;" Usage="element.Microsoft.Maui.IVisualTreeElement.GetVisualChildren " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Maui.IVisualTreeElement.GetVisualChildren</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.Maui.IVisualTreeElement&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Maui.IVisualTreeElement.GetVisualParent">
      <MemberSignature Language="C#" Value="Microsoft.Maui.IVisualTreeElement IVisualTreeElement.GetVisualParent ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.Maui.IVisualTreeElement Microsoft.Maui.IVisualTreeElement.GetVisualParent() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Element.Microsoft#Maui#IVisualTreeElement#GetVisualParent" />
      <MemberSignature Language="VB.NET" Value="Function GetVisualParent () As IVisualTreeElement Implements IVisualTreeElement.GetVisualParent" />
      <MemberSignature Language="C++ CLI" Value=" virtual Microsoft::Maui::IVisualTreeElement ^ Microsoft.Maui.IVisualTreeElement.GetVisualParent() = Microsoft::Maui::IVisualTreeElement::GetVisualParent;" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.Maui.IVisualTreeElement.GetVisualParent : unit -&gt; Microsoft.Maui.IVisualTreeElement&#xA;override this.Microsoft.Maui.IVisualTreeElement.GetVisualParent : unit -&gt; Microsoft.Maui.IVisualTreeElement" Usage="element.Microsoft.Maui.IVisualTreeElement.GetVisualParent " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Maui.IVisualTreeElement.GetVisualParent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.IVisualTreeElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBindingContextChanged">
      <MemberSignature Language="C#" Value="protected override void OnBindingContextChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBindingContextChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Element.OnBindingContextChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBindingContextChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBindingContextChanged();" />
      <MemberSignature Language="F#" Value="override this.OnBindingContextChanged : unit -&gt; unit" Usage="element.OnBindingContextChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnChildAdded">
      <MemberSignature Language="C#" Value="protected virtual void OnChildAdded (Microsoft.Maui.Controls.Element child);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnChildAdded(class Microsoft.Maui.Controls.Element child) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Element.OnChildAdded(Microsoft.Maui.Controls.Element)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnChildAdded (child As Element)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnChildAdded(Microsoft::Maui::Controls::Element ^ child);" />
      <MemberSignature Language="F#" Value="abstract member OnChildAdded : Microsoft.Maui.Controls.Element -&gt; unit&#xA;override this.OnChildAdded : Microsoft.Maui.Controls.Element -&gt; unit" Usage="element.OnChildAdded child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Microsoft.Maui.Controls.Element" />
      </Parameters>
      <Docs>
        <param name="child">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnChildRemoved">
      <MemberSignature Language="C#" Value="protected virtual void OnChildRemoved (Microsoft.Maui.Controls.Element child, int oldLogicalIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnChildRemoved(class Microsoft.Maui.Controls.Element child, int32 oldLogicalIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Element.OnChildRemoved(Microsoft.Maui.Controls.Element,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnChildRemoved (child As Element, oldLogicalIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnChildRemoved(Microsoft::Maui::Controls::Element ^ child, int oldLogicalIndex);" />
      <MemberSignature Language="F#" Value="abstract member OnChildRemoved : Microsoft.Maui.Controls.Element * int -&gt; unit&#xA;override this.OnChildRemoved : Microsoft.Maui.Controls.Element * int -&gt; unit" Usage="element.OnChildRemoved (child, oldLogicalIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Microsoft.Maui.Controls.Element" />
        <Parameter Name="oldLogicalIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="child">To be added.</param>
        <param name="oldLogicalIndex">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnHandlerChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnHandlerChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnHandlerChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Element.OnHandlerChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnHandlerChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnHandlerChanged();" />
      <MemberSignature Language="F#" Value="abstract member OnHandlerChanged : unit -&gt; unit&#xA;override this.OnHandlerChanged : unit -&gt; unit" Usage="element.OnHandlerChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnHandlerChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnHandlerChanging (Microsoft.Maui.Controls.HandlerChangingEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnHandlerChanging(class Microsoft.Maui.Controls.HandlerChangingEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Element.OnHandlerChanging(Microsoft.Maui.Controls.HandlerChangingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnHandlerChanging (args As HandlerChangingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnHandlerChanging(Microsoft::Maui::Controls::HandlerChangingEventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnHandlerChanging : Microsoft.Maui.Controls.HandlerChangingEventArgs -&gt; unit&#xA;override this.OnHandlerChanging : Microsoft.Maui.Controls.HandlerChangingEventArgs -&gt; unit" Usage="element.OnHandlerChanging args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="Microsoft.Maui.Controls.HandlerChangingEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnParentChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnParentChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnParentChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Element.OnParentChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnParentChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnParentChanged();" />
      <MemberSignature Language="F#" Value="abstract member OnParentChanged : unit -&gt; unit&#xA;override this.OnParentChanged : unit -&gt; unit" Usage="element.OnParentChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnParentChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnParentChanging (Microsoft.Maui.Controls.ParentChangingEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnParentChanging(class Microsoft.Maui.Controls.ParentChangingEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Element.OnParentChanging(Microsoft.Maui.Controls.ParentChangingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnParentChanging (args As ParentChangingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnParentChanging(Microsoft::Maui::Controls::ParentChangingEventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnParentChanging : Microsoft.Maui.Controls.ParentChangingEventArgs -&gt; unit&#xA;override this.OnParentChanging : Microsoft.Maui.Controls.ParentChangingEventArgs -&gt; unit" Usage="element.OnParentChanging args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="Microsoft.Maui.Controls.ParentChangingEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnParentSet">
      <MemberSignature Language="C#" Value="protected virtual void OnParentSet ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnParentSet() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Element.OnParentSet" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnParentSet ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnParentSet();" />
      <MemberSignature Language="F#" Value="abstract member OnParentSet : unit -&gt; unit&#xA;override this.OnParentSet : unit -&gt; unit" Usage="element.OnParentSet " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected override void OnPropertyChanged (string propertyName = default);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPropertyChanged(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Element.OnPropertyChanged(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPropertyChanged (Optional propertyName As String = Nothing)" />
      <MemberSignature Language="F#" Value="override this.OnPropertyChanged : string -&gt; unit" Usage="element.OnPropertyChanged propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.CallerMemberName]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.CallerMemberName&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public Microsoft.Maui.Controls.Element Parent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Maui.Controls.Element Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.Element.Parent" />
      <MemberSignature Language="VB.NET" Value="Public Property Parent As Element" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Maui::Controls::Element ^ Parent { Microsoft::Maui::Controls::Element ^ get(); void set(Microsoft::Maui::Controls::Element ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Parent : Microsoft.Maui.Controls.Element with get, set" Usage="Microsoft.Maui.Controls.Element.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.Element</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the parent element of the element.</summary>
        <value>The element which should be the parent of this element.</value>
        <remarks>Most application authors will not need to set the parent element by hand.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ParentChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ParentChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Maui.Controls.Element.ParentChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event ParentChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ParentChanged;" />
      <MemberSignature Language="F#" Value="member this.ParentChanged : EventHandler " Usage="member this.ParentChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentChanging">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Microsoft.Maui.Controls.ParentChangingEventArgs&gt; ParentChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.Maui.Controls.ParentChangingEventArgs&gt; ParentChanging" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Maui.Controls.Element.ParentChanging" />
      <MemberSignature Language="VB.NET" Value="Public Event ParentChanging As EventHandler(Of ParentChangingEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;Microsoft::Maui::Controls::ParentChangingEventArgs ^&gt; ^ ParentChanging;" />
      <MemberSignature Language="F#" Value="member this.ParentChanging : EventHandler&lt;Microsoft.Maui.Controls.ParentChangingEventArgs&gt; " Usage="member this.ParentChanging : System.EventHandler&lt;Microsoft.Maui.Controls.ParentChangingEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.Maui.Controls.ParentChangingEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RealParent">
      <MemberSignature Language="C#" Value="public Microsoft.Maui.Controls.Element RealParent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Maui.Controls.Element RealParent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.Element.RealParent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RealParent As Element" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Maui::Controls::Element ^ RealParent { Microsoft::Maui::Controls::Element ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RealParent : Microsoft.Maui.Controls.Element" Usage="Microsoft.Maui.Controls.Element.RealParent" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Maui.Controls.IElementController.RealParent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.Element</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>For internal use by the Microsoft.Maui.Controls platform.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveDynamicResource">
      <MemberSignature Language="C#" Value="public void RemoveDynamicResource (Microsoft.Maui.Controls.BindableProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveDynamicResource(class Microsoft.Maui.Controls.BindableProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Element.RemoveDynamicResource(Microsoft.Maui.Controls.BindableProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveDynamicResource (property As BindableProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveDynamicResource(Microsoft::Maui::Controls::BindableProperty ^ property);" />
      <MemberSignature Language="F#" Value="override this.RemoveDynamicResource : Microsoft.Maui.Controls.BindableProperty -&gt; unit" Usage="element.RemoveDynamicResource property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.Maui.Controls.BindableProperty" />
      </Parameters>
      <Docs>
        <param name="property">The BindableProperty from which to remove the DynamicResource.</param>
        <summary>Removes a previously set dynamic resource</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SetDynamicResource">
      <MemberSignature Language="C#" Value="public void SetDynamicResource (Microsoft.Maui.Controls.BindableProperty property, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDynamicResource(class Microsoft.Maui.Controls.BindableProperty property, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Element.SetDynamicResource(Microsoft.Maui.Controls.BindableProperty,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDynamicResource (property As BindableProperty, key As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDynamicResource(Microsoft::Maui::Controls::BindableProperty ^ property, System::String ^ key);" />
      <MemberSignature Language="F#" Value="override this.SetDynamicResource : Microsoft.Maui.Controls.BindableProperty * string -&gt; unit" Usage="element.SetDynamicResource (property, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.Maui.Controls.BindableProperty" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="property">The BindableProperty.</param>
        <param name="key">The key of the DynamicResource</param>
        <summary>Sets the BindableProperty property of this element to be updated via the DynamicResource with the provided key.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SetValueFromRenderer">
      <MemberSignature Language="C#" Value="public void SetValueFromRenderer (Microsoft.Maui.Controls.BindableProperty property, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValueFromRenderer(class Microsoft.Maui.Controls.BindableProperty property, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Element.SetValueFromRenderer(Microsoft.Maui.Controls.BindableProperty,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValueFromRenderer (property As BindableProperty, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValueFromRenderer(Microsoft::Maui::Controls::BindableProperty ^ property, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.SetValueFromRenderer : Microsoft.Maui.Controls.BindableProperty * obj -&gt; unit" Usage="element.SetValueFromRenderer (property, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.Maui.Controls.BindableProperty" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">For internal use by the Microsoft.Maui.Controls platform.</param>
        <param name="value">For internal use by the Microsoft.Maui.Controls platform.</param>
        <summary>For internal use by the Microsoft.Maui.Controls platform.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValueFromRenderer">
      <MemberSignature Language="C#" Value="public void SetValueFromRenderer (Microsoft.Maui.Controls.BindablePropertyKey property, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValueFromRenderer(class Microsoft.Maui.Controls.BindablePropertyKey property, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Element.SetValueFromRenderer(Microsoft.Maui.Controls.BindablePropertyKey,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValueFromRenderer (property As BindablePropertyKey, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetValueFromRenderer(Microsoft::Maui::Controls::BindablePropertyKey ^ property, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member SetValueFromRenderer : Microsoft.Maui.Controls.BindablePropertyKey * obj -&gt; unit&#xA;override this.SetValueFromRenderer : Microsoft.Maui.Controls.BindablePropertyKey * obj -&gt; unit" Usage="element.SetValueFromRenderer (property, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Maui.Controls.IElementController.SetValueFromRenderer(Microsoft.Maui.Controls.BindablePropertyKey,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.Maui.Controls.BindablePropertyKey" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">For internal use by the Microsoft.Maui.Controls platform.</param>
        <param name="value">For internal use by the Microsoft.Maui.Controls platform.</param>
        <summary>For internal use by the Microsoft.Maui.Controls platform.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StyleId">
      <MemberSignature Language="C#" Value="public string StyleId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StyleId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.Element.StyleId" />
      <MemberSignature Language="VB.NET" Value="Public Property StyleId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StyleId { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StyleId : string with get, set" Usage="Microsoft.Maui.Controls.Element.StyleId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a user defined value to uniquely identify the element.</summary>
        <value>A string uniquely identifying the element.</value>
        <remarks>Use the StyleId property to identify individual elements in your application for identification in ui testing and in theme engines.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
