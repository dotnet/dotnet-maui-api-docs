<Type Name="DispatcherExtensions" FullName="Microsoft.Maui.Dispatching.DispatcherExtensions">
  <TypeSignature Language="C#" Value="public static class DispatcherExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DispatcherExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Maui.Dispatching.DispatcherExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module DispatcherExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class DispatcherExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type DispatcherExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Maui</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            This class provides a set of extension methods that can be used on objects implementing <see cref="T:Microsoft.Maui.Dispatching.IDispatcher" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="DispatchAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task DispatchAsync (this Microsoft.Maui.Dispatching.IDispatcher dispatcher, Action action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task DispatchAsync(class Microsoft.Maui.Dispatching.IDispatcher dispatcher, class System.Action action) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Dispatching.DispatcherExtensions.DispatchAsync(Microsoft.Maui.Dispatching.IDispatcher,System.Action)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DispatchAsync (dispatcher As IDispatcher, action As Action) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task ^ DispatchAsync(Microsoft::Maui::Dispatching::IDispatcher ^ dispatcher, Action ^ action);" />
      <MemberSignature Language="F#" Value="static member DispatchAsync : Microsoft.Maui.Dispatching.IDispatcher * Action -&gt; System.Threading.Tasks.Task" Usage="Microsoft.Maui.Dispatching.DispatcherExtensions.DispatchAsync (dispatcher, action)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispatcher" Type="Microsoft.Maui.Dispatching.IDispatcher" RefType="this" />
        <Parameter Name="action" Type="System.Action" />
      </Parameters>
      <Docs>
        <param name="dispatcher">The <see cref="T:Microsoft.Maui.Dispatching.IDispatcher" /> instance this method is called on.</param>
        <param name="action">The method to be executed by the dispatcher.</param>
        <summary>
            Schedules the provided action on the UI thread from a worker thread.
            </summary>
        <returns>
          <see langword="true" /> if the operation in <paramref name="action" /> was dispatched successfully, otherwise <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DispatchAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task DispatchAsync (this Microsoft.Maui.Dispatching.IDispatcher dispatcher, Func&lt;System.Threading.Tasks.Task&gt; funcTask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task DispatchAsync(class Microsoft.Maui.Dispatching.IDispatcher dispatcher, class System.Func`1&lt;class System.Threading.Tasks.Task&gt; funcTask) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Dispatching.DispatcherExtensions.DispatchAsync(Microsoft.Maui.Dispatching.IDispatcher,System.Func{System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DispatchAsync (dispatcher As IDispatcher, funcTask As Func(Of Task)) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task ^ DispatchAsync(Microsoft::Maui::Dispatching::IDispatcher ^ dispatcher, Func&lt;System::Threading::Tasks::Task ^&gt; ^ funcTask);" />
      <MemberSignature Language="F#" Value="static member DispatchAsync : Microsoft.Maui.Dispatching.IDispatcher * Func&lt;System.Threading.Tasks.Task&gt; -&gt; System.Threading.Tasks.Task" Usage="Microsoft.Maui.Dispatching.DispatcherExtensions.DispatchAsync (dispatcher, funcTask)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispatcher" Type="Microsoft.Maui.Dispatching.IDispatcher" RefType="this" />
        <Parameter Name="funcTask" Type="System.Func&lt;System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <param name="dispatcher">The <see cref="T:Microsoft.Maui.Dispatching.IDispatcher" /> instance this method is called on.</param>
        <param name="funcTask">The function to be executed by the dispatcher.</param>
        <summary>
            Schedules the provided function on the UI thread from a worker thread.
            </summary>
        <returns>
          <see langword="true" /> if the operation in <paramref name="funcTask" /> was dispatched successfully, otherwise <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DispatchAsync&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;T&gt; DispatchAsync&lt;T&gt; (this Microsoft.Maui.Dispatching.IDispatcher dispatcher, Func&lt;System.Threading.Tasks.Task&lt;T&gt;&gt; funcTask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;!!T&gt; DispatchAsync&lt;T&gt;(class Microsoft.Maui.Dispatching.IDispatcher dispatcher, class System.Func`1&lt;class System.Threading.Tasks.Task`1&lt;!!T&gt;&gt; funcTask) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Dispatching.DispatcherExtensions.DispatchAsync``1(Microsoft.Maui.Dispatching.IDispatcher,System.Func{System.Threading.Tasks.Task{``0}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DispatchAsync(Of T) (dispatcher As IDispatcher, funcTask As Func(Of Task(Of T))) As Task(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;T&gt; ^ DispatchAsync(Microsoft::Maui::Dispatching::IDispatcher ^ dispatcher, Func&lt;System::Threading::Tasks::Task&lt;T&gt; ^&gt; ^ funcTask);" />
      <MemberSignature Language="F#" Value="static member DispatchAsync : Microsoft.Maui.Dispatching.IDispatcher * Func&lt;System.Threading.Tasks.Task&lt;'T&gt;&gt; -&gt; System.Threading.Tasks.Task&lt;'T&gt;" Usage="Microsoft.Maui.Dispatching.DispatcherExtensions.DispatchAsync (dispatcher, funcTask)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="dispatcher" Type="Microsoft.Maui.Dispatching.IDispatcher" RefType="this" />
        <Parameter Name="funcTask" Type="System.Func&lt;System.Threading.Tasks.Task&lt;T&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type returned from this method.</typeparam>
        <param name="dispatcher">The <see cref="T:Microsoft.Maui.Dispatching.IDispatcher" /> instance this method is called on.</param>
        <param name="funcTask">The function to be executed by the dispatcher.</param>
        <summary>
            Schedules the provided function on the UI thread from a worker thread.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> object containing information about the state of the dispatcher operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DispatchAsync&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;T&gt; DispatchAsync&lt;T&gt; (this Microsoft.Maui.Dispatching.IDispatcher dispatcher, Func&lt;T&gt; func);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;!!T&gt; DispatchAsync&lt;T&gt;(class Microsoft.Maui.Dispatching.IDispatcher dispatcher, class System.Func`1&lt;!!T&gt; func) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Dispatching.DispatcherExtensions.DispatchAsync``1(Microsoft.Maui.Dispatching.IDispatcher,System.Func{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DispatchAsync(Of T) (dispatcher As IDispatcher, func As Func(Of T)) As Task(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;T&gt; ^ DispatchAsync(Microsoft::Maui::Dispatching::IDispatcher ^ dispatcher, Func&lt;T&gt; ^ func);" />
      <MemberSignature Language="F#" Value="static member DispatchAsync : Microsoft.Maui.Dispatching.IDispatcher * Func&lt;'T&gt; -&gt; System.Threading.Tasks.Task&lt;'T&gt;" Usage="Microsoft.Maui.Dispatching.DispatcherExtensions.DispatchAsync (dispatcher, func)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="dispatcher" Type="Microsoft.Maui.Dispatching.IDispatcher" RefType="this" />
        <Parameter Name="func" Type="System.Func&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type returned from this method.</typeparam>
        <param name="dispatcher">The <see cref="T:Microsoft.Maui.Dispatching.IDispatcher" /> instance this method is called on.</param>
        <param name="func">The method to be executed by the dispatcher.</param>
        <summary>
            Schedules the provided callback on the UI thread from a worker thread, and returns the results asynchronously.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> object containing information about the state of the dispatcher operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSynchronizationContextAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Threading.SynchronizationContext&gt; GetSynchronizationContextAsync (this Microsoft.Maui.Dispatching.IDispatcher dispatcher);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Threading.SynchronizationContext&gt; GetSynchronizationContextAsync(class Microsoft.Maui.Dispatching.IDispatcher dispatcher) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Dispatching.DispatcherExtensions.GetSynchronizationContextAsync(Microsoft.Maui.Dispatching.IDispatcher)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSynchronizationContextAsync (dispatcher As IDispatcher) As Task(Of SynchronizationContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;System::Threading::SynchronizationContext ^&gt; ^ GetSynchronizationContextAsync(Microsoft::Maui::Dispatching::IDispatcher ^ dispatcher);" />
      <MemberSignature Language="F#" Value="static member GetSynchronizationContextAsync : Microsoft.Maui.Dispatching.IDispatcher -&gt; System.Threading.Tasks.Task&lt;System.Threading.SynchronizationContext&gt;" Usage="Microsoft.Maui.Dispatching.DispatcherExtensions.GetSynchronizationContextAsync dispatcher" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Threading.SynchronizationContext&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispatcher" Type="Microsoft.Maui.Dispatching.IDispatcher" RefType="this" />
      </Parameters>
      <Docs>
        <param name="dispatcher">The <see cref="T:Microsoft.Maui.Dispatching.IDispatcher" /> instance this method is called on.</param>
        <summary>
            Gets the synchronization context for the current thread.
            </summary>
        <returns>A <see cref="T:System.Threading.SynchronizationContext" /> object representing the current synchronization context.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartTimer">
      <MemberSignature Language="C#" Value="public static void StartTimer (this Microsoft.Maui.Dispatching.IDispatcher dispatcher, TimeSpan interval, Func&lt;bool&gt; callback);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StartTimer(class Microsoft.Maui.Dispatching.IDispatcher dispatcher, valuetype System.TimeSpan interval, class System.Func`1&lt;bool&gt; callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Dispatching.DispatcherExtensions.StartTimer(Microsoft.Maui.Dispatching.IDispatcher,System.TimeSpan,System.Func{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub StartTimer (dispatcher As IDispatcher, interval As TimeSpan, callback As Func(Of Boolean))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void StartTimer(Microsoft::Maui::Dispatching::IDispatcher ^ dispatcher, TimeSpan interval, Func&lt;bool&gt; ^ callback);" />
      <MemberSignature Language="F#" Value="static member StartTimer : Microsoft.Maui.Dispatching.IDispatcher * TimeSpan * Func&lt;bool&gt; -&gt; unit" Usage="Microsoft.Maui.Dispatching.DispatcherExtensions.StartTimer (dispatcher, interval, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispatcher" Type="Microsoft.Maui.Dispatching.IDispatcher" RefType="this" />
        <Parameter Name="interval" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.Func&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="dispatcher">The <see cref="T:Microsoft.Maui.Dispatching.IDispatcher" /> instance this method is called on.</param>
        <param name="interval">Sets the amount of time between timer ticks.</param>
        <param name="callback">The callback on which the dispatcher returns when the event is dispatched.
            If the result of the callback is <see langword="true" />, the timer will repeat, otherwise the timer stops.</param>
        <summary>
            Starts a timer on the specified <see cref="T:Microsoft.Maui.Dispatching.IDispatcher" /> context.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="callback" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
