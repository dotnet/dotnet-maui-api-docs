<Type Name="IMauiServiceCollection" FullName="Microsoft.Maui.Hosting.IMauiServiceCollection">
  <TypeSignature Language="C#" Value="public interface IMauiServiceCollection : Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Collections.Generic.ICollection&lt;Microsoft.Extensions.DependencyInjection.ServiceDescriptor&gt;, System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.DependencyInjection.ServiceDescriptor&gt;, System.Collections.Generic.IList&lt;Microsoft.Extensions.DependencyInjection.ServiceDescriptor&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMauiServiceCollection implements class Microsoft.Extensions.DependencyInjection.IServiceCollection, class System.Collections.Generic.ICollection`1&lt;class Microsoft.Extensions.DependencyInjection.ServiceDescriptor&gt;, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Extensions.DependencyInjection.ServiceDescriptor&gt;, class System.Collections.Generic.IList`1&lt;class Microsoft.Extensions.DependencyInjection.ServiceDescriptor&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Maui.Hosting.IMauiServiceCollection" />
  <TypeSignature Language="VB.NET" Value="Public Interface IMauiServiceCollection&#xA;Implements ICollection(Of ServiceDescriptor), IEnumerable(Of ServiceDescriptor), IList(Of ServiceDescriptor), IServiceCollection" />
  <TypeSignature Language="C++ CLI" Value="public interface class IMauiServiceCollection : Microsoft::Extensions::DependencyInjection::IServiceCollection, System::Collections::Generic::ICollection&lt;Microsoft::Extensions::DependencyInjection::ServiceDescriptor ^&gt;, System::Collections::Generic::IEnumerable&lt;Microsoft::Extensions::DependencyInjection::ServiceDescriptor ^&gt;, System::Collections::Generic::IList&lt;Microsoft::Extensions::DependencyInjection::ServiceDescriptor ^&gt;" />
  <TypeSignature Language="F#" Value="type IMauiServiceCollection = interface&#xA;    interface IServiceCollection&#xA;    interface IList&lt;ServiceDescriptor&gt;&#xA;    interface ICollection&lt;ServiceDescriptor&gt;&#xA;    interface seq&lt;ServiceDescriptor&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Maui</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Extensions.DependencyInjection.IServiceCollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;Microsoft.Extensions.DependencyInjection.ServiceDescriptor&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.DependencyInjection.ServiceDescriptor&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IList&lt;Microsoft.Extensions.DependencyInjection.ServiceDescriptor&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="TryGetService">
      <MemberSignature Language="C#" Value="public bool TryGetService (Type serviceType, out Microsoft.Extensions.DependencyInjection.ServiceDescriptor? descriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetService(class System.Type serviceType, [out] class Microsoft.Extensions.DependencyInjection.ServiceDescriptor&amp; descriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Hosting.IMauiServiceCollection.TryGetService(System.Type,Microsoft.Extensions.DependencyInjection.ServiceDescriptor@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetService (serviceType As Type, ByRef descriptor As ServiceDescriptor) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetService(Type ^ serviceType, [Runtime::InteropServices::Out] Microsoft::Extensions::DependencyInjection::ServiceDescriptor ^ % descriptor);" />
      <MemberSignature Language="F#" Value="abstract member TryGetService : Type * ServiceDescriptor -&gt; bool" Usage="iMauiServiceCollection.TryGetService (serviceType, descriptor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="descriptor" Type="Microsoft.Extensions.DependencyInjection.ServiceDescriptor" RefType="out" />
      </Parameters>
      <Docs>
        <param name="serviceType">To be added.</param>
        <param name="descriptor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
