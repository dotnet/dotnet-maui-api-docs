<Type Name="MauiAppBuilder" FullName="Microsoft.Maui.Hosting.MauiAppBuilder">
  <TypeSignature Language="C#" Value="public sealed class MauiAppBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MauiAppBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Maui.Hosting.MauiAppBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MauiAppBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class MauiAppBuilder sealed" />
  <TypeSignature Language="F#" Value="type MauiAppBuilder = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Maui</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A builder for .NET MAUI cross-platform applications and services.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public Microsoft.Maui.Hosting.MauiApp Build ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Maui.Hosting.MauiApp Build() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Hosting.MauiAppBuilder.Build" />
      <MemberSignature Language="VB.NET" Value="Public Function Build () As MauiApp" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Maui::Hosting::MauiApp ^ Build();" />
      <MemberSignature Language="F#" Value="member this.Build : unit -&gt; Microsoft.Maui.Hosting.MauiApp" Usage="mauiAppBuilder.Build " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Hosting.MauiApp</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Builds the <see cref="T:Microsoft.Maui.Hosting.MauiApp" />.
            </summary>
        <returns>A configured <see cref="T:Microsoft.Maui.Hosting.MauiApp" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Configuration">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Configuration.ConfigurationManager Configuration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Extensions.Configuration.ConfigurationManager Configuration" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Hosting.MauiAppBuilder.Configuration" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Configuration As ConfigurationManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::Configuration::ConfigurationManager ^ Configuration { Microsoft::Extensions::Configuration::ConfigurationManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Configuration : Microsoft.Extensions.Configuration.ConfigurationManager" Usage="Microsoft.Maui.Hosting.MauiAppBuilder.Configuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Configuration.ConfigurationManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A collection of configuration providers for the application to compose. This is useful for adding new configuration sources and providers.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigureContainer&lt;TBuilder&gt;">
      <MemberSignature Language="C#" Value="public void ConfigureContainer&lt;TBuilder&gt; (Microsoft.Extensions.DependencyInjection.IServiceProviderFactory&lt;TBuilder&gt; factory, Action&lt;TBuilder&gt;? configure = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ConfigureContainer&lt;TBuilder&gt;(class Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1&lt;!!TBuilder&gt; factory, class System.Action`1&lt;!!TBuilder&gt; configure) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Hosting.MauiAppBuilder.ConfigureContainer``1(Microsoft.Extensions.DependencyInjection.IServiceProviderFactory{``0},System.Action{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub ConfigureContainer(Of TBuilder) (factory As IServiceProviderFactory(Of TBuilder), Optional configure As Action(Of TBuilder) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.ConfigureContainer : Microsoft.Extensions.DependencyInjection.IServiceProviderFactory&lt;'Builder&gt; * Action&lt;'Builder&gt; -&gt; unit" Usage="mauiAppBuilder.ConfigureContainer (factory, configure)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TBuilder" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="factory" Type="Microsoft.Extensions.DependencyInjection.IServiceProviderFactory&lt;TBuilder&gt;" />
        <Parameter Name="configure" Type="System.Action&lt;TBuilder&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TBuilder">The type of builder provided by the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1" />.</typeparam>
        <param name="factory">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1" />.</param>
        <param name="configure">
            A delegate used to configure the <typeparamref T="TBuilder" />. This can be used to configure services using
            APIS specific to the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1" /> implementation.
            </param>
        <summary>
            Registers a <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1" /> instance to be used to create the <see cref="T:System.IServiceProvider" />.
            </summary>
        <remarks>
          <para>
            <see cref="M:Microsoft.Maui.Hosting.MauiAppBuilder.ConfigureContainer``1(Microsoft.Extensions.DependencyInjection.IServiceProviderFactory{``0},System.Action{``0})" /> is called by <see cref="M:Microsoft.Maui.Hosting.MauiAppBuilder.Build" />
            and so the delegate provided by <paramref name="configure" /> will run after all other services have been registered.
            </para>
          <para>
            Multiple calls to <see cref="M:Microsoft.Maui.Hosting.MauiAppBuilder.ConfigureContainer``1(Microsoft.Extensions.DependencyInjection.IServiceProviderFactory{``0},System.Action{``0})" /> will replace
            the previously stored <paramref name="factory" /> and <paramref name="configure" /> delegate.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Logging">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Logging.ILoggingBuilder Logging { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Extensions.Logging.ILoggingBuilder Logging" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Hosting.MauiAppBuilder.Logging" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Logging As ILoggingBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::Logging::ILoggingBuilder ^ Logging { Microsoft::Extensions::Logging::ILoggingBuilder ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Logging : Microsoft.Extensions.Logging.ILoggingBuilder" Usage="Microsoft.Maui.Hosting.MauiAppBuilder.Logging" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.ILoggingBuilder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A collection of logging providers for the application to compose. This is useful for adding new logging providers.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Services">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.DependencyInjection.IServiceCollection Services { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Extensions.DependencyInjection.IServiceCollection Services" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Hosting.MauiAppBuilder.Services" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Services As IServiceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::DependencyInjection::IServiceCollection ^ Services { Microsoft::Extensions::DependencyInjection::IServiceCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Services : Microsoft.Extensions.DependencyInjection.IServiceCollection" Usage="Microsoft.Maui.Hosting.MauiAppBuilder.Services" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A collection of services for the application to compose. This is useful for adding user provided or framework provided services.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
