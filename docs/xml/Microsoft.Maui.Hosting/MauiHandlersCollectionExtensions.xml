<Type Name="MauiHandlersCollectionExtensions" FullName="Microsoft.Maui.Hosting.MauiHandlersCollectionExtensions">
  <TypeSignature Language="C#" Value="public static class MauiHandlersCollectionExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit MauiHandlersCollectionExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Maui.Hosting.MauiHandlersCollectionExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module MauiHandlersCollectionExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class MauiHandlersCollectionExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type MauiHandlersCollectionExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Maui</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddHandler">
      <MemberSignature Language="C#" Value="public static Microsoft.Maui.Hosting.IMauiHandlersCollection AddHandler (this Microsoft.Maui.Hosting.IMauiHandlersCollection handlersCollection, Type viewType, Type handlerType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Maui.Hosting.IMauiHandlersCollection AddHandler(class Microsoft.Maui.Hosting.IMauiHandlersCollection handlersCollection, class System.Type viewType, class System.Type handlerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Hosting.MauiHandlersCollectionExtensions.AddHandler(Microsoft.Maui.Hosting.IMauiHandlersCollection,System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddHandler (handlersCollection As IMauiHandlersCollection, viewType As Type, handlerType As Type) As IMauiHandlersCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Maui::Hosting::IMauiHandlersCollection ^ AddHandler(Microsoft::Maui::Hosting::IMauiHandlersCollection ^ handlersCollection, Type ^ viewType, Type ^ handlerType);" />
      <MemberSignature Language="F#" Value="static member AddHandler : Microsoft.Maui.Hosting.IMauiHandlersCollection * Type * Type -&gt; Microsoft.Maui.Hosting.IMauiHandlersCollection" Usage="Microsoft.Maui.Hosting.MauiHandlersCollectionExtensions.AddHandler (handlersCollection, viewType, handlerType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Hosting.IMauiHandlersCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handlersCollection" Type="Microsoft.Maui.Hosting.IMauiHandlersCollection" RefType="this" />
        <Parameter Name="viewType" Type="System.Type" />
        <Parameter Name="handlerType" Type="System.Type">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="handlersCollection">To be added.</param>
        <param name="viewType">To be added.</param>
        <param name="handlerType">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHandler&lt;TType,TTypeRender&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Maui.Hosting.IMauiHandlersCollection AddHandler&lt;TType,TTypeRender&gt; (this Microsoft.Maui.Hosting.IMauiHandlersCollection handlersCollection) where TType : Microsoft.Maui.IElement where TTypeRender : Microsoft.Maui.IElementHandler;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Maui.Hosting.IMauiHandlersCollection AddHandler&lt;(class Microsoft.Maui.IElement) TType, (class Microsoft.Maui.IElementHandler) TTypeRender&gt;(class Microsoft.Maui.Hosting.IMauiHandlersCollection handlersCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Hosting.MauiHandlersCollectionExtensions.AddHandler``2(Microsoft.Maui.Hosting.IMauiHandlersCollection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddHandler(Of TType As IElement, TTypeRender As IElement) (handlersCollection As IMauiHandlersCollection) As IMauiHandlersCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TType, typename TTypeRender&gt;&#xA; where TType : Microsoft::Maui::IElement where TTypeRender : Microsoft::Maui::IElementHandler[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Maui::Hosting::IMauiHandlersCollection ^ AddHandler(Microsoft::Maui::Hosting::IMauiHandlersCollection ^ handlersCollection);" />
      <MemberSignature Language="F#" Value="static member AddHandler : Microsoft.Maui.Hosting.IMauiHandlersCollection -&gt; Microsoft.Maui.Hosting.IMauiHandlersCollection (requires 'ype :&gt; Microsoft.Maui.IElement and 'ypeRender :&gt; Microsoft.Maui.IElementHandler)" Usage="Microsoft.Maui.Hosting.MauiHandlersCollectionExtensions.AddHandler handlersCollection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Hosting.IMauiHandlersCollection</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TType">
          <Constraints>
            <InterfaceName>Microsoft.Maui.IElement</InterfaceName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TTypeRender">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
          <Constraints>
            <InterfaceName>Microsoft.Maui.IElementHandler</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="handlersCollection" Type="Microsoft.Maui.Hosting.IMauiHandlersCollection" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TType">To be added.</typeparam>
        <typeparam name="TTypeRender">To be added.</typeparam>
        <param name="handlersCollection">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAddHandler">
      <MemberSignature Language="C#" Value="public static Microsoft.Maui.Hosting.IMauiHandlersCollection TryAddHandler (this Microsoft.Maui.Hosting.IMauiHandlersCollection handlersCollection, Type viewType, Type handlerType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Maui.Hosting.IMauiHandlersCollection TryAddHandler(class Microsoft.Maui.Hosting.IMauiHandlersCollection handlersCollection, class System.Type viewType, class System.Type handlerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Hosting.MauiHandlersCollectionExtensions.TryAddHandler(Microsoft.Maui.Hosting.IMauiHandlersCollection,System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TryAddHandler (handlersCollection As IMauiHandlersCollection, viewType As Type, handlerType As Type) As IMauiHandlersCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Maui::Hosting::IMauiHandlersCollection ^ TryAddHandler(Microsoft::Maui::Hosting::IMauiHandlersCollection ^ handlersCollection, Type ^ viewType, Type ^ handlerType);" />
      <MemberSignature Language="F#" Value="static member TryAddHandler : Microsoft.Maui.Hosting.IMauiHandlersCollection * Type * Type -&gt; Microsoft.Maui.Hosting.IMauiHandlersCollection" Usage="Microsoft.Maui.Hosting.MauiHandlersCollectionExtensions.TryAddHandler (handlersCollection, viewType, handlerType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Hosting.IMauiHandlersCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handlersCollection" Type="Microsoft.Maui.Hosting.IMauiHandlersCollection" RefType="this" />
        <Parameter Name="viewType" Type="System.Type" />
        <Parameter Name="handlerType" Type="System.Type">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="handlersCollection">To be added.</param>
        <param name="viewType">To be added.</param>
        <param name="handlerType">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAddHandler&lt;TType,TTypeRender&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Maui.Hosting.IMauiHandlersCollection TryAddHandler&lt;TType,TTypeRender&gt; (this Microsoft.Maui.Hosting.IMauiHandlersCollection handlersCollection) where TType : Microsoft.Maui.IView where TTypeRender : Microsoft.Maui.IViewHandler;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Maui.Hosting.IMauiHandlersCollection TryAddHandler&lt;(class Microsoft.Maui.IView) TType, (class Microsoft.Maui.IViewHandler) TTypeRender&gt;(class Microsoft.Maui.Hosting.IMauiHandlersCollection handlersCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Hosting.MauiHandlersCollectionExtensions.TryAddHandler``2(Microsoft.Maui.Hosting.IMauiHandlersCollection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TryAddHandler(Of TType As IView, TTypeRender As IView) (handlersCollection As IMauiHandlersCollection) As IMauiHandlersCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TType, typename TTypeRender&gt;&#xA; where TType : Microsoft::Maui::IView where TTypeRender : Microsoft::Maui::IViewHandler[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Maui::Hosting::IMauiHandlersCollection ^ TryAddHandler(Microsoft::Maui::Hosting::IMauiHandlersCollection ^ handlersCollection);" />
      <MemberSignature Language="F#" Value="static member TryAddHandler : Microsoft.Maui.Hosting.IMauiHandlersCollection -&gt; Microsoft.Maui.Hosting.IMauiHandlersCollection (requires 'ype :&gt; Microsoft.Maui.IView and 'ypeRender :&gt; Microsoft.Maui.IViewHandler)" Usage="Microsoft.Maui.Hosting.MauiHandlersCollectionExtensions.TryAddHandler handlersCollection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Hosting.IMauiHandlersCollection</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TType">
          <Constraints>
            <InterfaceName>Microsoft.Maui.IView</InterfaceName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TTypeRender">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
          <Constraints>
            <InterfaceName>Microsoft.Maui.IViewHandler</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="handlersCollection" Type="Microsoft.Maui.Hosting.IMauiHandlersCollection" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TType">To be added.</typeparam>
        <typeparam name="TTypeRender">To be added.</typeparam>
        <param name="handlersCollection">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
