<Type Name="BarometerData" FullName="Microsoft.Maui.Devices.Sensors.BarometerData">
  <TypeSignature Language="C#" Value="public readonly struct BarometerData : IEquatable&lt;Microsoft.Maui.Devices.Sensors.BarometerData&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit BarometerData extends System.ValueType implements class System.IEquatable`1&lt;valuetype Microsoft.Maui.Devices.Sensors.BarometerData&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Maui.Devices.Sensors.BarometerData" />
  <TypeSignature Language="VB.NET" Value="Public Structure BarometerData&#xA;Implements IEquatable(Of BarometerData)" />
  <TypeSignature Language="C++ CLI" Value="public value class BarometerData : IEquatable&lt;Microsoft::Maui::Devices::Sensors::BarometerData&gt;" />
  <TypeSignature Language="F#" Value="type BarometerData = struct" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Maui.Essentials</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;Microsoft.Maui.Devices.Sensors.BarometerData&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Contains the pressure measured by the user's device barometer.
            </summary>
    <remarks />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BarometerData (double pressure);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 pressure) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Devices.Sensors.BarometerData.#ctor(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pressure As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BarometerData(double pressure);" />
      <MemberSignature Language="F#" Value="new Microsoft.Maui.Devices.Sensors.BarometerData : double -&gt; Microsoft.Maui.Devices.Sensors.BarometerData" Usage="new Microsoft.Maui.Devices.Sensors.BarometerData pressure" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Essentials</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pressure" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="pressure">The current pressure reading.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Maui.Devices.Sensors.BarometerData" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (Microsoft.Maui.Devices.Sensors.BarometerData other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype Microsoft.Maui.Devices.Sensors.BarometerData other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Devices.Sensors.BarometerData.Equals(Microsoft.Maui.Devices.Sensors.BarometerData)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As BarometerData) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(Microsoft::Maui::Devices::Sensors::BarometerData other);" />
      <MemberSignature Language="F#" Value="override this.Equals : Microsoft.Maui.Devices.Sensors.BarometerData -&gt; bool" Usage="barometerData.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Essentials</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Microsoft.Maui.Devices.Sensors.BarometerData" />
      </Parameters>
      <Docs>
        <param name="other">
          <see cref="T:Microsoft.Maui.Devices.Sensors.BarometerData" /> object to compare with.</param>
        <summary>
            Compares the underlying <see cref="P:Microsoft.Maui.Devices.Sensors.BarometerData.PressureInHectopascals" /> instances.
            </summary>
        <returns>
          <see langword="true" /> if they are equal, otherwise <see langword="false" />.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object? obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Devices.Sensors.BarometerData.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="barometerData.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Essentials</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Object to compare with.</param>
        <summary>
            Compares the underlying <see cref="T:Microsoft.Maui.Devices.Sensors.BarometerData" /> instances.
            </summary>
        <returns>
          <see langword="true" /> if they are equal, otherwise <see langword="false" />.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Devices.Sensors.BarometerData.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="barometerData.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Essentials</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Get has code for object.</summary>
        <returns>The hash code.</returns>
        <remarks />
        <inheritdoc cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (Microsoft.Maui.Devices.Sensors.BarometerData left, Microsoft.Maui.Devices.Sensors.BarometerData right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype Microsoft.Maui.Devices.Sensors.BarometerData left, valuetype Microsoft.Maui.Devices.Sensors.BarometerData right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Devices.Sensors.BarometerData.op_Equality(Microsoft.Maui.Devices.Sensors.BarometerData,Microsoft.Maui.Devices.Sensors.BarometerData)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As BarometerData, right As BarometerData) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(Microsoft::Maui::Devices::Sensors::BarometerData left, Microsoft::Maui::Devices::Sensors::BarometerData right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : Microsoft.Maui.Devices.Sensors.BarometerData * Microsoft.Maui.Devices.Sensors.BarometerData -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Essentials</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="Microsoft.Maui.Devices.Sensors.BarometerData" />
        <Parameter Name="right" Type="Microsoft.Maui.Devices.Sensors.BarometerData" />
      </Parameters>
      <Docs>
        <param name="left">Left to compare.</param>
        <param name="right">Right to compare.</param>
        <summary>
            Equality operator for equals.
            </summary>
        <returns>
          <see langword="true" /> if objects are equal, otherwise <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (Microsoft.Maui.Devices.Sensors.BarometerData left, Microsoft.Maui.Devices.Sensors.BarometerData right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype Microsoft.Maui.Devices.Sensors.BarometerData left, valuetype Microsoft.Maui.Devices.Sensors.BarometerData right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Devices.Sensors.BarometerData.op_Inequality(Microsoft.Maui.Devices.Sensors.BarometerData,Microsoft.Maui.Devices.Sensors.BarometerData)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As BarometerData, right As BarometerData) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(Microsoft::Maui::Devices::Sensors::BarometerData left, Microsoft::Maui::Devices::Sensors::BarometerData right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : Microsoft.Maui.Devices.Sensors.BarometerData * Microsoft.Maui.Devices.Sensors.BarometerData -&gt; bool" Usage="Microsoft.Maui.Devices.Sensors.BarometerData.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Essentials</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="Microsoft.Maui.Devices.Sensors.BarometerData" />
        <Parameter Name="right" Type="Microsoft.Maui.Devices.Sensors.BarometerData" />
      </Parameters>
      <Docs>
        <param name="left">Left to compare.</param>
        <param name="right">Right to compare.</param>
        <summary>
            Inequality operator.
            </summary>
        <returns>
          <see langword="true" /> if objects are not equal, otherwise <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PressureInHectopascals">
      <MemberSignature Language="C#" Value="public double PressureInHectopascals { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 PressureInHectopascals" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Devices.Sensors.BarometerData.PressureInHectopascals" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PressureInHectopascals As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double PressureInHectopascals { double get(); };" />
      <MemberSignature Language="F#" Value="member this.PressureInHectopascals : double" Usage="Microsoft.Maui.Devices.Sensors.BarometerData.PressureInHectopascals" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Essentials</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the current pressure in hectopascals.
            </summary>
        <value />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Devices.Sensors.BarometerData.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="barometerData.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Essentials</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns a string representation of the current values of <see cref="P:Microsoft.Maui.Devices.Sensors.BarometerData.PressureInHectopascals" />.
            </summary>
        <returns>A string representation of this instance in the format of <c>PressureInHectopascals: {value}</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
