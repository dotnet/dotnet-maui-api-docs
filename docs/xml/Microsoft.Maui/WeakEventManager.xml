<Type Name="WeakEventManager" FullName="Microsoft.Maui.WeakEventManager">
  <TypeSignature Language="C#" Value="public class WeakEventManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WeakEventManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Maui.WeakEventManager" />
  <TypeSignature Language="VB.NET" Value="Public Class WeakEventManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class WeakEventManager" />
  <TypeSignature Language="F#" Value="type WeakEventManager = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Maui</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WeakEventManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.WeakEventManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WeakEventManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEventHandler">
      <MemberSignature Language="C#" Value="public void AddEventHandler (Delegate? handler, string eventName = &quot;&quot;);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddEventHandler(class System.Delegate handler, string eventName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.WeakEventManager.AddEventHandler(System.Delegate,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEventHandler (handler As Delegate, Optional eventName As String = &quot;&quot;)" />
      <MemberSignature Language="F#" Value="member this.AddEventHandler : Delegate * string -&gt; unit" Usage="weakEventManager.AddEventHandler (handler, eventName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="System.Delegate" />
        <Parameter Name="eventName" Type="System.String">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.CallerMemberName]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.CallerMemberName&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="handler">To be added.</param>
        <param name="eventName">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEventHandler&lt;TEventArgs&gt;">
      <MemberSignature Language="C#" Value="public void AddEventHandler&lt;TEventArgs&gt; (EventHandler&lt;TEventArgs&gt; handler, string eventName = &quot;&quot;) where TEventArgs : EventArgs;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddEventHandler&lt;(class System.EventArgs) TEventArgs&gt;(class System.EventHandler`1&lt;!!TEventArgs&gt; handler, string eventName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.WeakEventManager.AddEventHandler``1(System.EventHandler{``0},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEventHandler(Of TEventArgs As EventArgs) (handler As EventHandler(Of TEventArgs), Optional eventName As String = &quot;&quot;)" />
      <MemberSignature Language="F#" Value="member this.AddEventHandler : EventHandler&lt;'EventArgs (requires 'EventArgs :&gt; EventArgs)&gt; * string -&gt; unit (requires 'EventArgs :&gt; EventArgs)" Usage="weakEventManager.AddEventHandler (handler, eventName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEventArgs">
          <Constraints>
            <BaseTypeName>System.EventArgs</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="handler" Type="System.EventHandler&lt;TEventArgs&gt;" />
        <Parameter Name="eventName" Type="System.String">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.CallerMemberName]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.CallerMemberName&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TEventArgs">To be added.</typeparam>
        <param name="handler">To be added.</param>
        <param name="eventName">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleEvent">
      <MemberSignature Language="C#" Value="public void HandleEvent (object sender, object args, string eventName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void HandleEvent(object sender, object args, string eventName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.WeakEventManager.HandleEvent(System.Object,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub HandleEvent (sender As Object, args As Object, eventName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void HandleEvent(System::Object ^ sender, System::Object ^ args, System::String ^ eventName);" />
      <MemberSignature Language="F#" Value="member this.HandleEvent : obj * obj * string -&gt; unit" Usage="weakEventManager.HandleEvent (sender, args, eventName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="args" Type="System.Object" />
        <Parameter Name="eventName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <param name="args">To be added.</param>
        <param name="eventName">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveEventHandler">
      <MemberSignature Language="C#" Value="public void RemoveEventHandler (Delegate? handler, string eventName = &quot;&quot;);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveEventHandler(class System.Delegate handler, string eventName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.WeakEventManager.RemoveEventHandler(System.Delegate,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveEventHandler (handler As Delegate, Optional eventName As String = &quot;&quot;)" />
      <MemberSignature Language="F#" Value="member this.RemoveEventHandler : Delegate * string -&gt; unit" Usage="weakEventManager.RemoveEventHandler (handler, eventName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="System.Delegate" />
        <Parameter Name="eventName" Type="System.String">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.CallerMemberName]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.CallerMemberName&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="handler">To be added.</param>
        <param name="eventName">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveEventHandler&lt;TEventArgs&gt;">
      <MemberSignature Language="C#" Value="public void RemoveEventHandler&lt;TEventArgs&gt; (EventHandler&lt;TEventArgs&gt; handler, string eventName = &quot;&quot;) where TEventArgs : EventArgs;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveEventHandler&lt;(class System.EventArgs) TEventArgs&gt;(class System.EventHandler`1&lt;!!TEventArgs&gt; handler, string eventName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.WeakEventManager.RemoveEventHandler``1(System.EventHandler{``0},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveEventHandler(Of TEventArgs As EventArgs) (handler As EventHandler(Of TEventArgs), Optional eventName As String = &quot;&quot;)" />
      <MemberSignature Language="F#" Value="member this.RemoveEventHandler : EventHandler&lt;'EventArgs (requires 'EventArgs :&gt; EventArgs)&gt; * string -&gt; unit (requires 'EventArgs :&gt; EventArgs)" Usage="weakEventManager.RemoveEventHandler (handler, eventName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEventArgs">
          <Constraints>
            <BaseTypeName>System.EventArgs</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="handler" Type="System.EventHandler&lt;TEventArgs&gt;" />
        <Parameter Name="eventName" Type="System.String">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.CallerMemberName]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.CallerMemberName&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TEventArgs">To be added.</typeparam>
        <param name="handler">To be added.</param>
        <param name="eventName">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
