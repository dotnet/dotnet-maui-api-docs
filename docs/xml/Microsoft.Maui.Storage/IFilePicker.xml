<Type Name="IFilePicker" FullName="Microsoft.Maui.Storage.IFilePicker">
  <TypeSignature Language="C#" Value="public interface IFilePicker" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IFilePicker" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Maui.Storage.IFilePicker" />
  <TypeSignature Language="VB.NET" Value="Public Interface IFilePicker" />
  <TypeSignature Language="C++ CLI" Value="public interface class IFilePicker" />
  <TypeSignature Language="F#" Value="type IFilePicker = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Maui.Essentials</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-maui-8.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Lets the user pick a file from the device's storage.
            </summary>
    <remarks>To enable iCloud capabilities in the file picker on iOS, you'll need to add the iCloud Documents in your <c>Entitlements.plist</c>.</remarks>
  </Docs>
  <Members>
    <Member MemberName="PickAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Maui.Storage.FileResult?&gt; PickAsync (Microsoft.Maui.Storage.PickOptions? options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Maui.Storage.FileResult&gt; PickAsync(class Microsoft.Maui.Storage.PickOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Storage.IFilePicker.PickAsync(Microsoft.Maui.Storage.PickOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function PickAsync (Optional options As PickOptions = Nothing) As Task(Of FileResult)" />
      <MemberSignature Language="F#" Value="abstract member PickAsync : Microsoft.Maui.Storage.PickOptions -&gt; System.Threading.Tasks.Task&lt;Microsoft.Maui.Storage.FileResult&gt;" Usage="iFilePicker.PickAsync options" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Essentials</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-maui-8.0">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Maui.Storage.FileResult&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="net-maui-8.0">
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 2 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 2 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Microsoft.Maui.Storage.PickOptions" />
      </Parameters>
      <Docs>
        <param name="options">File picker options to use; may be <see langword="null" /> for default options.</param>
        <summary>
            Opens the default file picker to allow the user to pick a single file.
            </summary>
        <returns>File picking result object, or <see langword="null" /> if picking was cancelled by the user.</returns>
        <remarks>
            File types can be specified in order to limit files that can be selected, using a
            <see cref="T:Microsoft.Maui.Storage.PickOptions" /> object. Note that this method may re-throw platform specific exceptions that
            occurred during file picking. When calling <see cref="M:Microsoft.Maui.Storage.IFilePicker.PickAsync(Microsoft.Maui.Storage.PickOptions)" /> again while showing a file
            picker, the <see cref="T:System.Threading.Tasks.Task" /> object that was returned from the first call is cancelled. Be sure to
            also handle the <see cref="T:System.Threading.Tasks.TaskCanceledException" /> in this case.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="PickMultipleAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Maui.Storage.FileResult&gt;&gt; PickMultipleAsync (Microsoft.Maui.Storage.PickOptions? options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Maui.Storage.FileResult&gt;&gt; PickMultipleAsync(class Microsoft.Maui.Storage.PickOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Storage.IFilePicker.PickMultipleAsync(Microsoft.Maui.Storage.PickOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function PickMultipleAsync (Optional options As PickOptions = Nothing) As Task(Of IEnumerable(Of FileResult))" />
      <MemberSignature Language="F#" Value="abstract member PickMultipleAsync : Microsoft.Maui.Storage.PickOptions -&gt; System.Threading.Tasks.Task&lt;seq&lt;Microsoft.Maui.Storage.FileResult&gt;&gt;" Usage="iFilePicker.PickMultipleAsync options" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Essentials</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Maui.Storage.FileResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Microsoft.Maui.Storage.PickOptions">
          <Attributes>
            <Attribute FrameworkAlternate="net-maui-8.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="options">File picker options to use; may be <see langword="null" /> for default options.</param>
        <summary>
            Opens the default file picker to allow the user to pick one or more files.
            </summary>
        <returns>An IEnumerable of file picking result objects, or <see langword="null" /> if picking was cancelled by the user.</returns>
        <remarks>
            File types can be specified in order to limit files that can be selected, using a
            <see cref="T:Microsoft.Maui.Storage.PickOptions" /> object. Note that this method may re-throw platform specific exceptions that
            occurred during file picking. When calling <see cref="M:Microsoft.Maui.Storage.IFilePicker.PickMultipleAsync(Microsoft.Maui.Storage.PickOptions)" /> again while showing a file
            picker, the <see cref="T:System.Threading.Tasks.Task" /> object that was returned from the first call is cancelled. Be sure to
            also handle the <see cref="T:System.Threading.Tasks.TaskCanceledException" /> in this case.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
