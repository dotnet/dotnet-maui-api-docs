<Type Name="IEffectsBuilder" FullName="Microsoft.Maui.Controls.Hosting.IEffectsBuilder">
  <TypeSignature Language="C#" Value="public interface IEffectsBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEffectsBuilder" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Maui.Controls.Hosting.IEffectsBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEffectsBuilder" />
  <TypeSignature Language="C++ CLI" Value="public interface class IEffectsBuilder" />
  <TypeSignature Language="F#" Value="type IEffectsBuilder = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.Maui.Controls.Hosting.IEffectsBuilder Add (Type TEffect, Type TPlatformEffect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Maui.Controls.Hosting.IEffectsBuilder Add(class System.Type TEffect, class System.Type TPlatformEffect) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Hosting.IEffectsBuilder.Add(System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (TEffect As Type, TPlatformEffect As Type) As IEffectsBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Maui::Controls::Hosting::IEffectsBuilder ^ Add(Type ^ TEffect, Type ^ TPlatformEffect);" />
      <MemberSignature Language="F#" Value="abstract member Add : Type * Type -&gt; Microsoft.Maui.Controls.Hosting.IEffectsBuilder" Usage="iEffectsBuilder.Add (TEffect, TPlatformEffect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.Hosting.IEffectsBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="TEffect" Type="System.Type" />
        <Parameter Name="TPlatformEffect" Type="System.Type">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.NonPublicConstructors | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.NonPublicConstructors | System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="TEffect">To be added.</param>
        <param name="TPlatformEffect">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add&lt;TEffect,TPlatformEffect&gt;">
      <MemberSignature Language="C#" Value="public Microsoft.Maui.Controls.Hosting.IEffectsBuilder Add&lt;TEffect,TPlatformEffect&gt; () where TEffect : Microsoft.Maui.Controls.RoutingEffect where TPlatformEffect : Microsoft.Maui.Controls.Platform.PlatformEffect, new();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Maui.Controls.Hosting.IEffectsBuilder Add&lt;(class Microsoft.Maui.Controls.RoutingEffect) TEffect, .ctor (class Microsoft.Maui.Controls.Platform.PlatformEffect) TPlatformEffect&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Hosting.IEffectsBuilder.Add``2" />
      <MemberSignature Language="VB.NET" Value="Public Function Add(Of TEffect As RoutingEffect, TPlatformEffect As RoutingEffect) () As IEffectsBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TEffect, typename TPlatformEffect&gt;&#xA; where TEffect : Microsoft::Maui::Controls::RoutingEffect where TPlatformEffect : Microsoft::Maui::Controls::Platform::PlatformEffectgcnew() Microsoft::Maui::Controls::Hosting::IEffectsBuilder ^ Add();" />
      <MemberSignature Language="F#" Value="abstract member Add : unit -&gt; Microsoft.Maui.Controls.Hosting.IEffectsBuilder (requires 'Effect :&gt; Microsoft.Maui.Controls.RoutingEffect and 'PlatformEffect :&gt; Microsoft.Maui.Controls.Platform.PlatformEffect and 'PlatformEffect : (new : unit -&gt; 'PlatformEffect))" Usage="iEffectsBuilder.Add " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.Hosting.IEffectsBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEffect">
          <Constraints>
            <BaseTypeName>Microsoft.Maui.Controls.RoutingEffect</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TPlatformEffect">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <BaseTypeName>Microsoft.Maui.Controls.Platform.PlatformEffect</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TEffect">To be added.</typeparam>
        <typeparam name="TPlatformEffect">To be added.</typeparam>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
